//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PGPGenerator.M10BusinessProcess {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoapDataContract", Namespace="http://Mitra10.com/SoapHeaders")]
    [System.SerializableAttribute()]
    public partial class SoapDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPClient {
            get {
                return this.IPClientField;
            }
            set {
                if ((object.ReferenceEquals(this.IPClientField, value) != true)) {
                    this.IPClientField = value;
                    this.RaisePropertyChanged("IPClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Privilege", Namespace="http://schemas.datacontract.org/2004/07/Mitra10.BusinessProcess.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Privilege : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivilegeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivilegeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivilegeId {
            get {
                return this.PrivilegeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivilegeIdField, value) != true)) {
                    this.PrivilegeIdField = value;
                    this.RaisePropertyChanged("PrivilegeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivilegeName {
            get {
                return this.PrivilegeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivilegeNameField, value) != true)) {
                    this.PrivilegeNameField = value;
                    this.RaisePropertyChanged("PrivilegeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleDataContract", Namespace="http://schemas.datacontract.org/2004/07/Mitra10.BusinessProcess.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ModuleDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AuditTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuditActivity {
            get {
                return this.AuditActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditActivityField, value) != true)) {
                    this.AuditActivityField = value;
                    this.RaisePropertyChanged("AuditActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AuditTime {
            get {
                return this.AuditTimeField;
            }
            set {
                if ((this.AuditTimeField.Equals(value) != true)) {
                    this.AuditTimeField = value;
                    this.RaisePropertyChanged("AuditTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuditUserName {
            get {
                return this.AuditUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditUserNameField, value) != true)) {
                    this.AuditUserNameField = value;
                    this.RaisePropertyChanged("AuditUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleCategory {
            get {
                return this.ModuleCategoryField;
            }
            set {
                if ((this.ModuleCategoryField.Equals(value) != true)) {
                    this.ModuleCategoryField = value;
                    this.RaisePropertyChanged("ModuleCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleTypeId {
            get {
                return this.ModuleTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleTypeIdField, value) != true)) {
                    this.ModuleTypeIdField = value;
                    this.RaisePropertyChanged("ModuleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Mitra10.com/SoapHeaders", ConfigurationName="M10BusinessProcess.IBusinessProcess")]
    [WCFExtrasPlus.Soap.SoapHeadersAttribute()]
    public interface IBusinessProcess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationConfigurationValue" +
            "1", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationConfigurationValue" +
            "1Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditApplicationConfigurationValue1(int ApplicationId, string ApplicationConfigurationKey, string ApplicationConfigurationValue1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationConfigurationValue" +
            "1", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationConfigurationValue" +
            "1Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditApplicationConfigurationValue1Async(int ApplicationId, string ApplicationConfigurationKey, string ApplicationConfigurationValue1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppl.ConfigByApp_ParameterId_A" +
            "pp_Config_Key", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppl.ConfigByApp_ParameterId_A" +
            "pp_Config_KeyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyResponse GetApplConfigByApp_ParameterId_App_Config_Key(PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppl.ConfigByApp_ParameterId_A" +
            "pp_Config_Key", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppl.ConfigByApp_ParameterId_A" +
            "pp_Config_KeyResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyResponse> GetApplConfigByApp_ParameterId_App_Config_KeyAsync(PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationAllRes" +
            "ponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllResponse GetApplicationConfigurationAll(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationAllRes" +
            "ponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllResponse> GetApplicationConfigurationAllAsync(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationServiceCat" +
            "egory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationServiceCat" +
            "egoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryResponse GetRowsCountApplicationServiceCategory(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationServiceCat" +
            "egory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationServiceCat" +
            "egoryResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryResponse> GetRowsCountApplicationServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountApplicationConfiguration(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionResponse")]
        System.Threading.Tasks.Task<int> GetRowsCountApplicationConfigurationAsync(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServices", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServicesResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountServices(System.Nullable<int> ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServices", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServicesResponse")]
        System.Threading.Tasks.Task<int> GetRowsCountServicesAsync(System.Nullable<int> ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryById" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryById" +
            "Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdResponse GetApplicationServiceCategoryById(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryById" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryById" +
            "Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdResponse> GetApplicationServiceCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryResponse GetApplicationServiceCategory(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceCategoryResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryResponse> GetApplicationServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteApplication(int ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationResponse")]
        System.Threading.Tasks.Task<string> DeleteApplicationAsync(int ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByApplicationIdName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByApplicationIdNameResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameResponse GetServiceByApplicationIdName(PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByApplicationIdName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByApplicationIdNameResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameResponse> GetServiceByApplicationIdNameAsync(PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetServiceByIdResponse GetServiceById(PGPGenerator.M10BusinessProcess.GetServiceByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceByIdResponse> GetServiceByIdAsync(PGPGenerator.M10BusinessProcess.GetServiceByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationParameterRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateApplicationParameter(string ConfigurationParameterId, string ConfigurationParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationParameterRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateApplicationParameterAsync(string ConfigurationParameterId, string ConfigurationParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditApplicationParameter(string ConfigurationParameterId, string ConfigurationParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationParameterResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditApplicationParameterAsync(string ConfigurationParameterId, string ConfigurationParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationParameterRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string DeleteApplicationParameter(string ConfigurationParameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteApplicationParameterRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> DeleteApplicationParameterAsync(string ConfigurationParameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateRoleType(string RoleTypeId, string RoleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateRoleTypeAsync(string RoleTypeId, string RoleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditRoleType(string RoleTypeId, string RoleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditRoleTypeAsync(string RoleTypeId, string RoleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string DeleteRoleType(string RoleTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> DeleteRoleTypeAsync(string RoleTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleTypeByNameResponse GetRoleTypeByName(PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleTypeByNameResponse> GetRoleTypeByNameAsync(PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleTypeByIdResponse GetRoleTypeById(PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleTypeByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleTypeByIdResponse> GetRoleTypeByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeResponse GetRowsCountRoleType(PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleTypeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeResponse> GetRowsCountRoleTypeAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleTypeAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleTypeAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedResponse isRoleTypeAlreadyUsed(PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleTypeAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleTypeAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedResponse> isRoleTypeAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isDataValid", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isDataValidResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isDataValidResponse isDataValid(PGPGenerator.M10BusinessProcess.isDataValidRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isDataValid", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isDataValidResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isDataValidResponse> isDataValidAsync(PGPGenerator.M10BusinessProcess.isDataValidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationUnionW" +
            "ithTempTable", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationUnionW" +
            "ithTempTableResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableResponse GetApplicationConfigurationUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationUnionW" +
            "ithTempTable", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationConfigurationUnionW" +
            "ithTempTableResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableResponse> GetApplicationConfigurationUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceUnionWithTem" +
            "pTable", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceUnionWithTem" +
            "pTableResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableResponse GetApplicationServiceUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceUnionWithTem" +
            "pTable", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationServiceUnionWithTem" +
            "pTableResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableResponse> GetApplicationServiceUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryByCode", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryByCodeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCategoryByCodeResponse GetCategoryByCode(PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryByCode", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryByCodeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryByCodeResponse> GetCategoryByCodeAsync(PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCategoryResponse GetCategory(PGPGenerator.M10BusinessProcess.GetCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryResponse> GetCategoryAsync(PGPGenerator.M10BusinessProcess.GetCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationByCode", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationByCodeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetLocationByCodeResponse GetLocationByCode(PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationByCode", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationByCodeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationByCodeResponse> GetLocationByCodeAsync(PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetLocationResponse GetLocation(PGPGenerator.M10BusinessProcess.GetLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationResponse> GetLocationAsync(PGPGenerator.M10BusinessProcess.GetLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCategoryResponse GetRowsCountCategory(PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCategoryResponse> GetRowsCountCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountLocationResponse GetRowsCountLocation(PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountLocationResponse> GetRowsCountLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleResponse GetRowsCountRole(PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleResponse> GetRowsCountRoleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleResponse GetRole(PGPGenerator.M10BusinessProcess.GetRoleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleResponse> GetRoleAsync(PGPGenerator.M10BusinessProcess.GetRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateRole(string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateRoleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateRoleAsync(string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleByIdResponse GetRoleById(PGPGenerator.M10BusinessProcess.GetRoleByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleByIdResponse> GetRoleByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedResponse isRoleAlreadyUsed(PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isRoleAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedResponse> isRoleAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditRole(int RoleId, string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditRoleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditRoleAsync(int RoleId, string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string DeleteRole(int RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteRoleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> DeleteRoleAsync(int RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdResponse GetRowsCountRoleById(PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdResponse> GetRowsCountRoleByIdAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureUnionA" +
            "ction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureUnionA" +
            "ctionResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionResponse GetRoleMerchandiseStructureUnionAction(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureUnionA" +
            "ction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureUnionA" +
            "ctionResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionResponse> GetRoleMerchandiseStructureUnionActionAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructure", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureResponse GetRoleMerchandiseStructure(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructure", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureResponse> GetRoleMerchandiseStructureAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleMerchandiseStruct" +
            "ure", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleMerchandiseStruct" +
            "ureResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountRoleMerchandiseStructure(int RoleId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleMerchandiseStruct" +
            "ure", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleMerchandiseStruct" +
            "ureResponse")]
        System.Threading.Tasks.Task<int> GetRowsCountRoleMerchandiseStructureAsync(int RoleId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureByIdRe" +
            "sponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdResponse GetRoleMerchandiseStructureById(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleMerchandiseStructureByIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdResponse> GetRoleMerchandiseStructureByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyUnionAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyUnionActionResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionResponse GetRoleCompanyUnionAction(PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyUnionAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyUnionActionResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionResponse> GetRoleCompanyUnionActionAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyResponse GetRoleCompany(PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyResponse> GetRoleCompanyAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountRoleCompany(int RoleId, System.Nullable<int> CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleCompanyResponse")]
        System.Threading.Tasks.Task<int> GetRowsCountRoleCompanyAsync(int RoleId, System.Nullable<int> CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdResponse GetRoleCompanyById(PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleCompanyByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdResponse> GetRoleCompanyByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeUnionTempAc" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeUnionTempAc" +
            "tionResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionResponse GetRoleModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeUnionTempAc" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeUnionTempAc" +
            "tionResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionResponse> GetRoleModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeAllResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllResponse GetRoleModulePrivilegeAll(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeAllResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllResponse> GetRoleModulePrivilegeAllAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModulePrivilegeRe" +
            "sponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountRoleModulePrivilege(int RoleId, System.Nullable<int> ModuleId, string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModulePrivilegeRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> GetRowsCountRoleModulePrivilegeAsync(int RoleId, System.Nullable<int> ModuleId, string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeResponse GetRoleModulePrivilege(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModulePrivilegeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeResponse> GetRoleModulePrivilegeAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModulePrivilegeUnionW" +
            "ithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModulePrivilegeUnionW" +
            "ithTempResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempResponse GetRowsCountModulePrivilegeUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModulePrivilegeUnionW" +
            "ithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModulePrivilegeUnionW" +
            "ithTempResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempResponse> GetRowsCountModulePrivilegeUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModuleUnionWithTe" +
            "mp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModuleUnionWithTe" +
            "mpResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempResponse GetRowsCountRoleModuleUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModuleUnionWithTe" +
            "mp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountRoleModuleUnionWithTe" +
            "mpResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempResponse> GetRowsCountRoleModuleUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleUnionTempActionRespo" +
            "nse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionResponse GetRoleModuleUnionTempAction(PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleUnionTempActionRespo" +
            "nse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionResponse> GetRoleModuleUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleByIdResponse GetRoleModuleById(PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleByIdResponse> GetRoleModuleByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleResponse GetRoleModule(PGPGenerator.M10BusinessProcess.GetRoleModuleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRoleModuleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleResponse> GetRoleModuleAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetMarkModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetMarkModulePrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeResponse GetMarkModulePrivilege(PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetMarkModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetMarkModulePrivilegeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeResponse> GetMarkModulePrivilegeAsync(PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModulePrivilegeUnionTempAction" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModulePrivilegeUnionTempAction" +
            "Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionResponse GetModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModulePrivilegeUnionTempAction" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModulePrivilegeUnionTempAction" +
            "Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionResponse> GetModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyUnionTableActi" +
            "on", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyUnionTableActi" +
            "onResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionResponse GetRowsCountCompanyUnionTableAction(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyUnionTableActi" +
            "on", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyUnionTableActi" +
            "onResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionResponse> GetRowsCountCompanyUnionTableActionAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyUnionTempActionResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionResponse GetCompanyUnionTempAction(PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyUnionTempActionResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionResponse> GetCompanyUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountPrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountPrivilege(string Searching);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountPrivilegeResponse")]
        System.Threading.Tasks.Task<int> GetRowsCountPrivilegeAsync(string Searching);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreatePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreatePrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreatePrivilege(string PrivilegeId, string PrivilegeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreatePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreatePrivilegeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreatePrivilegeAsync(string PrivilegeId, string PrivilegeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeResponse GetPrivilege(PGPGenerator.M10BusinessProcess.GetPrivilegeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeResponse> GetPrivilegeAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditPrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditPrivilege(string PrivilegeId, string PrivilegeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditPrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditPrivilegeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditPrivilegeAsync(string PrivilegeId, string PrivilegeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteModuleCategory(int ModuleCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleCategoryResponse")]
        System.Threading.Tasks.Task<string> DeleteModuleCategoryAsync(int ModuleCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeByIdResponse GetPrivilegeById(PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeByIdResponse> GetPrivilegeByIdAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isPrivilegeAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isPrivilegeAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedResponse isPrivilegeAlreadyUsed(PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isPrivilegeAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isPrivilegeAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedResponse> isPrivilegeAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryUnionWithTemp" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryUnionWithTemp" +
            "Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        int GetRowsCountCategoryUnionWithTemp(string HashString, string searching, System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryUnionWithTemp" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCategoryUnionWithTemp" +
            "Response")]
        System.Threading.Tasks.Task<int> GetRowsCountCategoryUnionWithTempAsync(string HashString, string searching, System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryUnionTableTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryUnionTableTempResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempResponse GetCategoryUnionTableTemp(PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryUnionTableTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCategoryUnionTableTempResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempResponse> GetCategoryUnionTableTempAsync(PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleUnionTempResponse GetModuleUnionTemp(PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleUnionTempResponse> GetModuleUnionTempAsync(PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateProcessLog", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateProcessLogResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateProcessLog(string ApplicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateProcessLog", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateProcessLogResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateProcessLogAsync(string ApplicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToEnd", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToEndResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string UpdateProcessLogToEnd();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToEnd", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToEndResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> UpdateProcessLogToEndAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToError", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToErrorResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string UpdateProcessLogToError(string ApplicationName, string ErrorDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToError", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/UpdateProcessLogToErrorResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> UpdateProcessLogToErrorAsync(string ApplicationName, string ErrorDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempByAppId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempByAppIdResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdResponse GetModuleUnionTempByAppId(PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempByAppId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleUnionTempByAppIdResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdResponse> GetModuleUnionTempByAppIdAsync(PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyRoleNew", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyRoleNewResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyRoleNewResponse GetCompanyRoleNew(PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyRoleNew", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyRoleNewResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyRoleNewResponse> GetCompanyRoleNewAsync(PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrinterTypeResponse GetPrinterType(PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterTypeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterTypeResponse> GetPrinterTypeAsync(PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterListResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrinterListResponse GetPrinterList(PGPGenerator.M10BusinessProcess.GetPrinterListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterListResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterListResponse> GetPrinterListAsync(PGPGenerator.M10BusinessProcess.GetPrinterListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserDefaultPrinter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserDefaultPrinterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string CreateUserDefaultPrinter(string EnterpriseModule, string LocationCode, int DefaultPrinterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserDefaultPrinter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserDefaultPrinterResponse")]
        System.Threading.Tasks.Task<string> CreateUserDefaultPrinterAsync(string EnterpriseModule, string LocationCode, int DefaultPrinterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserDefaultPrinter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserDefaultPrinterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterResponse GetUserDefaultPrinter(PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserDefaultPrinter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserDefaultPrinterResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterResponse> GetUserDefaultPrinterAsync(PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyByNameResponse GetCompanyByName(PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyByNameResponse> GetCompanyByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyByIdResponse GetCompanyById(PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyByIdResponse> GetCompanyByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        void CreateCompany(string CompanyName, string CompanyShortName, bool IsEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyResponse")]
        System.Threading.Tasks.Task CreateCompanyAsync(string CompanyName, string CompanyShortName, bool IsEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationAllRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllResponse GetCompanyConfigurationAll(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationAll", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationAllRespons" +
            "e")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllResponse> GetCompanyConfigurationAllAsync(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByNameResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameResponse GetCompanyParameterByName(PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByNameResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameResponse> GetCompanyParameterByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdResponse GetCompanyParameterById(PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyParameterByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdResponse> GetCompanyParameterByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationP" +
            "arameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationP" +
            "arameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterResponse GetRowsCountCompanyConfigurationParameter(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationP" +
            "arameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationP" +
            "arameterResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterResponse> GetRowsCountCompanyConfigurationParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditCompany(int CompanyId, string CompanyName, string CompanyShortName, bool IsEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditCompanyAsync(int CompanyId, string CompanyName, string CompanyShortName, bool IsEnterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedResponse isCompanyAlreadyUsed(PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedResponse> isCompanyAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteCompany(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyResponse")]
        System.Threading.Tasks.Task<string> DeleteCompanyAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyResponse GetRowsCountCompany(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyResponse> GetRowsCountCompanyAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyParameterRespo" +
            "nse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterResponse GetRowsCountCompanyParameter(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyParameterRespo" +
            "nse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterResponse> GetRowsCountCompanyParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateCompanyParameter(string CompanyParameterId, string CompanyParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyParameterResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateCompanyParameterAsync(string CompanyParameterId, string CompanyParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditCompanyParameter(string CompanyParameterId, string CompanyParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyParameterResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditCompanyParameterAsync(string CompanyParameterId, string CompanyParameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyParameterAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyParameterAlreadyUsedResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedResponse isCompanyParameterAlreadyUsed(PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyParameterAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isCompanyParameterAlreadyUsedResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedResponse> isCompanyParameterAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteCompanyParameter(string CompanyParameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyParameterResponse")]
        System.Threading.Tasks.Task<string> DeleteCompanyParameterAsync(string CompanyParameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyLocationRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationResponse GetRowsCountCompanyLocation(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyLocationRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationResponse> GetRowsCountCompanyLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameResponse GetCompanyLocationByName(PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameResponse> GetCompanyLocationByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateCompanyLocation(int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyLocationResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateCompanyLocationAsync(int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdResponse GetCompanyLocationById(PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdResponse> GetCompanyLocationByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetLocationNameResponse GetLocationName(PGPGenerator.M10BusinessProcess.GetLocationNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocationNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationNameResponse> GetLocationNameAsync(PGPGenerator.M10BusinessProcess.GetLocationNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteCompanyLocation(int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyLocationResponse")]
        System.Threading.Tasks.Task<string> DeleteCompanyLocationAsync(int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationR" +
            "esponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationResponse GetRowsCountCompanyConfiguration(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyConfigurationR" +
            "esponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationResponse> GetRowsCountCompanyConfigurationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationByNameResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameResponse GetCompanyConfigurationByName(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyConfigurationByNameResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameResponse> GetCompanyConfigurationByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyConfigurationRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyConfigurationRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyConfigurationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditCompanyConfigurationResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyConfigurationRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyConfiguration", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyConfigurationRespons" +
            "e")]
        System.Threading.Tasks.Task<string> DeleteCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyCutOffDataResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataResponse GetRowsCountCompanyCutOffData(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountCompanyCutOffDataResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataResponse> GetRowsCountCompanyCutOffDataAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyCutOffDataResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateCompanyCutOffData(int CompanyId, string CutOffDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateCompanyCutOffDataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateCompanyCutOffDataAsync(int CompanyId, string CutOffDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyCutOffDataResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataResponse GetCompanyCutOffData(PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyCutOffDataResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataResponse> GetCompanyCutOffDataAsync(PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyCutOffDataResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteCompanyCutOffData(int CompanyId, string CutOffDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyCutOffData", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteCompanyCutOffDataResponse")]
        System.Threading.Tasks.Task<string> DeleteCompanyCutOffDataAsync(int CompanyId, string CutOffDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServiceCategoryRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryResponse GetRowsCountServiceCategory(PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountServiceCategoryRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryResponse> GetRowsCountServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameResponse GetServiceCategoryByName(PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameResponse> GetServiceCategoryByNameAsync(PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdResponse GetServiceCategoryById(PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetServiceCategoryByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdResponse> GetServiceCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateServiceCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        void CreateServiceCategory(string ServiceCategoryId, string ServiceCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateServiceCategoryResponse")]
        System.Threading.Tasks.Task CreateServiceCategoryAsync(string ServiceCategoryId, string ServiceCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditServiceCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditServiceCategory(string ServiceCategoryId, string ServiceCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditServiceCategoryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditServiceCategoryAsync(string ServiceCategoryId, string ServiceCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isServiceCategoryAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isServiceCategoryAlreadyUsedRespo" +
            "nse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedResponse isServiceCategoryAlreadyUsed(PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isServiceCategoryAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isServiceCategoryAlreadyUsedRespo" +
            "nse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedResponse> isServiceCategoryAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteServiceCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteServiceCategory(string ServiceCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteServiceCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteServiceCategoryResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceCategoryAsync(string ServiceCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleResponse GetRowsCountUserRole(PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserRoleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleResponse> GetRowsCountUserRoleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByUserNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameResponse GetUserRoleByUserName(PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByUserNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameResponse> GetUserRoleByUserNameAsync(PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserRole(string UserName, int RoleId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserRoleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserRoleAsync(string UserName, int RoleId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserRoleLocationResponse GetUserRoleLocation(PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleLocationResponse> GetUserRoleLocationAsync(PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteUserRoleLocation(string UserName, int RoleId, int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleLocationResponse")]
        System.Threading.Tasks.Task<string> DeleteUserRoleLocationAsync(string UserName, int RoleId, int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationUnionWithTempT" +
            "able", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationUnionWithTempT" +
            "ableResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableResponse GetUserRoleLocationUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationUnionWithTempT" +
            "able", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleLocationUnionWithTempT" +
            "ableResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableResponse> GetUserRoleLocationUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditUserRole(string UserName, int RoleId, int CompanyId, string AuditUserName, System.Data.DataTable dtLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserRoleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditUserRoleAsync(string UserName, int RoleId, int CompanyId, string AuditUserName, System.Data.DataTable dtLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationUnionWithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationUnionWithTempRe" +
            "sponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempResponse GetCompanyLocationUnionWithTemp(PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationUnionWithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCompanyLocationUnionWithTempRe" +
            "sponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempResponse> GetCompanyLocationUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleLocationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleLocationAlreadyUsedResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedResponse isUserRoleLocationAlreadyUsed(PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleLocationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleLocationAlreadyUsedResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedResponse> isUserRoleLocationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteUserRole(string UserName, int RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRole", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserRoleResponse")]
        System.Threading.Tasks.Task<string> DeleteUserRoleAsync(string UserName, int RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleExistsResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserRoleExistsResponse isUserRoleExists(PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserRoleExistsResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserRoleExistsResponse> isUserRoleExistsAsync(PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserModuleExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserModuleExistsResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserModuleExistsResponse isUserModuleExists(PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserModuleExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserModuleExistsResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserModuleExistsResponse> isUserModuleExistsAsync(PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameResponse GetUserModuleByUserName(PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameResponse> GetUserModuleByUserNameAsync(PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleResponse GetRowsCountUserModule(PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModuleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleResponse> GetRowsCountUserModuleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyResponse GetRowsCountUserCompany(PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserCompanyResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyResponse> GetRowsCountUserCompanyAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserCompanyResponse GetUserCompany(PGPGenerator.M10BusinessProcess.GetUserCompanyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserCompanyResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserCompanyResponse> GetUserCompanyAsync(PGPGenerator.M10BusinessProcess.GetUserCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserCompanyExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserCompanyExistsResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserCompanyExistsResponse isUserCompanyExists(PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserCompanyExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserCompanyExistsResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserCompanyExistsResponse> isUserCompanyExistsAsync(PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationExistsResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserLocationExistsResponse isUserLocationExists(PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationExistsResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserLocationExistsResponse> isUserLocationExistsAsync(PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserCompany(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserCompanyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserCompanyAsync(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteUserCompany(string UserName, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserCompanyResponse")]
        System.Threading.Tasks.Task<string> DeleteUserCompanyAsync(string UserName, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule2", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule2Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Response GetRowsCountUserModule2(PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule2", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModule2Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Response> GetRowsCountUserModule2Async(PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName2", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName2Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Response GetUserModuleByUserName2(PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName2", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleByUserName2Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Response> GetUserModuleByUserName2Async(PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserModulePrivilege(string UserName, int ModuleId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeResponse" +
            "")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserModulePrivilegeAsync(string UserName, int ModuleId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserModulePrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditUserModulePrivilege(string UserName, int ModuleId, System.Data.DataTable dtPrivilege, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserModulePrivilegeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditUserModulePrivilegeAsync(string UserName, int ModuleId, System.Data.DataTable dtPrivilege, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModulePrivilegeUnionTempAc" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModulePrivilegeUnionTempAc" +
            "tionResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionResponse GetUserModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModulePrivilegeUnionTempAc" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModulePrivilegeUnionTempAc" +
            "tionResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionResponse> GetUserModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModulePrivilegeUn" +
            "ionWithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModulePrivilegeUn" +
            "ionWithTempResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempResponse GetRowsCountUserModulePrivilegeUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModulePrivilegeUn" +
            "ionWithTemp", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserModulePrivilegeUn" +
            "ionWithTempResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempResponse> GetRowsCountUserModulePrivilegeUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserLocationByNameResponse GetUserLocationByName(PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationByNameResponse> GetUserLocationByNameAsync(PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationUnionTempActionRes" +
            "ponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionResponse GetUserLocationUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationUnionTempAction", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationUnionTempActionRes" +
            "ponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionResponse> GetUserLocationUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditUserLocation(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserLocationResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditUserLocationAsync(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationAlreadyUsedResponse" +
            "")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedResponse isUserLocationAlreadyUsed(PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserLocationAlreadyUsedResponse" +
            "")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedResponse> isUserLocationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserMerchandiseRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseResponse GetRowsCountUserMerchandise(PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserMerchandiseRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseResponse> GetRowsCountUserMerchandiseAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserMerchandiseResponse GetUserMerchandise(PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserMerchandiseResponse> GetUserMerchandiseAsync(PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseUnionTempAction" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseUnionTempAction" +
            "Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionResponse GetUserMerchandiseUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseUnionTempAction" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserMerchandiseUnionTempAction" +
            "Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionResponse> GetUserMerchandiseUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserMerchandiseResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserMerchandise(string UserName, System.Data.DataTable dtCategory, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserMerchandiseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserMerchandiseAsync(string UserName, System.Data.DataTable dtCategory, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserMerchandiseResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditUserMerchandise(string UserName, System.Data.DataTable dtCategory, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserMerchandise", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserMerchandiseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditUserMerchandiseAsync(string UserName, System.Data.DataTable dtCategory, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserMerchandiseExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserMerchandiseExistsResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsResponse isUserMerchandiseExists(PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserMerchandiseExists", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isUserMerchandiseExistsResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsResponse> isUserMerchandiseExistsAsync(PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeSingle", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeSingleRe" +
            "sponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserModulePrivilegeSingle(string UserName, int ModuelId, string PrivilegeId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeSingle", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserModulePrivilegeSingleRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserModulePrivilegeSingleAsync(string UserName, int ModuelId, string PrivilegeId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateUserLocation(string UserName, int CompanyId, System.Data.DataTable dtLocation, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateUserLocationResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateUserLocationAsync(string UserName, int CompanyId, System.Data.DataTable dtLocation, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationResponse GetRowsCountUserLocation(PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountUserLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationResponse> GetRowsCountUserLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserCompanyResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditUserCompany(string UserName, int CompanyId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserCompany", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditUserCompanyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditUserCompanyAsync(string UserName, int CompanyId, string AuditUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameResponse GetModuleCategoryByName(PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameResponse> GetModuleCategoryByNameAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/SessionExtend", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/SessionExtendResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        void SessionExtend();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/SessionExtend", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/SessionExtendResponse")]
        System.Threading.Tasks.Task SessionExtendAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLastCutOffID", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLastCutOffIDResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetLastCutOffIDResponse GetLastCutOffID(PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLastCutOffID", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLastCutOffIDResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLastCutOffIDResponse> GetLastCutOffIDAsync(PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleByNameResponse GetModuleByName(PGPGenerator.M10BusinessProcess.GetModuleByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByNameResponse> GetModuleByNameAsync(PGPGenerator.M10BusinessProcess.GetModuleByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleByIdResponse GetModuleById(PGPGenerator.M10BusinessProcess.GetModuleByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByIdResponse> GetModuleByIdAsync(PGPGenerator.M10BusinessProcess.GetModuleByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdResponse GetModuleCategoryById(PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdResponse> GetModuleCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeForModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeForModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleResponse GetPrivilegeForModule(PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeForModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrivilegeForModuleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleResponse> GetPrivilegeForModuleAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleTypeResponse GetModuleType(PGPGenerator.M10BusinessProcess.GetModuleTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleTypeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleTypeResponse> GetModuleTypeAsync(PGPGenerator.M10BusinessProcess.GetModuleTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleFilterType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleFilterTypeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleFilterTypeResponse GetModuleFilterType(PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleFilterType", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleFilterTypeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleFilterTypeResponse> GetModuleFilterTypeAsync(PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetAppParameterResponse GetAppParameter(PGPGenerator.M10BusinessProcess.GetAppParameterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetAppParameterResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetAppParameterResponse> GetAppParameterAsync(PGPGenerator.M10BusinessProcess.GetAppParameterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountAppParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountAppParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterResponse GetRowsCountAppParameter(PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountAppParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountAppParameterResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterResponse> GetRowsCountAppParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryListResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryListResponse GetModuleCategoryList(PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleCategoryListResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryListResponse> GetModuleCategoryListAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryListRes" +
            "ponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListResponse GetRowsCountModuleCategoryList(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryList", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryListRes" +
            "ponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListResponse> GetRowsCountModuleCategoryListAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateModuleCategory(string ModuleCategoryName, string Icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleCategoryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateModuleCategoryAsync(string ModuleCategoryName, string Icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string CreateModule(string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateModuleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> CreateModuleAsync(string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleCategoryResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditModuleCategory(int ModuleCategoryId, string ModuleCategoryName, string Icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleCategoryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditModuleCategoryAsync(int ModuleCategoryId, string ModuleCategoryName, string Icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditModule(int ModuleId, string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditModuleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditModuleAsync(int ModuleId, string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeletePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeletePrivilegeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeletePrivilege(string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeletePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeletePrivilegeResponse")]
        System.Threading.Tasks.Task<string> DeletePrivilegeAsync(string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteModule(int ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteModuleResponse")]
        System.Threading.Tasks.Task<string> DeleteModuleAsync(int ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleCategoryAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleCategoryAlreadyUsedRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedResponse isModuleCategoryAlreadyUsed(PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleCategoryAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleCategoryAlreadyUsedRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedResponse> isModuleCategoryAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedResponse isModuleAlreadyUsed(PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isModuleAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedResponse> isModuleAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryRespons" +
            "e")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryResponse GetRowsCountModuleCategory(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategory", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleCategoryRespons" +
            "e")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryResponse> GetRowsCountModuleCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleResponse GetRowsCountModule(PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountModuleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleResponse> GetRowsCountModuleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserLocationResponse GetUserLocation(PGPGenerator.M10BusinessProcess.GetUserLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationResponse> GetUserLocationAsync(PGPGenerator.M10BusinessProcess.GetUserLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetLocNameResponse GetLocName(PGPGenerator.M10BusinessProcess.GetLocNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetLocNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocNameResponse> GetLocNameAsync(PGPGenerator.M10BusinessProcess.GetLocNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteUserLocation(string UserName, int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteUserLocationResponse")]
        System.Threading.Tasks.Task<string> DeleteUserLocationAsync(string UserName, int CompanyId, string LocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCekRolModPrivUser", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCekRolModPrivUserResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserResponse GetCekRolModPrivUser(PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCekRolModPrivUser", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetCekRolModPrivUserResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserResponse> GetCekRolModPrivUserAsync(PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRolModPrivUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRolModPrivUserNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameResponse GetRolModPrivUserName(PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRolModPrivUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRolModPrivUserNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameResponse> GetRolModPrivUserNameAsync(PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteSingleUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteSingleUserModulePrivilegeRe" +
            "sponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string DeleteSingleUserModulePrivilege(string UserName, int ModuleId, string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteSingleUserModulePrivilege", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/DeleteSingleUserModulePrivilegeRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> DeleteSingleUserModulePrivilegeAsync(string UserName, int ModuleId, string PrivilegeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByRoleId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByRoleIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdResponse GetUserRoleByRoleId(PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByRoleId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserRoleByRoleIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdResponse> GetUserRoleByRoleIdAsync(PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByModuleTypeId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByModuleTypeIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdResponse GetModuleByModuleTypeId(PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByModuleTypeId", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleByModuleTypeIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdResponse> GetModuleByModuleTypeIdAsync(PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterBrand", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterBrandResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrinterBrandResponse GetPrinterBrand(PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterBrand", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterBrandResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterBrandResponse> GetPrinterBrandAsync(PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrinterLocationResponse GetPrinterLocation(PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocation", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterLocationResponse> GetPrinterLocationAsync(PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationIsDefault", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationIsDefaultRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultResponse GetPrinterLocationIsDefault(PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationIsDefault", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetPrinterLocationIsDefaultRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultResponse> GetPrinterLocationIsDefaultAsync(PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string AuthenticateByUserName(string UserName, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameResponse")]
        System.Threading.Tasks.Task<string> AuthenticateByUserNameAsync(string UserName, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameCompanyLoca" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameCompanyLoca" +
            "tionResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string AuthenticateByUserNameCompanyLocation(string UserName, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameCompanyLoca" +
            "tion", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticateByUserNameCompanyLoca" +
            "tionResponse")]
        System.Threading.Tasks.Task<string> AuthenticateByUserNameCompanyLocationAsync(string UserName, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticatebyUserNamePassword", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticatebyUserNamePasswordRes" +
            "ponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string AuthenticatebyUserNamePassword(string UserName, string Password, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticatebyUserNamePassword", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthenticatebyUserNamePasswordRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> AuthenticatebyUserNamePasswordAsync(string UserName, string Password, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/Authorize", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthorizeResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.AuthorizeResponse Authorize(PGPGenerator.M10BusinessProcess.AuthorizeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/Authorize", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/AuthorizeResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.AuthorizeResponse> AuthorizeAsync(PGPGenerator.M10BusinessProcess.AuthorizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        System.Collections.Generic.Dictionary<string, PGPGenerator.M10BusinessProcess.ModuleDataContract[]> GetUserModule(System.Nullable<int> CompanyId, string Location, string ModuleTypeId, int ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetUserModuleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, PGPGenerator.M10BusinessProcess.ModuleDataContract[]>> GetUserModuleAsync(System.Nullable<int> CompanyId, string Location, string ModuleTypeId, int ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        void CreateApplication(string ApplicationName, string ApplicationShortName, System.Data.DataTable dtAppConfig, System.Data.DataTable dtService, System.Data.DataTable dtOtherService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/CreateApplicationResponse")]
        System.Threading.Tasks.Task CreateApplicationAsync(string ApplicationName, string ApplicationShortName, System.Data.DataTable dtAppConfig, System.Data.DataTable dtService, System.Data.DataTable dtOtherService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByIdResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationByIdResponse GetApplicationById(PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByIdResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationByIdResponse> GetApplicationByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByNameResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationByNameResponse GetApplicationByName(PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationByNameResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationByNameResponse> GetApplicationByNameAsync(PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationResponse GetRowsCountApplication(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationResponse> GetRowsCountApplicationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionParameterResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterResponse GetRowsCountApplicationConfigurationParameter(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionParameter", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetRowsCountApplicationConfigurat" +
            "ionParameterResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterResponse> GetRowsCountApplicationConfigurationParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetModuleResponse GetModule(PGPGenerator.M10BusinessProcess.GetModuleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModule", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetModuleResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleResponse> GetModuleAsync(PGPGenerator.M10BusinessProcess.GetModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationAlreadyUsedResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedResponse isApplicationAlreadyUsed(PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationAlreadyUsed", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationAlreadyUsedResponse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedResponse> isApplicationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationParameterAlreadyUsed" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationParameterAlreadyUsed" +
            "Response")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedResponse isApplicationParameterAlreadyUsed(PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationParameterAlreadyUsed" +
            "", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/isApplicationParameterAlreadyUsed" +
            "Response")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedResponse> isApplicationParameterAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        string EditApplication(int ApplicationId, string ApplicationName, string ApplicationShortName, string[] dtAppConfig, string[] dtAppService, string[] dtOtherService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplication", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/EditApplicationResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErrorMessage")]
        System.Threading.Tasks.Task<string> EditApplicationAsync(int ApplicationId, string ApplicationName, string ApplicationShortName, string[] dtAppConfig, string[] dtAppService, string[] dtOtherService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByNameResp" +
            "onse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameResponse GetApplicationParameterByName(PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByName", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByNameResp" +
            "onse")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameResponse> GetApplicationParameterByNameAsync(PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByIdRespon" +
            "se")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("SOAPDataContract", typeof(PGPGenerator.M10BusinessProcess.SoapDataContract), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdResponse GetApplicationParameterById(PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterById", ReplyAction="http://Mitra10.com/SoapHeaders/IBusinessProcess/GetApplicationParameterByIdRespon" +
            "se")]
        System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdResponse> GetApplicationParameterByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppl.ConfigByApp_ParameterId_App_Config_Key", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplConfigByApp_ParameterId_App_Config_KeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationParameterId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ApplicationConfigurationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetApplConfigByApp_ParameterId_App_Config_KeyRequest() {
        }
        
        public GetApplConfigByApp_ParameterId_App_Config_KeyRequest(string ApplicationParameterId, string ApplicationConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ApplicationParameterId = ApplicationParameterId;
            this.ApplicationConfigurationKey = ApplicationConfigurationKey;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppl.ConfigByApp_ParameterId_App_Config_KeyResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplConfigByApp_ParameterId_App_Config_KeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAppl.ConfigByApp_ParameterId_App_Config_KeyResult", Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplConfigByApp_ParameterId_App_Config_KeyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplConfigByApp_ParameterId_App_Config_KeyResponse() {
        }
        
        public GetApplConfigByApp_ParameterId_App_Config_KeyResponse(System.Data.DataTable GetApplConfigByApp_ParameterId_App_Config_KeyResult, string MessageError) {
            this.GetApplConfigByApp_ParameterId_App_Config_KeyResult = GetApplConfigByApp_ParameterId_App_Config_KeyResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationConfigurationAll", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationConfigurationAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> ApplicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string ApplicationParameterId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public string ApplicationConfigurationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=5)]
        public System.Nullable<int> PageIndex;
        
        public GetApplicationConfigurationAllRequest() {
        }
        
        public GetApplicationConfigurationAllRequest(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ApplicationId = ApplicationId;
            this.CompanyId = CompanyId;
            this.ApplicationParameterId = ApplicationParameterId;
            this.ApplicationConfigurationKey = ApplicationConfigurationKey;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationConfigurationAllResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationConfigurationAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationConfigurationAllResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplicationConfigurationAllResponse() {
        }
        
        public GetApplicationConfigurationAllResponse(System.Data.DataTable GetApplicationConfigurationAllResult, string MessageError) {
            this.GetApplicationConfigurationAllResult = GetApplicationConfigurationAllResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplicationServiceCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationServiceCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CategoryName;
        
        public GetRowsCountApplicationServiceCategoryRequest() {
        }
        
        public GetRowsCountApplicationServiceCategoryRequest(string CategoryName) {
            this.CategoryName = CategoryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplicationServiceCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationServiceCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountApplicationServiceCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountApplicationServiceCategoryResponse() {
        }
        
        public GetRowsCountApplicationServiceCategoryResponse(int GetRowsCountApplicationServiceCategoryResult, string MessageError) {
            this.GetRowsCountApplicationServiceCategoryResult = GetRowsCountApplicationServiceCategoryResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceCategoryById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceCategoryByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetApplicationServiceCategoryByIdRequest() {
        }
        
        public GetApplicationServiceCategoryByIdRequest(string ServiceCategoryId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ServiceCategoryId = ServiceCategoryId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceCategoryByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceCategoryByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationServiceCategoryByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetApplicationServiceCategoryByIdResponse() {
        }
        
        public GetApplicationServiceCategoryByIdResponse(System.Data.DataTable GetApplicationServiceCategoryByIdResult, string ErrorMessage) {
            this.GetApplicationServiceCategoryByIdResult = GetApplicationServiceCategoryByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetApplicationServiceCategoryRequest() {
        }
        
        public GetApplicationServiceCategoryRequest(string ServiceCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ServiceCategoryName = ServiceCategoryName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationServiceCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetApplicationServiceCategoryResponse() {
        }
        
        public GetApplicationServiceCategoryResponse(System.Data.DataTable GetApplicationServiceCategoryResult, string ErrorMessage) {
            this.GetApplicationServiceCategoryResult = GetApplicationServiceCategoryResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceByApplicationIdName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceByApplicationIdNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> ApplicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ServiceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetServiceByApplicationIdNameRequest() {
        }
        
        public GetServiceByApplicationIdNameRequest(System.Nullable<int> ApplicationId, string ServiceName, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ApplicationId = ApplicationId;
            this.ServiceName = ServiceName;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceByApplicationIdNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceByApplicationIdNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetServiceByApplicationIdNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetServiceByApplicationIdNameResponse() {
        }
        
        public GetServiceByApplicationIdNameResponse(System.Data.DataTable GetServiceByApplicationIdNameResult, string MessageError) {
            this.GetServiceByApplicationIdNameResult = GetServiceByApplicationIdNameResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> ServiceId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        public GetServiceByIdRequest() {
        }
        
        public GetServiceByIdRequest(System.Nullable<int> ServiceId, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ServiceId = ServiceId;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetServiceByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetServiceByIdResponse() {
        }
        
        public GetServiceByIdResponse(System.Data.DataTable GetServiceByIdResult, string MessageError) {
            this.GetServiceByIdResult = GetServiceByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleTypeByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleTypeByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleTypeByNameRequest() {
        }
        
        public GetRoleTypeByNameRequest(string RoleType, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleType = RoleType;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleTypeByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleTypeByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleTypeByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleTypeByNameResponse() {
        }
        
        public GetRoleTypeByNameResponse(System.Data.DataTable GetRoleTypeByNameResult, string ErrorMessage) {
            this.GetRoleTypeByNameResult = GetRoleTypeByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleTypeById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleTypeByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleTypeByIdRequest() {
        }
        
        public GetRoleTypeByIdRequest(string RoleTypeId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleTypeId = RoleTypeId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleTypeByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleTypeByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleTypeByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleTypeByIdResponse() {
        }
        
        public GetRoleTypeByIdResponse(System.Data.DataTable GetRoleTypeByIdResult, string ErrorMessage) {
            this.GetRoleTypeByIdResult = GetRoleTypeByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleType", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleTypeName;
        
        public GetRowsCountRoleTypeRequest() {
        }
        
        public GetRowsCountRoleTypeRequest(string RoleTypeName) {
            this.RoleTypeName = RoleTypeName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleTypeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountRoleTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountRoleTypeResponse() {
        }
        
        public GetRowsCountRoleTypeResponse(int GetRowsCountRoleTypeResult, string MessageError) {
            this.GetRowsCountRoleTypeResult = GetRowsCountRoleTypeResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isRoleTypeAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isRoleTypeAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleTypeId;
        
        public isRoleTypeAlreadyUsedRequest() {
        }
        
        public isRoleTypeAlreadyUsedRequest(string RoleTypeId) {
            this.RoleTypeId = RoleTypeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isRoleTypeAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isRoleTypeAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isRoleTypeAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isRoleTypeAlreadyUsedResponse() {
        }
        
        public isRoleTypeAlreadyUsedResponse(bool isRoleTypeAlreadyUsedResult, string MessageError) {
            this.isRoleTypeAlreadyUsedResult = isRoleTypeAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isDataValid", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isDataValidRequest {
        
        public isDataValidRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isDataValidResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isDataValidResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isDataValidResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isDataValidResponse() {
        }
        
        public isDataValidResponse(bool isDataValidResult, string MessageError) {
            this.isDataValidResult = isDataValidResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationConfigurationUnionWithTempTable", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationConfigurationUnionWithTempTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> ApplicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string ApplicationParameterId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public string ApplicationConfigurationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Data.DataTable dttemp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=5)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=6)]
        public System.Nullable<int> PageIndex;
        
        public GetApplicationConfigurationUnionWithTempTableRequest() {
        }
        
        public GetApplicationConfigurationUnionWithTempTableRequest(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey, System.Data.DataTable dttemp, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ApplicationId = ApplicationId;
            this.CompanyId = CompanyId;
            this.ApplicationParameterId = ApplicationParameterId;
            this.ApplicationConfigurationKey = ApplicationConfigurationKey;
            this.dttemp = dttemp;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationConfigurationUnionWithTempTableResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationConfigurationUnionWithTempTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationConfigurationUnionWithTempTableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplicationConfigurationUnionWithTempTableResponse() {
        }
        
        public GetApplicationConfigurationUnionWithTempTableResponse(System.Data.DataTable GetApplicationConfigurationUnionWithTempTableResult, string MessageError) {
            this.GetApplicationConfigurationUnionWithTempTableResult = GetApplicationConfigurationUnionWithTempTableResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceUnionWithTempTable", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceUnionWithTempTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> ApplicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ServiceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageIndex;
        
        public GetApplicationServiceUnionWithTempTableRequest() {
        }
        
        public GetApplicationServiceUnionWithTempTableRequest(System.Nullable<int> ApplicationId, string ServiceName, System.Data.DataTable dtAction, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.ApplicationId = ApplicationId;
            this.ServiceName = ServiceName;
            this.dtAction = dtAction;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationServiceUnionWithTempTableResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationServiceUnionWithTempTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationServiceUnionWithTempTableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplicationServiceUnionWithTempTableResponse() {
        }
        
        public GetApplicationServiceUnionWithTempTableResponse(System.Data.DataTable GetApplicationServiceUnionWithTempTableResult, string MessageError) {
            this.GetApplicationServiceUnionWithTempTableResult = GetApplicationServiceUnionWithTempTableResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategoryByCode", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetCategoryByCodeRequest() {
        }
        
        public GetCategoryByCodeRequest(string HashString, string Code, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.HashString = HashString;
            this.Code = Code;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategoryByCodeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCategoryByCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetCategoryByCodeResponse() {
        }
        
        public GetCategoryByCodeResponse(System.Data.DataTable GetCategoryByCodeResult, string MessageError) {
            this.GetCategoryByCodeResult = GetCategoryByCodeResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Nama;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetCategoryRequest() {
        }
        
        public GetCategoryRequest(string HashString, string Nama, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.HashString = HashString;
            this.Nama = Nama;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetCategoryResponse() {
        }
        
        public GetCategoryResponse(System.Data.DataTable GetCategoryResult, string MessageError) {
            this.GetCategoryResult = GetCategoryResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationByCode", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetLocationByCodeRequest() {
        }
        
        public GetLocationByCodeRequest(string HashString, string Code, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.HashString = HashString;
            this.Code = Code;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationByCodeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetLocationByCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetLocationByCodeResponse() {
        }
        
        public GetLocationByCodeResponse(System.Data.DataTable GetLocationByCodeResult, string MessageError) {
            this.GetLocationByCodeResult = GetLocationByCodeResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Nama;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        public GetLocationRequest() {
        }
        
        public GetLocationRequest(string HashString, string Nama, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.HashString = HashString;
            this.Nama = Nama;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetLocationResponse() {
        }
        
        public GetLocationResponse(System.Data.DataTable GetLocationResult, string MessageError) {
            this.GetLocationResult = GetLocationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Nama;
        
        public GetRowsCountCategoryRequest() {
        }
        
        public GetRowsCountCategoryRequest(string HashString, string Nama) {
            this.HashString = HashString;
            this.Nama = Nama;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCategoryResponse() {
        }
        
        public GetRowsCountCategoryResponse(int GetRowsCountCategoryResult, string MessageError) {
            this.GetRowsCountCategoryResult = GetRowsCountCategoryResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Nama;
        
        public GetRowsCountLocationRequest() {
        }
        
        public GetRowsCountLocationRequest(string HashString, string Nama) {
            this.HashString = HashString;
            this.Nama = Nama;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountLocationResponse() {
        }
        
        public GetRowsCountLocationResponse(int GetRowsCountLocationResult, string MessageError) {
            this.GetRowsCountLocationResult = GetRowsCountLocationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRole", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleName;
        
        public GetRowsCountRoleRequest() {
        }
        
        public GetRowsCountRoleRequest(string RoleName) {
            this.RoleName = RoleName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountRoleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountRoleResponse() {
        }
        
        public GetRowsCountRoleResponse(int GetRowsCountRoleResult, string MessageError) {
            this.GetRowsCountRoleResult = GetRowsCountRoleResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRole", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleRequest() {
        }
        
        public GetRoleRequest(string RoleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleName = RoleName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleResponse() {
        }
        
        public GetRoleResponse(System.Data.DataTable GetRoleResult, string ErrorMessage) {
            this.GetRoleResult = GetRoleResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleByIdRequest() {
        }
        
        public GetRoleByIdRequest(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleByIdResponse() {
        }
        
        public GetRoleByIdResponse(System.Data.DataTable GetRoleByIdResult, string ErrorMessage) {
            this.GetRoleByIdResult = GetRoleByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isRoleAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isRoleAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        public isRoleAlreadyUsedRequest() {
        }
        
        public isRoleAlreadyUsedRequest(int RoleId) {
            this.RoleId = RoleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isRoleAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isRoleAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isRoleAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isRoleAlreadyUsedResponse() {
        }
        
        public isRoleAlreadyUsedResponse(bool isRoleAlreadyUsedResult, string MessageError) {
            this.isRoleAlreadyUsedResult = isRoleAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        public GetRowsCountRoleByIdRequest() {
        }
        
        public GetRowsCountRoleByIdRequest(int RoleId) {
            this.RoleId = RoleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountRoleByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountRoleByIdResponse() {
        }
        
        public GetRowsCountRoleByIdResponse(int GetRowsCountRoleByIdResult, string MessageError) {
            this.GetRowsCountRoleByIdResult = GetRowsCountRoleByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructureUnionAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureUnionActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetRoleMerchandiseStructureUnionActionRequest() {
        }
        
        public GetRoleMerchandiseStructureUnionActionRequest(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructureUnionActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureUnionActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleMerchandiseStructureUnionActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleMerchandiseStructureUnionActionResponse() {
        }
        
        public GetRoleMerchandiseStructureUnionActionResponse(System.Data.DataTable GetRoleMerchandiseStructureUnionActionResult, string ErrorMessage) {
            this.GetRoleMerchandiseStructureUnionActionResult = GetRoleMerchandiseStructureUnionActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructure", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CategoryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleMerchandiseStructureRequest() {
        }
        
        public GetRoleMerchandiseStructureRequest(string CategoryId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CategoryId = CategoryId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructureResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleMerchandiseStructureResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleMerchandiseStructureResponse() {
        }
        
        public GetRoleMerchandiseStructureResponse(System.Data.DataTable GetRoleMerchandiseStructureResult, string ErrorMessage) {
            this.GetRoleMerchandiseStructureResult = GetRoleMerchandiseStructureResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructureById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleMerchandiseStructureByIdRequest() {
        }
        
        public GetRoleMerchandiseStructureByIdRequest(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleMerchandiseStructureByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleMerchandiseStructureByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleMerchandiseStructureByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleMerchandiseStructureByIdResponse() {
        }
        
        public GetRoleMerchandiseStructureByIdResponse(System.Data.DataTable GetRoleMerchandiseStructureByIdResult, string ErrorMessage) {
            this.GetRoleMerchandiseStructureByIdResult = GetRoleMerchandiseStructureByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompanyUnionAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyUnionActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetRoleCompanyUnionActionRequest() {
        }
        
        public GetRoleCompanyUnionActionRequest(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompanyUnionActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyUnionActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleCompanyUnionActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleCompanyUnionActionResponse() {
        }
        
        public GetRoleCompanyUnionActionResponse(System.Data.DataTable GetRoleCompanyUnionActionResult, string ErrorMessage) {
            this.GetRoleCompanyUnionActionResult = GetRoleCompanyUnionActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompany", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleCompanyRequest() {
        }
        
        public GetRoleCompanyRequest(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyName = CompanyName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompanyResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleCompanyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleCompanyResponse() {
        }
        
        public GetRoleCompanyResponse(System.Data.DataTable GetRoleCompanyResult, string ErrorMessage) {
            this.GetRoleCompanyResult = GetRoleCompanyResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompanyById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleCompanyByIdRequest() {
        }
        
        public GetRoleCompanyByIdRequest(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleCompanyByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleCompanyByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleCompanyByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleCompanyByIdResponse() {
        }
        
        public GetRoleCompanyByIdResponse(System.Data.DataTable GetRoleCompanyByIdResult, string ErrorMessage) {
            this.GetRoleCompanyByIdResult = GetRoleCompanyByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilegeUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetRoleModulePrivilegeUnionTempActionRequest() {
        }
        
        public GetRoleModulePrivilegeUnionTempActionRequest(int RoleId, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.ModuleId = ModuleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilegeUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModulePrivilegeUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModulePrivilegeUnionTempActionResponse() {
        }
        
        public GetRoleModulePrivilegeUnionTempActionResponse(System.Data.DataTable GetRoleModulePrivilegeUnionTempActionResult, string ErrorMessage) {
            this.GetRoleModulePrivilegeUnionTempActionResult = GetRoleModulePrivilegeUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilegeAll", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetRoleModulePrivilegeAllRequest() {
        }
        
        public GetRoleModulePrivilegeAllRequest(int RoleId, int ModuleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.ModuleId = ModuleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilegeAllResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModulePrivilegeAllResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModulePrivilegeAllResponse() {
        }
        
        public GetRoleModulePrivilegeAllResponse(System.Data.DataTable GetRoleModulePrivilegeAllResult, string ErrorMessage) {
            this.GetRoleModulePrivilegeAllResult = GetRoleModulePrivilegeAllResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilege", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleModulePrivilegeRequest() {
        }
        
        public GetRoleModulePrivilegeRequest(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModulePrivilegeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModulePrivilegeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModulePrivilegeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModulePrivilegeResponse() {
        }
        
        public GetRoleModulePrivilegeResponse(System.Data.DataTable GetRoleModulePrivilegeResult, string ErrorMessage) {
            this.GetRoleModulePrivilegeResult = GetRoleModulePrivilegeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModulePrivilegeUnionWithTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModulePrivilegeUnionWithTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        public GetRowsCountModulePrivilegeUnionWithTempRequest() {
        }
        
        public GetRowsCountModulePrivilegeUnionWithTempRequest(int ModuleId, System.Data.DataTable dtAction) {
            this.ModuleId = ModuleId;
            this.dtAction = dtAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModulePrivilegeUnionWithTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModulePrivilegeUnionWithTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountModulePrivilegeUnionWithTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountModulePrivilegeUnionWithTempResponse() {
        }
        
        public GetRowsCountModulePrivilegeUnionWithTempResponse(int GetRowsCountModulePrivilegeUnionWithTempResult, string ErrorMessage) {
            this.GetRowsCountModulePrivilegeUnionWithTempResult = GetRowsCountModulePrivilegeUnionWithTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleModuleUnionWithTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleModuleUnionWithTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        public GetRowsCountRoleModuleUnionWithTempRequest() {
        }
        
        public GetRowsCountRoleModuleUnionWithTempRequest(int RoleId, System.Data.DataTable dtAction) {
            this.RoleId = RoleId;
            this.dtAction = dtAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountRoleModuleUnionWithTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountRoleModuleUnionWithTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountRoleModuleUnionWithTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountRoleModuleUnionWithTempResponse() {
        }
        
        public GetRowsCountRoleModuleUnionWithTempResponse(int GetRowsCountRoleModuleUnionWithTempResult, string ErrorMessage) {
            this.GetRowsCountRoleModuleUnionWithTempResult = GetRowsCountRoleModuleUnionWithTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModuleUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public string FieldOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=5)]
        public string MethodOrder;
        
        public GetRoleModuleUnionTempActionRequest() {
        }
        
        public GetRoleModuleUnionTempActionRequest(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, string FieldOrder, string MethodOrder) {
            this.RoleId = RoleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
            this.FieldOrder = FieldOrder;
            this.MethodOrder = MethodOrder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModuleUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModuleUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModuleUnionTempActionResponse() {
        }
        
        public GetRoleModuleUnionTempActionResponse(System.Data.DataTable GetRoleModuleUnionTempActionResult, string ErrorMessage) {
            this.GetRoleModuleUnionTempActionResult = GetRoleModuleUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModuleById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleModuleByIdRequest() {
        }
        
        public GetRoleModuleByIdRequest(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModuleByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModuleByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModuleByIdResponse() {
        }
        
        public GetRoleModuleByIdResponse(System.Data.DataTable GetRoleModuleByIdResult, string ErrorMessage) {
            this.GetRoleModuleByIdResult = GetRoleModuleByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModule", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string RoleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetRoleModuleRequest() {
        }
        
        public GetRoleModuleRequest(string RoleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.RoleName = RoleName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoleModuleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRoleModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRoleModuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRoleModuleResponse() {
        }
        
        public GetRoleModuleResponse(System.Data.DataTable GetRoleModuleResult, string ErrorMessage) {
            this.GetRoleModuleResult = GetRoleModuleResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMarkModulePrivilege", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetMarkModulePrivilegeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int ModuleId;
        
        public GetMarkModulePrivilegeRequest() {
        }
        
        public GetMarkModulePrivilegeRequest(System.Nullable<int> RoleId, int ModuleId) {
            this.RoleId = RoleId;
            this.ModuleId = ModuleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMarkModulePrivilegeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetMarkModulePrivilegeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetMarkModulePrivilegeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetMarkModulePrivilegeResponse() {
        }
        
        public GetMarkModulePrivilegeResponse(System.Data.DataTable GetMarkModulePrivilegeResult, string ErrorMessage) {
            this.GetMarkModulePrivilegeResult = GetMarkModulePrivilegeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModulePrivilegeUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModulePrivilegeUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string PrivilegeName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetModulePrivilegeUnionTempActionRequest() {
        }
        
        public GetModulePrivilegeUnionTempActionRequest(string PrivilegeName, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.PrivilegeName = PrivilegeName;
            this.ModuleId = ModuleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModulePrivilegeUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModulePrivilegeUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModulePrivilegeUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModulePrivilegeUnionTempActionResponse() {
        }
        
        public GetModulePrivilegeUnionTempActionResponse(System.Data.DataTable GetModulePrivilegeUnionTempActionResult, string ErrorMessage) {
            this.GetModulePrivilegeUnionTempActionResult = GetModulePrivilegeUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyUnionTableAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyUnionTableActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string searching;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dt;
        
        public GetRowsCountCompanyUnionTableActionRequest() {
        }
        
        public GetRowsCountCompanyUnionTableActionRequest(string searching, System.Data.DataTable dt) {
            this.searching = searching;
            this.dt = dt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyUnionTableActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyUnionTableActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyUnionTableActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountCompanyUnionTableActionResponse() {
        }
        
        public GetRowsCountCompanyUnionTableActionResponse(int GetRowsCountCompanyUnionTableActionResult, string ErrorMessage) {
            this.GetRowsCountCompanyUnionTableActionResult = GetRowsCountCompanyUnionTableActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyUnionTempActionRequest() {
        }
        
        public GetCompanyUnionTempActionRequest(string CompanyName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyName = CompanyName;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyUnionTempActionResponse() {
        }
        
        public GetCompanyUnionTempActionResponse(System.Data.DataTable GetCompanyUnionTempActionResult, string ErrorMessage) {
            this.GetCompanyUnionTempActionResult = GetCompanyUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilege", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string PrivilegeName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetPrivilegeRequest() {
        }
        
        public GetPrivilegeRequest(string PrivilegeName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.PrivilegeName = PrivilegeName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilegeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrivilegeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetPrivilegeResponse() {
        }
        
        public GetPrivilegeResponse(System.Data.DataTable GetPrivilegeResult, string ErrorMessage) {
            this.GetPrivilegeResult = GetPrivilegeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilegeById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string PrivilegeID;
        
        public GetPrivilegeByIdRequest() {
        }
        
        public GetPrivilegeByIdRequest(string PrivilegeID) {
            this.PrivilegeID = PrivilegeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilegeByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrivilegeByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetPrivilegeByIdResponse() {
        }
        
        public GetPrivilegeByIdResponse(System.Data.DataTable GetPrivilegeByIdResult, string MessageError) {
            this.GetPrivilegeByIdResult = GetPrivilegeByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isPrivilegeAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isPrivilegeAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string PrivilegeId;
        
        public isPrivilegeAlreadyUsedRequest() {
        }
        
        public isPrivilegeAlreadyUsedRequest(string PrivilegeId) {
            this.PrivilegeId = PrivilegeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isPrivilegeAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isPrivilegeAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isPrivilegeAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isPrivilegeAlreadyUsedResponse() {
        }
        
        public isPrivilegeAlreadyUsedResponse(bool isPrivilegeAlreadyUsedResult, string MessageError) {
            this.isPrivilegeAlreadyUsedResult = isPrivilegeAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategoryUnionTableTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryUnionTableTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string Desription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetCategoryUnionTableTempRequest() {
        }
        
        public GetCategoryUnionTableTempRequest(string HashString, string Desription, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.HashString = HashString;
            this.Desription = Desription;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCategoryUnionTableTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCategoryUnionTableTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCategoryUnionTableTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCategoryUnionTableTempResponse() {
        }
        
        public GetCategoryUnionTableTempResponse(System.Data.DataTable GetCategoryUnionTableTempResult, string ErrorMessage) {
            this.GetCategoryUnionTableTempResult = GetCategoryUnionTableTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleUnionTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleUnionTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetModuleUnionTempRequest() {
        }
        
        public GetModuleUnionTempRequest(string ModuleName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ModuleName = ModuleName;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleUnionTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleUnionTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleUnionTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleUnionTempResponse() {
        }
        
        public GetModuleUnionTempResponse(System.Data.DataTable GetModuleUnionTempResult, string ErrorMessage) {
            this.GetModuleUnionTempResult = GetModuleUnionTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleUnionTempByAppId", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleUnionTempByAppIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ApplicationaId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetModuleUnionTempByAppIdRequest() {
        }
        
        public GetModuleUnionTempByAppIdRequest(int ApplicationaId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ApplicationaId = ApplicationaId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleUnionTempByAppIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleUnionTempByAppIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleUnionTempByAppIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleUnionTempByAppIdResponse() {
        }
        
        public GetModuleUnionTempByAppIdResponse(System.Data.DataTable GetModuleUnionTempByAppIdResult, string ErrorMessage) {
            this.GetModuleUnionTempByAppIdResult = GetModuleUnionTempByAppIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyRoleNew", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyRoleNewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyRoleNewRequest() {
        }
        
        public GetCompanyRoleNewRequest(int CompanyId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyId = CompanyId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyRoleNewResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyRoleNewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyRoleNewResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyRoleNewResponse() {
        }
        
        public GetCompanyRoleNewResponse(System.Data.DataTable GetCompanyRoleNewResult, string ErrorMessage) {
            this.GetCompanyRoleNewResult = GetCompanyRoleNewResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterType", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterTypeRequest {
        
        public GetPrinterTypeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterTypeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrinterTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetPrinterTypeResponse() {
        }
        
        public GetPrinterTypeResponse(System.Data.DataTable GetPrinterTypeResult, string ErrorMessage) {
            this.GetPrinterTypeResult = GetPrinterTypeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterList", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string EnterpriseModule;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string LocationCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string PrinterTypeId;
        
        public GetPrinterListRequest() {
        }
        
        public GetPrinterListRequest(string EnterpriseModule, string LocationCode, string PrinterTypeId) {
            this.EnterpriseModule = EnterpriseModule;
            this.LocationCode = LocationCode;
            this.PrinterTypeId = PrinterTypeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterListResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrinterListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetPrinterListResponse() {
        }
        
        public GetPrinterListResponse(System.Data.DataTable GetPrinterListResult, string ErrorMessage) {
            this.GetPrinterListResult = GetPrinterListResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserDefaultPrinter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserDefaultPrinterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string EnterpriseModule;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string LocationCode;
        
        public GetUserDefaultPrinterRequest() {
        }
        
        public GetUserDefaultPrinterRequest(string EnterpriseModule, string LocationCode) {
            this.EnterpriseModule = EnterpriseModule;
            this.LocationCode = LocationCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserDefaultPrinterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserDefaultPrinterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string GetUserDefaultPrinterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserDefaultPrinterResponse() {
        }
        
        public GetUserDefaultPrinterResponse(string GetUserDefaultPrinterResult, string ErrorMessage) {
            this.GetUserDefaultPrinterResult = GetUserDefaultPrinterResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyByNameRequest() {
        }
        
        public GetCompanyByNameRequest(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyName = CompanyName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyByNameResponse() {
        }
        
        public GetCompanyByNameResponse(System.Data.DataTable GetCompanyByNameResult, string ErrorMessage) {
            this.GetCompanyByNameResult = GetCompanyByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int CompanyId;
        
        public GetCompanyByIdRequest() {
        }
        
        public GetCompanyByIdRequest(int CompanyId) {
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetCompanyByIdResponse() {
        }
        
        public GetCompanyByIdResponse(System.Data.DataTable GetCompanyByIdResult, string MessageError) {
            this.GetCompanyByIdResult = GetCompanyByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyConfigurationAll", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyConfigurationAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string CompanyParameterId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string CompanyConfigurationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageIndex;
        
        public GetCompanyConfigurationAllRequest() {
        }
        
        public GetCompanyConfigurationAllRequest(System.Nullable<int> CompanyId, string CompanyParameterId, string CompanyConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.CompanyId = CompanyId;
            this.CompanyParameterId = CompanyParameterId;
            this.CompanyConfigurationKey = CompanyConfigurationKey;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyConfigurationAllResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyConfigurationAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyConfigurationAllResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetCompanyConfigurationAllResponse() {
        }
        
        public GetCompanyConfigurationAllResponse(System.Data.DataTable GetCompanyConfigurationAllResult, string MessageError) {
            this.GetCompanyConfigurationAllResult = GetCompanyConfigurationAllResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyParameterByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyParameterByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyParamName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyParameterByNameRequest() {
        }
        
        public GetCompanyParameterByNameRequest(string CompanyParamName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyParamName = CompanyParamName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyParameterByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyParameterByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyParameterByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyParameterByNameResponse() {
        }
        
        public GetCompanyParameterByNameResponse(System.Data.DataTable GetCompanyParameterByNameResult, string ErrorMessage) {
            this.GetCompanyParameterByNameResult = GetCompanyParameterByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyParameterById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyParameterByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyParameterId;
        
        public GetCompanyParameterByIdRequest() {
        }
        
        public GetCompanyParameterByIdRequest(string CompanyParameterId) {
            this.CompanyParameterId = CompanyParameterId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyParameterByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyParameterByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyParameterByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetCompanyParameterByIdResponse() {
        }
        
        public GetCompanyParameterByIdResponse(System.Data.DataTable GetCompanyParameterByIdResult, string MessageError) {
            this.GetCompanyParameterByIdResult = GetCompanyParameterByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyConfigurationParameter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyConfigurationParameterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ConfigName;
        
        public GetRowsCountCompanyConfigurationParameterRequest() {
        }
        
        public GetRowsCountCompanyConfigurationParameterRequest(string ConfigName) {
            this.ConfigName = ConfigName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyConfigurationParameterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyConfigurationParameterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyConfigurationParameterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyConfigurationParameterResponse() {
        }
        
        public GetRowsCountCompanyConfigurationParameterResponse(int GetRowsCountCompanyConfigurationParameterResult, string MessageError) {
            this.GetRowsCountCompanyConfigurationParameterResult = GetRowsCountCompanyConfigurationParameterResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isCompanyAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isCompanyAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public long CompanyId;
        
        public isCompanyAlreadyUsedRequest() {
        }
        
        public isCompanyAlreadyUsedRequest(long CompanyId) {
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isCompanyAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isCompanyAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isCompanyAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isCompanyAlreadyUsedResponse() {
        }
        
        public isCompanyAlreadyUsedResponse(bool isCompanyAlreadyUsedResult, string MessageError) {
            this.isCompanyAlreadyUsedResult = isCompanyAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompany", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        public GetRowsCountCompanyRequest() {
        }
        
        public GetRowsCountCompanyRequest(string CompanyName) {
            this.CompanyName = CompanyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyResponse() {
        }
        
        public GetRowsCountCompanyResponse(int GetRowsCountCompanyResult, string MessageError) {
            this.GetRowsCountCompanyResult = GetRowsCountCompanyResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyParameter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyParameterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyParameterName;
        
        public GetRowsCountCompanyParameterRequest() {
        }
        
        public GetRowsCountCompanyParameterRequest(string CompanyParameterName) {
            this.CompanyParameterName = CompanyParameterName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyParameterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyParameterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyParameterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyParameterResponse() {
        }
        
        public GetRowsCountCompanyParameterResponse(int GetRowsCountCompanyParameterResult, string MessageError) {
            this.GetRowsCountCompanyParameterResult = GetRowsCountCompanyParameterResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isCompanyParameterAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isCompanyParameterAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyParameterId;
        
        public isCompanyParameterAlreadyUsedRequest() {
        }
        
        public isCompanyParameterAlreadyUsedRequest(string CompanyParameterId) {
            this.CompanyParameterId = CompanyParameterId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isCompanyParameterAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isCompanyParameterAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isCompanyParameterAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isCompanyParameterAlreadyUsedResponse() {
        }
        
        public isCompanyParameterAlreadyUsedResponse(bool isCompanyParameterAlreadyUsedResult, string MessageError) {
            this.isCompanyParameterAlreadyUsedResult = isCompanyParameterAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        public GetRowsCountCompanyLocationRequest() {
        }
        
        public GetRowsCountCompanyLocationRequest(string CompanyName) {
            this.CompanyName = CompanyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyLocationResponse() {
        }
        
        public GetRowsCountCompanyLocationResponse(int GetRowsCountCompanyLocationResult, string MessageError) {
            this.GetRowsCountCompanyLocationResult = GetRowsCountCompanyLocationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyLocationByNameRequest() {
        }
        
        public GetCompanyLocationByNameRequest(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyName = CompanyName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyLocationByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyLocationByNameResponse() {
        }
        
        public GetCompanyLocationByNameResponse(System.Data.DataTable GetCompanyLocationByNameResult, string ErrorMessage) {
            this.GetCompanyLocationByNameResult = GetCompanyLocationByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string LocationId;
        
        public GetCompanyLocationByIdRequest() {
        }
        
        public GetCompanyLocationByIdRequest(System.Nullable<int> CompanyId, string LocationId) {
            this.CompanyId = CompanyId;
            this.LocationId = LocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyLocationByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyLocationByIdResponse() {
        }
        
        public GetCompanyLocationByIdResponse(System.Data.DataTable GetCompanyLocationByIdResult, string ErrorMessage) {
            this.GetCompanyLocationByIdResult = GetCompanyLocationByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string HashString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string LocationId;
        
        public GetLocationNameRequest() {
        }
        
        public GetLocationNameRequest(string HashString, string LocationId) {
            this.HashString = HashString;
            this.LocationId = LocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocationNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetLocationNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetLocationNameResponse() {
        }
        
        public GetLocationNameResponse(System.Data.DataTable GetLocationNameResult, string ErrorMessage) {
            this.GetLocationNameResult = GetLocationNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyConfiguration", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ConfigKey;
        
        public GetRowsCountCompanyConfigurationRequest() {
        }
        
        public GetRowsCountCompanyConfigurationRequest(string ConfigKey) {
            this.ConfigKey = ConfigKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyConfigurationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyConfigurationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyConfigurationResponse() {
        }
        
        public GetRowsCountCompanyConfigurationResponse(int GetRowsCountCompanyConfigurationResult, string MessageError) {
            this.GetRowsCountCompanyConfigurationResult = GetRowsCountCompanyConfigurationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyConfigurationByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyConfigurationByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyConfigKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyConfigurationByNameRequest() {
        }
        
        public GetCompanyConfigurationByNameRequest(string CompanyConfigKey, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyConfigKey = CompanyConfigKey;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyConfigurationByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyConfigurationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyConfigurationByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyConfigurationByNameResponse() {
        }
        
        public GetCompanyConfigurationByNameResponse(System.Data.DataTable GetCompanyConfigurationByNameResult, string ErrorMessage) {
            this.GetCompanyConfigurationByNameResult = GetCompanyConfigurationByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyCutOffData", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyCutOffDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        public GetRowsCountCompanyCutOffDataRequest() {
        }
        
        public GetRowsCountCompanyCutOffDataRequest(string CompanyName) {
            this.CompanyName = CompanyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountCompanyCutOffDataResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountCompanyCutOffDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountCompanyCutOffDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountCompanyCutOffDataResponse() {
        }
        
        public GetRowsCountCompanyCutOffDataResponse(int GetRowsCountCompanyCutOffDataResult, string MessageError) {
            this.GetRowsCountCompanyCutOffDataResult = GetRowsCountCompanyCutOffDataResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyCutOffData", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyCutOffDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string CompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyCutOffDataRequest() {
        }
        
        public GetCompanyCutOffDataRequest(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyName = CompanyName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyCutOffDataResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyCutOffDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyCutOffDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyCutOffDataResponse() {
        }
        
        public GetCompanyCutOffDataResponse(System.Data.DataTable GetCompanyCutOffDataResult, string ErrorMessage) {
            this.GetCompanyCutOffDataResult = GetCompanyCutOffDataResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountServiceCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountServiceCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryName;
        
        public GetRowsCountServiceCategoryRequest() {
        }
        
        public GetRowsCountServiceCategoryRequest(string ServiceCategoryName) {
            this.ServiceCategoryName = ServiceCategoryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountServiceCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountServiceCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountServiceCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountServiceCategoryResponse() {
        }
        
        public GetRowsCountServiceCategoryResponse(int GetRowsCountServiceCategoryResult, string MessageError) {
            this.GetRowsCountServiceCategoryResult = GetRowsCountServiceCategoryResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceCategoryByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceCategoryByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetServiceCategoryByNameRequest() {
        }
        
        public GetServiceCategoryByNameRequest(string ServiceCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ServiceCategoryName = ServiceCategoryName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceCategoryByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceCategoryByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetServiceCategoryByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetServiceCategoryByNameResponse() {
        }
        
        public GetServiceCategoryByNameResponse(System.Data.DataTable GetServiceCategoryByNameResult, string MessageError) {
            this.GetServiceCategoryByNameResult = GetServiceCategoryByNameResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceCategoryById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceCategoryByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryId;
        
        public GetServiceCategoryByIdRequest() {
        }
        
        public GetServiceCategoryByIdRequest(string ServiceCategoryId) {
            this.ServiceCategoryId = ServiceCategoryId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceCategoryByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetServiceCategoryByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetServiceCategoryByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetServiceCategoryByIdResponse() {
        }
        
        public GetServiceCategoryByIdResponse(System.Data.DataTable GetServiceCategoryByIdResult, string MessageError) {
            this.GetServiceCategoryByIdResult = GetServiceCategoryByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isServiceCategoryAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isServiceCategoryAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ServiceCategoryId;
        
        public isServiceCategoryAlreadyUsedRequest() {
        }
        
        public isServiceCategoryAlreadyUsedRequest(string ServiceCategoryId) {
            this.ServiceCategoryId = ServiceCategoryId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isServiceCategoryAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isServiceCategoryAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isServiceCategoryAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isServiceCategoryAlreadyUsedResponse() {
        }
        
        public isServiceCategoryAlreadyUsedResponse(bool isServiceCategoryAlreadyUsedResult, string MessageError) {
            this.isServiceCategoryAlreadyUsedResult = isServiceCategoryAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserRole", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserRoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> CompanyId;
        
        public GetRowsCountUserRoleRequest() {
        }
        
        public GetRowsCountUserRoleRequest(string Name, System.Nullable<int> CompanyId) {
            this.Name = Name;
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserRoleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserRoleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserRoleResponse() {
        }
        
        public GetRowsCountUserRoleResponse(int GetRowsCountUserRoleResult, string MessageError) {
            this.GetRowsCountUserRoleResult = GetRowsCountUserRoleResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleByUserName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleByUserNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetUserRoleByUserNameRequest() {
        }
        
        public GetUserRoleByUserNameRequest(string Name, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Name = Name;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleByUserNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleByUserNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserRoleByUserNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserRoleByUserNameResponse() {
        }
        
        public GetUserRoleByUserNameResponse(System.Data.DataTable GetUserRoleByUserNameResult, string ErrorMessage) {
            this.GetUserRoleByUserNameResult = GetUserRoleByUserNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetUserRoleLocationRequest() {
        }
        
        public GetUserRoleLocationRequest(string Name, int CompanyId, int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Name = Name;
            this.CompanyId = CompanyId;
            this.RoleId = RoleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserRoleLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserRoleLocationResponse() {
        }
        
        public GetUserRoleLocationResponse(System.Data.DataTable GetUserRoleLocationResult, string ErrorMessage) {
            this.GetUserRoleLocationResult = GetUserRoleLocationResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleLocationUnionWithTempTable", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleLocationUnionWithTempTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public string LocationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Data.DataTable dttemp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=5)]
        public System.Nullable<int> PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=6)]
        public System.Nullable<int> PageIndex;
        
        public GetUserRoleLocationUnionWithTempTableRequest() {
        }
        
        public GetUserRoleLocationUnionWithTempTableRequest(System.Nullable<int> CompanyId, System.Nullable<int> RoleId, string UserName, string LocationId, System.Data.DataTable dttemp, System.Nullable<int> PageSize, System.Nullable<int> PageIndex) {
            this.CompanyId = CompanyId;
            this.RoleId = RoleId;
            this.UserName = UserName;
            this.LocationId = LocationId;
            this.dttemp = dttemp;
            this.PageSize = PageSize;
            this.PageIndex = PageIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleLocationUnionWithTempTableResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleLocationUnionWithTempTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserRoleLocationUnionWithTempTableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetUserRoleLocationUnionWithTempTableResponse() {
        }
        
        public GetUserRoleLocationUnionWithTempTableResponse(System.Data.DataTable GetUserRoleLocationUnionWithTempTableResult, string MessageError) {
            this.GetUserRoleLocationUnionWithTempTableResult = GetUserRoleLocationUnionWithTempTableResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationUnionWithTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationUnionWithTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetCompanyLocationUnionWithTempRequest() {
        }
        
        public GetCompanyLocationUnionWithTempRequest(int CompanyId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.CompanyId = CompanyId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyLocationUnionWithTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCompanyLocationUnionWithTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetCompanyLocationUnionWithTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCompanyLocationUnionWithTempResponse() {
        }
        
        public GetCompanyLocationUnionWithTempResponse(System.Data.DataTable GetCompanyLocationUnionWithTempResult, string ErrorMessage) {
            this.GetCompanyLocationUnionWithTempResult = GetCompanyLocationUnionWithTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserRoleLocationAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserRoleLocationAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int RoleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public int CompanyId;
        
        public isUserRoleLocationAlreadyUsedRequest() {
        }
        
        public isUserRoleLocationAlreadyUsedRequest(string UserName, int RoleId, int CompanyId) {
            this.UserName = UserName;
            this.RoleId = RoleId;
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserRoleLocationAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserRoleLocationAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserRoleLocationAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserRoleLocationAlreadyUsedResponse() {
        }
        
        public isUserRoleLocationAlreadyUsedResponse(bool isUserRoleLocationAlreadyUsedResult, string MessageError) {
            this.isUserRoleLocationAlreadyUsedResult = isUserRoleLocationAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserRoleExists", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserRoleExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int RoleId;
        
        public isUserRoleExistsRequest() {
        }
        
        public isUserRoleExistsRequest(string UserName, int RoleId) {
            this.UserName = UserName;
            this.RoleId = RoleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserRoleExistsResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserRoleExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserRoleExistsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserRoleExistsResponse() {
        }
        
        public isUserRoleExistsResponse(bool isUserRoleExistsResult, string MessageError) {
            this.isUserRoleExistsResult = isUserRoleExistsResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserModuleExists", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserModuleExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string PrivilegeId;
        
        public isUserModuleExistsRequest() {
        }
        
        public isUserModuleExistsRequest(string UserName, int ModuleId, string PrivilegeId) {
            this.UserName = UserName;
            this.ModuleId = ModuleId;
            this.PrivilegeId = PrivilegeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserModuleExistsResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserModuleExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserModuleExistsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserModuleExistsResponse() {
        }
        
        public isUserModuleExistsResponse(bool isUserModuleExistsResult, string MessageError) {
            this.isUserModuleExistsResult = isUserModuleExistsResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModuleByUserName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModuleByUserNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetUserModuleByUserNameRequest() {
        }
        
        public GetUserModuleByUserNameRequest(string UserName, System.Nullable<int> ModuleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.ModuleId = ModuleId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModuleByUserNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModuleByUserNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserModuleByUserNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserModuleByUserNameResponse() {
        }
        
        public GetUserModuleByUserNameResponse(System.Data.DataTable GetUserModuleByUserNameResult, string ErrorMessage) {
            this.GetUserModuleByUserNameResult = GetUserModuleByUserNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModule", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        public GetRowsCountUserModuleRequest() {
        }
        
        public GetRowsCountUserModuleRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModuleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserModuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserModuleResponse() {
        }
        
        public GetRowsCountUserModuleResponse(int GetRowsCountUserModuleResult, string MessageError) {
            this.GetRowsCountUserModuleResult = GetRowsCountUserModuleResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserCompany", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        public GetRowsCountUserCompanyRequest() {
        }
        
        public GetRowsCountUserCompanyRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserCompanyResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserCompanyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserCompanyResponse() {
        }
        
        public GetRowsCountUserCompanyResponse(int GetRowsCountUserCompanyResult, string MessageError) {
            this.GetRowsCountUserCompanyResult = GetRowsCountUserCompanyResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserCompany", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetUserCompanyRequest() {
        }
        
        public GetUserCompanyRequest(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserCompanyResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserCompanyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserCompanyResponse() {
        }
        
        public GetUserCompanyResponse(System.Data.DataTable GetUserCompanyResult, string ErrorMessage) {
            this.GetUserCompanyResult = GetUserCompanyResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserCompanyExists", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserCompanyExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int CompanyId;
        
        public isUserCompanyExistsRequest() {
        }
        
        public isUserCompanyExistsRequest(string UserName, int CompanyId) {
            this.UserName = UserName;
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserCompanyExistsResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserCompanyExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserCompanyExistsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserCompanyExistsResponse() {
        }
        
        public isUserCompanyExistsResponse(bool isUserCompanyExistsResult, string MessageError) {
            this.isUserCompanyExistsResult = isUserCompanyExistsResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserLocationExists", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserLocationExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string LocationId;
        
        public isUserLocationExistsRequest() {
        }
        
        public isUserLocationExistsRequest(string UserName, int CompanyId, string LocationId) {
            this.UserName = UserName;
            this.CompanyId = CompanyId;
            this.LocationId = LocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserLocationExistsResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserLocationExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserLocationExistsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserLocationExistsResponse() {
        }
        
        public isUserLocationExistsResponse(bool isUserLocationExistsResult, string MessageError) {
            this.isUserLocationExistsResult = isUserLocationExistsResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModule2", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModule2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        public GetRowsCountUserModule2Request() {
        }
        
        public GetRowsCountUserModule2Request(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModule2Response", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModule2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserModule2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserModule2Response() {
        }
        
        public GetRowsCountUserModule2Response(int GetRowsCountUserModule2Result, string MessageError) {
            this.GetRowsCountUserModule2Result = GetRowsCountUserModule2Result;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModuleByUserName2", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModuleByUserName2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetUserModuleByUserName2Request() {
        }
        
        public GetUserModuleByUserName2Request(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModuleByUserName2Response", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModuleByUserName2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserModuleByUserName2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserModuleByUserName2Response() {
        }
        
        public GetUserModuleByUserName2Response(System.Data.DataTable GetUserModuleByUserName2Result, string ErrorMessage) {
            this.GetUserModuleByUserName2Result = GetUserModuleByUserName2Result;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModulePrivilegeUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModulePrivilegeUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetUserModulePrivilegeUnionTempActionRequest() {
        }
        
        public GetUserModulePrivilegeUnionTempActionRequest(string UserName, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.ModuleId = ModuleId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserModulePrivilegeUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserModulePrivilegeUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserModulePrivilegeUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserModulePrivilegeUnionTempActionResponse() {
        }
        
        public GetUserModulePrivilegeUnionTempActionResponse(System.Data.DataTable GetUserModulePrivilegeUnionTempActionResult, string ErrorMessage) {
            this.GetUserModulePrivilegeUnionTempActionResult = GetUserModulePrivilegeUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModulePrivilegeUnionWithTemp", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModulePrivilegeUnionWithTempRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        public GetRowsCountUserModulePrivilegeUnionWithTempRequest() {
        }
        
        public GetRowsCountUserModulePrivilegeUnionWithTempRequest(string UserName, int ModuleId, System.Data.DataTable dtAction) {
            this.UserName = UserName;
            this.ModuleId = ModuleId;
            this.dtAction = dtAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserModulePrivilegeUnionWithTempResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserModulePrivilegeUnionWithTempResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserModulePrivilegeUnionWithTempResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountUserModulePrivilegeUnionWithTempResponse() {
        }
        
        public GetRowsCountUserModulePrivilegeUnionWithTempResponse(int GetRowsCountUserModulePrivilegeUnionWithTempResult, string ErrorMessage) {
            this.GetRowsCountUserModulePrivilegeUnionWithTempResult = GetRowsCountUserModulePrivilegeUnionWithTempResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocationByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetUserLocationByNameRequest() {
        }
        
        public GetUserLocationByNameRequest(string Name, int CompanyId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Name = Name;
            this.CompanyId = CompanyId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocationByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserLocationByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserLocationByNameResponse() {
        }
        
        public GetUserLocationByNameResponse(System.Data.DataTable GetUserLocationByNameResult, string ErrorMessage) {
            this.GetUserLocationByNameResult = GetUserLocationByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocationUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> CompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=4)]
        public System.Nullable<int> PageSize;
        
        public GetUserLocationUnionTempActionRequest() {
        }
        
        public GetUserLocationUnionTempActionRequest(string UserName, System.Nullable<int> CompanyId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.CompanyId = CompanyId;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocationUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserLocationUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserLocationUnionTempActionResponse() {
        }
        
        public GetUserLocationUnionTempActionResponse(System.Data.DataTable GetUserLocationUnionTempActionResult, string ErrorMessage) {
            this.GetUserLocationUnionTempActionResult = GetUserLocationUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserLocationAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserLocationAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int CompanyId;
        
        public isUserLocationAlreadyUsedRequest() {
        }
        
        public isUserLocationAlreadyUsedRequest(string UserName, int CompanyId) {
            this.UserName = UserName;
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserLocationAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserLocationAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserLocationAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserLocationAlreadyUsedResponse() {
        }
        
        public isUserLocationAlreadyUsedResponse(bool isUserLocationAlreadyUsedResult, string MessageError) {
            this.isUserLocationAlreadyUsedResult = isUserLocationAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserMerchandise", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserMerchandiseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        public GetRowsCountUserMerchandiseRequest() {
        }
        
        public GetRowsCountUserMerchandiseRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserMerchandiseResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserMerchandiseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserMerchandiseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserMerchandiseResponse() {
        }
        
        public GetRowsCountUserMerchandiseResponse(int GetRowsCountUserMerchandiseResult, string MessageError) {
            this.GetRowsCountUserMerchandiseResult = GetRowsCountUserMerchandiseResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserMerchandise", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserMerchandiseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetUserMerchandiseRequest() {
        }
        
        public GetUserMerchandiseRequest(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserMerchandiseResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserMerchandiseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserMerchandiseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserMerchandiseResponse() {
        }
        
        public GetUserMerchandiseResponse(System.Data.DataTable GetUserMerchandiseResult, string ErrorMessage) {
            this.GetUserMerchandiseResult = GetUserMerchandiseResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserMerchandiseUnionTempAction", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserMerchandiseUnionTempActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Data.DataTable dtAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetUserMerchandiseUnionTempActionRequest() {
        }
        
        public GetUserMerchandiseUnionTempActionRequest(string UserName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.UserName = UserName;
            this.dtAction = dtAction;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserMerchandiseUnionTempActionResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserMerchandiseUnionTempActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserMerchandiseUnionTempActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserMerchandiseUnionTempActionResponse() {
        }
        
        public GetUserMerchandiseUnionTempActionResponse(System.Data.DataTable GetUserMerchandiseUnionTempActionResult, string ErrorMessage) {
            this.GetUserMerchandiseUnionTempActionResult = GetUserMerchandiseUnionTempActionResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserMerchandiseExists", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserMerchandiseExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        public isUserMerchandiseExistsRequest() {
        }
        
        public isUserMerchandiseExistsRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUserMerchandiseExistsResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isUserMerchandiseExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isUserMerchandiseExistsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isUserMerchandiseExistsResponse() {
        }
        
        public isUserMerchandiseExistsResponse(bool isUserMerchandiseExistsResult, string MessageError) {
            this.isUserMerchandiseExistsResult = isUserMerchandiseExistsResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> CompanyId;
        
        public GetRowsCountUserLocationRequest() {
        }
        
        public GetRowsCountUserLocationRequest(string Name, System.Nullable<int> CompanyId) {
            this.Name = Name;
            this.CompanyId = CompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountUserLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountUserLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountUserLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountUserLocationResponse() {
        }
        
        public GetRowsCountUserLocationResponse(int GetRowsCountUserLocationResult, string MessageError) {
            this.GetRowsCountUserLocationResult = GetRowsCountUserLocationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleCategoryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetModuleCategoryByNameRequest() {
        }
        
        public GetModuleCategoryByNameRequest(string ModuleCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ModuleCategoryName = ModuleCategoryName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleCategoryByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleCategoryByNameResponse() {
        }
        
        public GetModuleCategoryByNameResponse(System.Data.DataTable GetModuleCategoryByNameResult, string ErrorMessage) {
            this.GetModuleCategoryByNameResult = GetModuleCategoryByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastCutOffID", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLastCutOffIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int companyID;
        
        public GetLastCutOffIDRequest() {
        }
        
        public GetLastCutOffIDRequest(int companyID) {
            this.companyID = companyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastCutOffIDResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLastCutOffIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public short GetLastCutOffIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.DateTime cutOffDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string ErrorMessage;
        
        public GetLastCutOffIDResponse() {
        }
        
        public GetLastCutOffIDResponse(short GetLastCutOffIDResult, System.DateTime cutOffDate, string ErrorMessage) {
            this.GetLastCutOffIDResult = GetLastCutOffIDResult;
            this.cutOffDate = cutOffDate;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetModuleByNameRequest() {
        }
        
        public GetModuleByNameRequest(string ModuleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ModuleName = ModuleName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleByNameResponse() {
        }
        
        public GetModuleByNameResponse(System.Data.DataTable GetModuleByNameResult, string ErrorMessage) {
            this.GetModuleByNameResult = GetModuleByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleId;
        
        public GetModuleByIdRequest() {
        }
        
        public GetModuleByIdRequest(int ModuleId) {
            this.ModuleId = ModuleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleByIdResponse() {
        }
        
        public GetModuleByIdResponse(System.Data.DataTable GetModuleByIdResult, string ErrorMessage) {
            this.GetModuleByIdResult = GetModuleByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleCategoryId;
        
        public GetModuleCategoryByIdRequest() {
        }
        
        public GetModuleCategoryByIdRequest(int ModuleCategoryId) {
            this.ModuleCategoryId = ModuleCategoryId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleCategoryByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetModuleCategoryByIdResponse() {
        }
        
        public GetModuleCategoryByIdResponse(System.Data.DataTable GetModuleCategoryByIdResult, string MessageError) {
            this.GetModuleCategoryByIdResult = GetModuleCategoryByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilegeForModule", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeForModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public char StatusForm;
        
        public GetPrivilegeForModuleRequest() {
        }
        
        public GetPrivilegeForModuleRequest(int ModuleId, char StatusForm) {
            this.ModuleId = ModuleId;
            this.StatusForm = StatusForm;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrivilegeForModuleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrivilegeForModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrivilegeForModuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetPrivilegeForModuleResponse() {
        }
        
        public GetPrivilegeForModuleResponse(System.Data.DataTable GetPrivilegeForModuleResult, string ErrorMessage) {
            this.GetPrivilegeForModuleResult = GetPrivilegeForModuleResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleType", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleTypeRequest {
        
        public GetModuleTypeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleTypeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleTypeResponse() {
        }
        
        public GetModuleTypeResponse(System.Data.DataTable GetModuleTypeResult, string ErrorMessage) {
            this.GetModuleTypeResult = GetModuleTypeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleFilterType", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleFilterTypeRequest {
        
        public GetModuleFilterTypeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleFilterTypeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleFilterTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleFilterTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleFilterTypeResponse() {
        }
        
        public GetModuleFilterTypeResponse(System.Data.DataTable GetModuleFilterTypeResult, string ErrorMessage) {
            this.GetModuleFilterTypeResult = GetModuleFilterTypeResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppParameter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetAppParameterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetAppParameterRequest() {
        }
        
        public GetAppParameterRequest(string ApplicationName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ApplicationName = ApplicationName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppParameterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetAppParameterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetAppParameterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetAppParameterResponse() {
        }
        
        public GetAppParameterResponse(System.Data.DataTable GetAppParameterResult, string ErrorMessage) {
            this.GetAppParameterResult = GetAppParameterResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountAppParameter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountAppParameterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationName;
        
        public GetRowsCountAppParameterRequest() {
        }
        
        public GetRowsCountAppParameterRequest(string ApplicationName) {
            this.ApplicationName = ApplicationName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountAppParameterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountAppParameterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountAppParameterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountAppParameterResponse() {
        }
        
        public GetRowsCountAppParameterResponse(int GetRowsCountAppParameterResult, string ErrorMessage) {
            this.GetRowsCountAppParameterResult = GetRowsCountAppParameterResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryList", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleCategoryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetModuleCategoryListRequest() {
        }
        
        public GetModuleCategoryListRequest(string ModuleCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ModuleCategoryName = ModuleCategoryName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleCategoryListResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleCategoryListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleCategoryListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetModuleCategoryListResponse() {
        }
        
        public GetModuleCategoryListResponse(System.Data.DataTable GetModuleCategoryListResult, string ErrorMessage) {
            this.GetModuleCategoryListResult = GetModuleCategoryListResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModuleCategoryList", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleCategoryListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleCategoryName;
        
        public GetRowsCountModuleCategoryListRequest() {
        }
        
        public GetRowsCountModuleCategoryListRequest(string ModuleCategoryName) {
            this.ModuleCategoryName = ModuleCategoryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModuleCategoryListResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleCategoryListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountModuleCategoryListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRowsCountModuleCategoryListResponse() {
        }
        
        public GetRowsCountModuleCategoryListResponse(int GetRowsCountModuleCategoryListResult, string ErrorMessage) {
            this.GetRowsCountModuleCategoryListResult = GetRowsCountModuleCategoryListResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isModuleCategoryAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isModuleCategoryAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleCategoryId;
        
        public isModuleCategoryAlreadyUsedRequest() {
        }
        
        public isModuleCategoryAlreadyUsedRequest(int ModuleCategoryId) {
            this.ModuleCategoryId = ModuleCategoryId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isModuleCategoryAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isModuleCategoryAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isModuleCategoryAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isModuleCategoryAlreadyUsedResponse() {
        }
        
        public isModuleCategoryAlreadyUsedResponse(bool isModuleCategoryAlreadyUsedResult, string MessageError) {
            this.isModuleCategoryAlreadyUsedResult = isModuleCategoryAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isModuleAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isModuleAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleId;
        
        public isModuleAlreadyUsedRequest() {
        }
        
        public isModuleAlreadyUsedRequest(int ModuleId) {
            this.ModuleId = ModuleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isModuleAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isModuleAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isModuleAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isModuleAlreadyUsedResponse() {
        }
        
        public isModuleAlreadyUsedResponse(bool isModuleAlreadyUsedResult, string MessageError) {
            this.isModuleAlreadyUsedResult = isModuleAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModuleCategory", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleCategoryName;
        
        public GetRowsCountModuleCategoryRequest() {
        }
        
        public GetRowsCountModuleCategoryRequest(string ModuleCategoryName) {
            this.ModuleCategoryName = ModuleCategoryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModuleCategoryResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountModuleCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountModuleCategoryResponse() {
        }
        
        public GetRowsCountModuleCategoryResponse(int GetRowsCountModuleCategoryResult, string MessageError) {
            this.GetRowsCountModuleCategoryResult = GetRowsCountModuleCategoryResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModule", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ModuleName;
        
        public GetRowsCountModuleRequest() {
        }
        
        public GetRowsCountModuleRequest(string ModuleName) {
            this.ModuleName = ModuleName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountModuleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountModuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountModuleResponse() {
        }
        
        public GetRowsCountModuleResponse(int GetRowsCountModuleResult, string MessageError) {
            this.GetRowsCountModuleResult = GetRowsCountModuleResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetUserLocationRequest() {
        }
        
        public GetUserLocationRequest(string Username, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Username = Username;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserLocationResponse() {
        }
        
        public GetUserLocationResponse(System.Data.DataTable GetUserLocationResult, string ErrorMessage) {
            this.GetUserLocationResult = GetUserLocationResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ConnStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string LocationId;
        
        public GetLocNameRequest() {
        }
        
        public GetLocNameRequest(string ConnStr, string LocationId) {
            this.ConnStr = ConnStr;
            this.LocationId = LocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetLocNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string GetLocNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetLocNameResponse() {
        }
        
        public GetLocNameResponse(string GetLocNameResult, string ErrorMessage) {
            this.GetLocNameResult = GetLocNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCekRolModPrivUser", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCekRolModPrivUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public string PrivilegeId;
        
        public GetCekRolModPrivUserRequest() {
        }
        
        public GetCekRolModPrivUserRequest(string UserName, int ModuleId, string PrivilegeId) {
            this.UserName = UserName;
            this.ModuleId = ModuleId;
            this.PrivilegeId = PrivilegeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCekRolModPrivUserResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetCekRolModPrivUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool GetCekRolModPrivUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetCekRolModPrivUserResponse() {
        }
        
        public GetCekRolModPrivUserResponse(bool GetCekRolModPrivUserResult, string ErrorMessage) {
            this.GetCekRolModPrivUserResult = GetCekRolModPrivUserResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRolModPrivUserName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRolModPrivUserNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string UserName;
        
        public GetRolModPrivUserNameRequest() {
        }
        
        public GetRolModPrivUserNameRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRolModPrivUserNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRolModPrivUserNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetRolModPrivUserNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetRolModPrivUserNameResponse() {
        }
        
        public GetRolModPrivUserNameResponse(System.Data.DataTable GetRolModPrivUserNameResult, string ErrorMessage) {
            this.GetRolModPrivUserNameResult = GetRolModPrivUserNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleByRoleId", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleByRoleIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int RoleId;
        
        public GetUserRoleByRoleIdRequest() {
        }
        
        public GetUserRoleByRoleIdRequest(int RoleId) {
            this.RoleId = RoleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRoleByRoleIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetUserRoleByRoleIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetUserRoleByRoleIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetUserRoleByRoleIdResponse() {
        }
        
        public GetUserRoleByRoleIdResponse(System.Data.DataTable GetUserRoleByRoleIdResult, string ErrorMessage) {
            this.GetUserRoleByRoleIdResult = GetUserRoleByRoleIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleByModuleTypeId", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByModuleTypeIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ModuleTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=3)]
        public System.Nullable<int> PageSize;
        
        public GetModuleByModuleTypeIdRequest() {
        }
        
        public GetModuleByModuleTypeIdRequest(string Url, string ModuleTypeId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Url = Url;
            this.ModuleTypeId = ModuleTypeId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleByModuleTypeIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleByModuleTypeIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleByModuleTypeIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetModuleByModuleTypeIdResponse() {
        }
        
        public GetModuleByModuleTypeIdResponse(System.Data.DataTable GetModuleByModuleTypeIdResult, string MessageError) {
            this.GetModuleByModuleTypeIdResult = GetModuleByModuleTypeIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterBrand", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterBrandRequest {
        
        public GetPrinterBrandRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterBrandResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterBrandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrinterBrandResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetPrinterBrandResponse() {
        }
        
        public GetPrinterBrandResponse(System.Data.DataTable GetPrinterBrandResult, string MessageError) {
            this.GetPrinterBrandResult = GetPrinterBrandResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterLocation", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string PrinterId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string StoreNo;
        
        public GetPrinterLocationRequest() {
        }
        
        public GetPrinterLocationRequest(string PrinterId, string StoreNo) {
            this.PrinterId = PrinterId;
            this.StoreNo = StoreNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterLocationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrinterLocationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetPrinterLocationResponse() {
        }
        
        public GetPrinterLocationResponse(System.Data.DataTable GetPrinterLocationResult, string MessageError) {
            this.GetPrinterLocationResult = GetPrinterLocationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterLocationIsDefault", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterLocationIsDefaultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string StoreNo;
        
        public GetPrinterLocationIsDefaultRequest() {
        }
        
        public GetPrinterLocationIsDefaultRequest(string StoreNo) {
            this.StoreNo = StoreNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPrinterLocationIsDefaultResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetPrinterLocationIsDefaultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetPrinterLocationIsDefaultResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetPrinterLocationIsDefaultResponse() {
        }
        
        public GetPrinterLocationIsDefaultResponse(System.Data.DataTable GetPrinterLocationIsDefaultResult, string MessageError) {
            this.GetPrinterLocationIsDefaultResult = GetPrinterLocationIsDefaultResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Authorize", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class AuthorizeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int ModuleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public PGPGenerator.M10BusinessProcess.Privilege[] Privilege;
        
        public AuthorizeRequest() {
        }
        
        public AuthorizeRequest(int ModuleId, PGPGenerator.M10BusinessProcess.Privilege[] Privilege) {
            this.ModuleId = ModuleId;
            this.Privilege = Privilege;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthorizeResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class AuthorizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool AuthorizeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public PGPGenerator.M10BusinessProcess.Privilege[] Privilege;
        
        public AuthorizeResponse() {
        }
        
        public AuthorizeResponse(bool AuthorizeResult, PGPGenerator.M10BusinessProcess.Privilege[] Privilege) {
            this.AuthorizeResult = AuthorizeResult;
            this.Privilege = Privilege;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int IDApplication;
        
        public GetApplicationByIdRequest() {
        }
        
        public GetApplicationByIdRequest(int IDApplication) {
            this.IDApplication = IDApplication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplicationByIdResponse() {
        }
        
        public GetApplicationByIdResponse(System.Data.DataTable GetApplicationByIdResult, string MessageError) {
            this.GetApplicationByIdResult = GetApplicationByIdResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetApplicationByNameRequest() {
        }
        
        public GetApplicationByNameRequest(string ApplicationName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ApplicationName = ApplicationName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetApplicationByNameResponse() {
        }
        
        public GetApplicationByNameResponse(System.Data.DataTable GetApplicationByNameResult, string MessageError) {
            this.GetApplicationByNameResult = GetApplicationByNameResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplication", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string AppName;
        
        public GetRowsCountApplicationRequest() {
        }
        
        public GetRowsCountApplicationRequest(string AppName) {
            this.AppName = AppName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplicationResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountApplicationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountApplicationResponse() {
        }
        
        public GetRowsCountApplicationResponse(int GetRowsCountApplicationResult, string MessageError) {
            this.GetRowsCountApplicationResult = GetRowsCountApplicationResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplicationConfigurationParameter", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationConfigurationParameterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ConfigName;
        
        public GetRowsCountApplicationConfigurationParameterRequest() {
        }
        
        public GetRowsCountApplicationConfigurationParameterRequest(string ConfigName) {
            this.ConfigName = ConfigName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCountApplicationConfigurationParameterResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetRowsCountApplicationConfigurationParameterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public int GetRowsCountApplicationConfigurationParameterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetRowsCountApplicationConfigurationParameterResponse() {
        }
        
        public GetRowsCountApplicationConfigurationParameterResponse(int GetRowsCountApplicationConfigurationParameterResult, string MessageError) {
            this.GetRowsCountApplicationConfigurationParameterResult = GetRowsCountApplicationConfigurationParameterResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModule", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string Url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetModuleRequest() {
        }
        
        public GetModuleRequest(string Url, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.Url = Url;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetModuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetModuleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public GetModuleResponse() {
        }
        
        public GetModuleResponse(System.Data.DataTable GetModuleResult, string MessageError) {
            this.GetModuleResult = GetModuleResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isApplicationAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isApplicationAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public long ApplicationId;
        
        public isApplicationAlreadyUsedRequest() {
        }
        
        public isApplicationAlreadyUsedRequest(long ApplicationId) {
            this.ApplicationId = ApplicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isApplicationAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isApplicationAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isApplicationAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isApplicationAlreadyUsedResponse() {
        }
        
        public isApplicationAlreadyUsedResponse(bool isApplicationAlreadyUsedResult, string MessageError) {
            this.isApplicationAlreadyUsedResult = isApplicationAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isApplicationParameterAlreadyUsed", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isApplicationParameterAlreadyUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationConfigId;
        
        public isApplicationParameterAlreadyUsedRequest() {
        }
        
        public isApplicationParameterAlreadyUsedRequest(string ApplicationConfigId) {
            this.ApplicationConfigId = ApplicationConfigId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isApplicationParameterAlreadyUsedResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class isApplicationParameterAlreadyUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public bool isApplicationParameterAlreadyUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string MessageError;
        
        public isApplicationParameterAlreadyUsedResponse() {
        }
        
        public isApplicationParameterAlreadyUsedResponse(bool isApplicationParameterAlreadyUsedResult, string MessageError) {
            this.isApplicationParameterAlreadyUsedResult = isApplicationParameterAlreadyUsedResult;
            this.MessageError = MessageError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationParameterByName", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationParameterByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationParamName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetApplicationParameterByNameRequest() {
        }
        
        public GetApplicationParameterByNameRequest(string ApplicationParamName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ApplicationParamName = ApplicationParamName;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationParameterByNameResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationParameterByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationParameterByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetApplicationParameterByNameResponse() {
        }
        
        public GetApplicationParameterByNameResponse(System.Data.DataTable GetApplicationParameterByNameResult, string ErrorMessage) {
            this.GetApplicationParameterByNameResult = GetApplicationParameterByNameResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationParameterById", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationParameterByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public string ApplicationParamId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public System.Nullable<int> PageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=2)]
        public System.Nullable<int> PageSize;
        
        public GetApplicationParameterByIdRequest() {
        }
        
        public GetApplicationParameterByIdRequest(string ApplicationParamId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize) {
            this.ApplicationParamId = ApplicationParamId;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationParameterByIdResponse", WrapperNamespace="http://Mitra10.com/SoapHeaders", IsWrapped=true)]
    public partial class GetApplicationParameterByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=0)]
        public System.Data.DataTable GetApplicationParameterByIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Mitra10.com/SoapHeaders", Order=1)]
        public string ErrorMessage;
        
        public GetApplicationParameterByIdResponse() {
        }
        
        public GetApplicationParameterByIdResponse(System.Data.DataTable GetApplicationParameterByIdResult, string ErrorMessage) {
            this.GetApplicationParameterByIdResult = GetApplicationParameterByIdResult;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusinessProcessChannel : PGPGenerator.M10BusinessProcess.IBusinessProcess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusinessProcessClient : System.ServiceModel.ClientBase<PGPGenerator.M10BusinessProcess.IBusinessProcess>, PGPGenerator.M10BusinessProcess.IBusinessProcess {
        
        public BusinessProcessClient() {
        }
        
        public BusinessProcessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusinessProcessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessProcessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessProcessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string EditApplicationConfigurationValue1(int ApplicationId, string ApplicationConfigurationKey, string ApplicationConfigurationValue1) {
            return base.Channel.EditApplicationConfigurationValue1(ApplicationId, ApplicationConfigurationKey, ApplicationConfigurationValue1);
        }
        
        public System.Threading.Tasks.Task<string> EditApplicationConfigurationValue1Async(int ApplicationId, string ApplicationConfigurationKey, string ApplicationConfigurationValue1) {
            return base.Channel.EditApplicationConfigurationValue1Async(ApplicationId, ApplicationConfigurationKey, ApplicationConfigurationValue1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplConfigByApp_ParameterId_App_Config_Key(PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest request) {
            return base.Channel.GetApplConfigByApp_ParameterId_App_Config_Key(request);
        }
        
        public System.Data.DataTable GetApplConfigByApp_ParameterId_App_Config_Key(string ApplicationParameterId, string ApplicationConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest();
            inValue.ApplicationParameterId = ApplicationParameterId;
            inValue.ApplicationConfigurationKey = ApplicationConfigurationKey;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplConfigByApp_ParameterId_App_Config_Key(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplConfigByApp_ParameterId_App_Config_KeyResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyResponse> GetApplConfigByApp_ParameterId_App_Config_KeyAsync(PGPGenerator.M10BusinessProcess.GetApplConfigByApp_ParameterId_App_Config_KeyRequest request) {
            return base.Channel.GetApplConfigByApp_ParameterId_App_Config_KeyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationConfigurationAll(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest request) {
            return base.Channel.GetApplicationConfigurationAll(request);
        }
        
        public System.Data.DataTable GetApplicationConfigurationAll(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CompanyId = CompanyId;
            inValue.ApplicationParameterId = ApplicationParameterId;
            inValue.ApplicationConfigurationKey = ApplicationConfigurationKey;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationConfigurationAll(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplicationConfigurationAllResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllResponse> GetApplicationConfigurationAllAsync(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationAllRequest request) {
            return base.Channel.GetApplicationConfigurationAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountApplicationServiceCategory(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest request) {
            return base.Channel.GetRowsCountApplicationServiceCategory(request);
        }
        
        public int GetRowsCountApplicationServiceCategory(string CategoryName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest();
            inValue.CategoryName = CategoryName;
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountApplicationServiceCategory(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountApplicationServiceCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryResponse> GetRowsCountApplicationServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationServiceCategoryRequest request) {
            return base.Channel.GetRowsCountApplicationServiceCategoryAsync(request);
        }
        
        public int GetRowsCountApplicationConfiguration(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey) {
            return base.Channel.GetRowsCountApplicationConfiguration(ApplicationId, CompanyId, ApplicationParameterId, ApplicationConfigurationKey);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountApplicationConfigurationAsync(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey) {
            return base.Channel.GetRowsCountApplicationConfigurationAsync(ApplicationId, CompanyId, ApplicationParameterId, ApplicationConfigurationKey);
        }
        
        public int GetRowsCountServices(System.Nullable<int> ApplicationId) {
            return base.Channel.GetRowsCountServices(ApplicationId);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountServicesAsync(System.Nullable<int> ApplicationId) {
            return base.Channel.GetRowsCountServicesAsync(ApplicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationServiceCategoryById(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest request) {
            return base.Channel.GetApplicationServiceCategoryById(request);
        }
        
        public System.Data.DataTable GetApplicationServiceCategoryById(string ServiceCategoryId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest();
            inValue.ServiceCategoryId = ServiceCategoryId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationServiceCategoryById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetApplicationServiceCategoryByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdResponse> GetApplicationServiceCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryByIdRequest request) {
            return base.Channel.GetApplicationServiceCategoryByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationServiceCategory(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest request) {
            return base.Channel.GetApplicationServiceCategory(request);
        }
        
        public System.Data.DataTable GetApplicationServiceCategory(string ServiceCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest();
            inValue.ServiceCategoryName = ServiceCategoryName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationServiceCategory(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetApplicationServiceCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryResponse> GetApplicationServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceCategoryRequest request) {
            return base.Channel.GetApplicationServiceCategoryAsync(request);
        }
        
        public string DeleteApplication(int ApplicationId) {
            return base.Channel.DeleteApplication(ApplicationId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteApplicationAsync(int ApplicationId) {
            return base.Channel.DeleteApplicationAsync(ApplicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetServiceByApplicationIdName(PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest request) {
            return base.Channel.GetServiceByApplicationIdName(request);
        }
        
        public System.Data.DataTable GetServiceByApplicationIdName(System.Nullable<int> ApplicationId, string ServiceName, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.ServiceName = ServiceName;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetServiceByApplicationIdName(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetServiceByApplicationIdNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameResponse> GetServiceByApplicationIdNameAsync(PGPGenerator.M10BusinessProcess.GetServiceByApplicationIdNameRequest request) {
            return base.Channel.GetServiceByApplicationIdNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetServiceByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetServiceById(PGPGenerator.M10BusinessProcess.GetServiceByIdRequest request) {
            return base.Channel.GetServiceById(request);
        }
        
        public System.Data.DataTable GetServiceById(System.Nullable<int> ServiceId, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetServiceByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetServiceByIdRequest();
            inValue.ServiceId = ServiceId;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetServiceByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetServiceById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetServiceByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceByIdResponse> GetServiceByIdAsync(PGPGenerator.M10BusinessProcess.GetServiceByIdRequest request) {
            return base.Channel.GetServiceByIdAsync(request);
        }
        
        public string CreateApplicationParameter(string ConfigurationParameterId, string ConfigurationParameterName) {
            return base.Channel.CreateApplicationParameter(ConfigurationParameterId, ConfigurationParameterName);
        }
        
        public System.Threading.Tasks.Task<string> CreateApplicationParameterAsync(string ConfigurationParameterId, string ConfigurationParameterName) {
            return base.Channel.CreateApplicationParameterAsync(ConfigurationParameterId, ConfigurationParameterName);
        }
        
        public string EditApplicationParameter(string ConfigurationParameterId, string ConfigurationParameterName) {
            return base.Channel.EditApplicationParameter(ConfigurationParameterId, ConfigurationParameterName);
        }
        
        public System.Threading.Tasks.Task<string> EditApplicationParameterAsync(string ConfigurationParameterId, string ConfigurationParameterName) {
            return base.Channel.EditApplicationParameterAsync(ConfigurationParameterId, ConfigurationParameterName);
        }
        
        public string DeleteApplicationParameter(string ConfigurationParameterId) {
            return base.Channel.DeleteApplicationParameter(ConfigurationParameterId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteApplicationParameterAsync(string ConfigurationParameterId) {
            return base.Channel.DeleteApplicationParameterAsync(ConfigurationParameterId);
        }
        
        public string CreateRoleType(string RoleTypeId, string RoleType) {
            return base.Channel.CreateRoleType(RoleTypeId, RoleType);
        }
        
        public System.Threading.Tasks.Task<string> CreateRoleTypeAsync(string RoleTypeId, string RoleType) {
            return base.Channel.CreateRoleTypeAsync(RoleTypeId, RoleType);
        }
        
        public string EditRoleType(string RoleTypeId, string RoleType) {
            return base.Channel.EditRoleType(RoleTypeId, RoleType);
        }
        
        public System.Threading.Tasks.Task<string> EditRoleTypeAsync(string RoleTypeId, string RoleType) {
            return base.Channel.EditRoleTypeAsync(RoleTypeId, RoleType);
        }
        
        public string DeleteRoleType(string RoleTypeId) {
            return base.Channel.DeleteRoleType(RoleTypeId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRoleTypeAsync(string RoleTypeId) {
            return base.Channel.DeleteRoleTypeAsync(RoleTypeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleTypeByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleTypeByName(PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest request) {
            return base.Channel.GetRoleTypeByName(request);
        }
        
        public System.Data.DataTable GetRoleTypeByName(string RoleType, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest();
            inValue.RoleType = RoleType;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleTypeByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleTypeByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleTypeByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleTypeByNameResponse> GetRoleTypeByNameAsync(PGPGenerator.M10BusinessProcess.GetRoleTypeByNameRequest request) {
            return base.Channel.GetRoleTypeByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleTypeByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleTypeById(PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest request) {
            return base.Channel.GetRoleTypeById(request);
        }
        
        public System.Data.DataTable GetRoleTypeById(string RoleTypeId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest();
            inValue.RoleTypeId = RoleTypeId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleTypeByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleTypeById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleTypeByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleTypeByIdResponse> GetRoleTypeByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleTypeByIdRequest request) {
            return base.Channel.GetRoleTypeByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountRoleType(PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest request) {
            return base.Channel.GetRowsCountRoleType(request);
        }
        
        public int GetRowsCountRoleType(string RoleTypeName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest();
            inValue.RoleTypeName = RoleTypeName;
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountRoleType(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountRoleTypeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeResponse> GetRowsCountRoleTypeAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleTypeRequest request) {
            return base.Channel.GetRowsCountRoleTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isRoleTypeAlreadyUsed(PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest request) {
            return base.Channel.isRoleTypeAlreadyUsed(request);
        }
        
        public bool isRoleTypeAlreadyUsed(string RoleTypeId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest();
            inValue.RoleTypeId = RoleTypeId;
            PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isRoleTypeAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isRoleTypeAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedResponse> isRoleTypeAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isRoleTypeAlreadyUsedRequest request) {
            return base.Channel.isRoleTypeAlreadyUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isDataValidResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isDataValid(PGPGenerator.M10BusinessProcess.isDataValidRequest request) {
            return base.Channel.isDataValid(request);
        }
        
        public bool isDataValid(out string MessageError) {
            PGPGenerator.M10BusinessProcess.isDataValidRequest inValue = new PGPGenerator.M10BusinessProcess.isDataValidRequest();
            PGPGenerator.M10BusinessProcess.isDataValidResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isDataValid(inValue);
            MessageError = retVal.MessageError;
            return retVal.isDataValidResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isDataValidResponse> isDataValidAsync(PGPGenerator.M10BusinessProcess.isDataValidRequest request) {
            return base.Channel.isDataValidAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationConfigurationUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest request) {
            return base.Channel.GetApplicationConfigurationUnionWithTempTable(request);
        }
        
        public System.Data.DataTable GetApplicationConfigurationUnionWithTempTable(System.Nullable<int> ApplicationId, System.Nullable<int> CompanyId, string ApplicationParameterId, string ApplicationConfigurationKey, System.Data.DataTable dttemp, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CompanyId = CompanyId;
            inValue.ApplicationParameterId = ApplicationParameterId;
            inValue.ApplicationConfigurationKey = ApplicationConfigurationKey;
            inValue.dttemp = dttemp;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationConfigurationUnionWithTempTable(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplicationConfigurationUnionWithTempTableResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableResponse> GetApplicationConfigurationUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetApplicationConfigurationUnionWithTempTableRequest request) {
            return base.Channel.GetApplicationConfigurationUnionWithTempTableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationServiceUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest request) {
            return base.Channel.GetApplicationServiceUnionWithTempTable(request);
        }
        
        public System.Data.DataTable GetApplicationServiceUnionWithTempTable(System.Nullable<int> ApplicationId, string ServiceName, System.Data.DataTable dtAction, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.ServiceName = ServiceName;
            inValue.dtAction = dtAction;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationServiceUnionWithTempTable(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplicationServiceUnionWithTempTableResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableResponse> GetApplicationServiceUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetApplicationServiceUnionWithTempTableRequest request) {
            return base.Channel.GetApplicationServiceUnionWithTempTableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCategoryByCodeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCategoryByCode(PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest request) {
            return base.Channel.GetCategoryByCode(request);
        }
        
        public System.Data.DataTable GetCategoryByCode(string HashString, string Code, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest inValue = new PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest();
            inValue.HashString = HashString;
            inValue.Code = Code;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetCategoryByCodeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCategoryByCode(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetCategoryByCodeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryByCodeResponse> GetCategoryByCodeAsync(PGPGenerator.M10BusinessProcess.GetCategoryByCodeRequest request) {
            return base.Channel.GetCategoryByCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCategory(PGPGenerator.M10BusinessProcess.GetCategoryRequest request) {
            return base.Channel.GetCategory(request);
        }
        
        public System.Data.DataTable GetCategory(string HashString, string Nama, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetCategoryRequest();
            inValue.HashString = HashString;
            inValue.Nama = Nama;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCategory(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryResponse> GetCategoryAsync(PGPGenerator.M10BusinessProcess.GetCategoryRequest request) {
            return base.Channel.GetCategoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetLocationByCodeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetLocationByCode(PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest request) {
            return base.Channel.GetLocationByCode(request);
        }
        
        public System.Data.DataTable GetLocationByCode(string HashString, string Code, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest inValue = new PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest();
            inValue.HashString = HashString;
            inValue.Code = Code;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetLocationByCodeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetLocationByCode(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetLocationByCodeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationByCodeResponse> GetLocationByCodeAsync(PGPGenerator.M10BusinessProcess.GetLocationByCodeRequest request) {
            return base.Channel.GetLocationByCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetLocation(PGPGenerator.M10BusinessProcess.GetLocationRequest request) {
            return base.Channel.GetLocation(request);
        }
        
        public System.Data.DataTable GetLocation(string HashString, string Nama, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetLocationRequest();
            inValue.HashString = HashString;
            inValue.Nama = Nama;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetLocation(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationResponse> GetLocationAsync(PGPGenerator.M10BusinessProcess.GetLocationRequest request) {
            return base.Channel.GetLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCategory(PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest request) {
            return base.Channel.GetRowsCountCategory(request);
        }
        
        public int GetRowsCountCategory(string HashString, string Nama, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest();
            inValue.HashString = HashString;
            inValue.Nama = Nama;
            PGPGenerator.M10BusinessProcess.GetRowsCountCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCategory(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCategoryResponse> GetRowsCountCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCategoryRequest request) {
            return base.Channel.GetRowsCountCategoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountLocation(PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest request) {
            return base.Channel.GetRowsCountLocation(request);
        }
        
        public int GetRowsCountLocation(string HashString, string Nama, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest();
            inValue.HashString = HashString;
            inValue.Nama = Nama;
            PGPGenerator.M10BusinessProcess.GetRowsCountLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountLocation(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountLocationResponse> GetRowsCountLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountLocationRequest request) {
            return base.Channel.GetRowsCountLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountRole(PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest request) {
            return base.Channel.GetRowsCountRole(request);
        }
        
        public int GetRowsCountRole(string RoleName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest();
            inValue.RoleName = RoleName;
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountRole(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountRoleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleResponse> GetRowsCountRoleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleRequest request) {
            return base.Channel.GetRowsCountRoleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRole(PGPGenerator.M10BusinessProcess.GetRoleRequest request) {
            return base.Channel.GetRole(request);
        }
        
        public System.Data.DataTable GetRole(string RoleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleRequest();
            inValue.RoleName = RoleName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRole(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleResponse> GetRoleAsync(PGPGenerator.M10BusinessProcess.GetRoleRequest request) {
            return base.Channel.GetRoleAsync(request);
        }
        
        public string CreateRole(string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge) {
            return base.Channel.CreateRole(RoleTypeId, RoleName, dtActionRoleCompany, dtActionRoleMerchandiseStructure, dtActionRoleModulePriviledge);
        }
        
        public System.Threading.Tasks.Task<string> CreateRoleAsync(string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge) {
            return base.Channel.CreateRoleAsync(RoleTypeId, RoleName, dtActionRoleCompany, dtActionRoleMerchandiseStructure, dtActionRoleModulePriviledge);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleById(PGPGenerator.M10BusinessProcess.GetRoleByIdRequest request) {
            return base.Channel.GetRoleById(request);
        }
        
        public System.Data.DataTable GetRoleById(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleByIdRequest();
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleByIdResponse> GetRoleByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleByIdRequest request) {
            return base.Channel.GetRoleByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isRoleAlreadyUsed(PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest request) {
            return base.Channel.isRoleAlreadyUsed(request);
        }
        
        public bool isRoleAlreadyUsed(int RoleId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest();
            inValue.RoleId = RoleId;
            PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isRoleAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isRoleAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedResponse> isRoleAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isRoleAlreadyUsedRequest request) {
            return base.Channel.isRoleAlreadyUsedAsync(request);
        }
        
        public string EditRole(int RoleId, string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge) {
            return base.Channel.EditRole(RoleId, RoleTypeId, RoleName, dtActionRoleCompany, dtActionRoleMerchandiseStructure, dtActionRoleModulePriviledge);
        }
        
        public System.Threading.Tasks.Task<string> EditRoleAsync(int RoleId, string RoleTypeId, string RoleName, System.Data.DataTable dtActionRoleCompany, System.Data.DataTable dtActionRoleMerchandiseStructure, System.Data.DataTable dtActionRoleModulePriviledge) {
            return base.Channel.EditRoleAsync(RoleId, RoleTypeId, RoleName, dtActionRoleCompany, dtActionRoleMerchandiseStructure, dtActionRoleModulePriviledge);
        }
        
        public string DeleteRole(int RoleId) {
            return base.Channel.DeleteRole(RoleId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRoleAsync(int RoleId) {
            return base.Channel.DeleteRoleAsync(RoleId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountRoleById(PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest request) {
            return base.Channel.GetRowsCountRoleById(request);
        }
        
        public int GetRowsCountRoleById(int RoleId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest();
            inValue.RoleId = RoleId;
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountRoleById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountRoleByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdResponse> GetRowsCountRoleByIdAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleByIdRequest request) {
            return base.Channel.GetRowsCountRoleByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleMerchandiseStructureUnionAction(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest request) {
            return base.Channel.GetRoleMerchandiseStructureUnionAction(request);
        }
        
        public System.Data.DataTable GetRoleMerchandiseStructureUnionAction(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest();
            inValue.RoleId = RoleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleMerchandiseStructureUnionAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleMerchandiseStructureUnionActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionResponse> GetRoleMerchandiseStructureUnionActionAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureUnionActionRequest request) {
            return base.Channel.GetRoleMerchandiseStructureUnionActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleMerchandiseStructure(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest request) {
            return base.Channel.GetRoleMerchandiseStructure(request);
        }
        
        public System.Data.DataTable GetRoleMerchandiseStructure(string CategoryId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest();
            inValue.CategoryId = CategoryId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleMerchandiseStructure(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleMerchandiseStructureResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureResponse> GetRoleMerchandiseStructureAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureRequest request) {
            return base.Channel.GetRoleMerchandiseStructureAsync(request);
        }
        
        public int GetRowsCountRoleMerchandiseStructure(int RoleId, string CategoryId) {
            return base.Channel.GetRowsCountRoleMerchandiseStructure(RoleId, CategoryId);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountRoleMerchandiseStructureAsync(int RoleId, string CategoryId) {
            return base.Channel.GetRowsCountRoleMerchandiseStructureAsync(RoleId, CategoryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleMerchandiseStructureById(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest request) {
            return base.Channel.GetRoleMerchandiseStructureById(request);
        }
        
        public System.Data.DataTable GetRoleMerchandiseStructureById(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest();
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleMerchandiseStructureById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleMerchandiseStructureByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdResponse> GetRoleMerchandiseStructureByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleMerchandiseStructureByIdRequest request) {
            return base.Channel.GetRoleMerchandiseStructureByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleCompanyUnionAction(PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest request) {
            return base.Channel.GetRoleCompanyUnionAction(request);
        }
        
        public System.Data.DataTable GetRoleCompanyUnionAction(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest();
            inValue.RoleId = RoleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleCompanyUnionAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleCompanyUnionActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionResponse> GetRoleCompanyUnionActionAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyUnionActionRequest request) {
            return base.Channel.GetRoleCompanyUnionActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleCompany(PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest request) {
            return base.Channel.GetRoleCompany(request);
        }
        
        public System.Data.DataTable GetRoleCompany(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest();
            inValue.CompanyName = CompanyName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleCompanyResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleCompany(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleCompanyResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyResponse> GetRoleCompanyAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyRequest request) {
            return base.Channel.GetRoleCompanyAsync(request);
        }
        
        public int GetRowsCountRoleCompany(int RoleId, System.Nullable<int> CompanyId) {
            return base.Channel.GetRowsCountRoleCompany(RoleId, CompanyId);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountRoleCompanyAsync(int RoleId, System.Nullable<int> CompanyId) {
            return base.Channel.GetRowsCountRoleCompanyAsync(RoleId, CompanyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleCompanyById(PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest request) {
            return base.Channel.GetRoleCompanyById(request);
        }
        
        public System.Data.DataTable GetRoleCompanyById(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest();
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleCompanyById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleCompanyByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdResponse> GetRoleCompanyByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleCompanyByIdRequest request) {
            return base.Channel.GetRoleCompanyByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetRoleModulePrivilegeUnionTempAction(request);
        }
        
        public System.Data.DataTable GetRoleModulePrivilegeUnionTempAction(int RoleId, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest();
            inValue.RoleId = RoleId;
            inValue.ModuleId = ModuleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModulePrivilegeUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModulePrivilegeUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionResponse> GetRoleModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetRoleModulePrivilegeUnionTempActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModulePrivilegeAll(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest request) {
            return base.Channel.GetRoleModulePrivilegeAll(request);
        }
        
        public System.Data.DataTable GetRoleModulePrivilegeAll(int RoleId, int ModuleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest();
            inValue.RoleId = RoleId;
            inValue.ModuleId = ModuleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModulePrivilegeAll(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModulePrivilegeAllResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllResponse> GetRoleModulePrivilegeAllAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeAllRequest request) {
            return base.Channel.GetRoleModulePrivilegeAllAsync(request);
        }
        
        public int GetRowsCountRoleModulePrivilege(int RoleId, System.Nullable<int> ModuleId, string PrivilegeId) {
            return base.Channel.GetRowsCountRoleModulePrivilege(RoleId, ModuleId, PrivilegeId);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountRoleModulePrivilegeAsync(int RoleId, System.Nullable<int> ModuleId, string PrivilegeId) {
            return base.Channel.GetRowsCountRoleModulePrivilegeAsync(RoleId, ModuleId, PrivilegeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModulePrivilege(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest request) {
            return base.Channel.GetRoleModulePrivilege(request);
        }
        
        public System.Data.DataTable GetRoleModulePrivilege(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest();
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModulePrivilege(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModulePrivilegeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeResponse> GetRoleModulePrivilegeAsync(PGPGenerator.M10BusinessProcess.GetRoleModulePrivilegeRequest request) {
            return base.Channel.GetRoleModulePrivilegeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountModulePrivilegeUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest request) {
            return base.Channel.GetRowsCountModulePrivilegeUnionWithTemp(request);
        }
        
        public int GetRowsCountModulePrivilegeUnionWithTemp(int ModuleId, System.Data.DataTable dtAction, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest();
            inValue.ModuleId = ModuleId;
            inValue.dtAction = dtAction;
            PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountModulePrivilegeUnionWithTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountModulePrivilegeUnionWithTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempResponse> GetRowsCountModulePrivilegeUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModulePrivilegeUnionWithTempRequest request) {
            return base.Channel.GetRowsCountModulePrivilegeUnionWithTempAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountRoleModuleUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest request) {
            return base.Channel.GetRowsCountRoleModuleUnionWithTemp(request);
        }
        
        public int GetRowsCountRoleModuleUnionWithTemp(int RoleId, System.Data.DataTable dtAction, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest();
            inValue.RoleId = RoleId;
            inValue.dtAction = dtAction;
            PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountRoleModuleUnionWithTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountRoleModuleUnionWithTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempResponse> GetRowsCountRoleModuleUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountRoleModuleUnionWithTempRequest request) {
            return base.Channel.GetRowsCountRoleModuleUnionWithTempAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModuleUnionTempAction(PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest request) {
            return base.Channel.GetRoleModuleUnionTempAction(request);
        }
        
        public System.Data.DataTable GetRoleModuleUnionTempAction(int RoleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, string FieldOrder, string MethodOrder, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest();
            inValue.RoleId = RoleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            inValue.FieldOrder = FieldOrder;
            inValue.MethodOrder = MethodOrder;
            PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModuleUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModuleUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionResponse> GetRoleModuleUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleUnionTempActionRequest request) {
            return base.Channel.GetRoleModuleUnionTempActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModuleById(PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest request) {
            return base.Channel.GetRoleModuleById(request);
        }
        
        public System.Data.DataTable GetRoleModuleById(int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest();
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleModuleByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModuleById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModuleByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleByIdResponse> GetRoleModuleByIdAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleByIdRequest request) {
            return base.Channel.GetRoleModuleByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRoleModuleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRoleModule(PGPGenerator.M10BusinessProcess.GetRoleModuleRequest request) {
            return base.Channel.GetRoleModule(request);
        }
        
        public System.Data.DataTable GetRoleModule(string RoleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRoleModuleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRoleModuleRequest();
            inValue.RoleName = RoleName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetRoleModuleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRoleModule(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRoleModuleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRoleModuleResponse> GetRoleModuleAsync(PGPGenerator.M10BusinessProcess.GetRoleModuleRequest request) {
            return base.Channel.GetRoleModuleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetMarkModulePrivilege(PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest request) {
            return base.Channel.GetMarkModulePrivilege(request);
        }
        
        public System.Data.DataTable GetMarkModulePrivilege(System.Nullable<int> RoleId, int ModuleId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest inValue = new PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest();
            inValue.RoleId = RoleId;
            inValue.ModuleId = ModuleId;
            PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetMarkModulePrivilege(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetMarkModulePrivilegeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeResponse> GetMarkModulePrivilegeAsync(PGPGenerator.M10BusinessProcess.GetMarkModulePrivilegeRequest request) {
            return base.Channel.GetMarkModulePrivilegeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetModulePrivilegeUnionTempAction(request);
        }
        
        public System.Data.DataTable GetModulePrivilegeUnionTempAction(string PrivilegeName, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest();
            inValue.PrivilegeName = PrivilegeName;
            inValue.ModuleId = ModuleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModulePrivilegeUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModulePrivilegeUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionResponse> GetModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetModulePrivilegeUnionTempActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyUnionTableAction(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest request) {
            return base.Channel.GetRowsCountCompanyUnionTableAction(request);
        }
        
        public int GetRowsCountCompanyUnionTableAction(string searching, System.Data.DataTable dt, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest();
            inValue.searching = searching;
            inValue.dt = dt;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyUnionTableAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountCompanyUnionTableActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionResponse> GetRowsCountCompanyUnionTableActionAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyUnionTableActionRequest request) {
            return base.Channel.GetRowsCountCompanyUnionTableActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyUnionTempAction(PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest request) {
            return base.Channel.GetCompanyUnionTempAction(request);
        }
        
        public System.Data.DataTable GetCompanyUnionTempAction(string CompanyName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest();
            inValue.CompanyName = CompanyName;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionResponse> GetCompanyUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetCompanyUnionTempActionRequest request) {
            return base.Channel.GetCompanyUnionTempActionAsync(request);
        }
        
        public int GetRowsCountPrivilege(string Searching) {
            return base.Channel.GetRowsCountPrivilege(Searching);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountPrivilegeAsync(string Searching) {
            return base.Channel.GetRowsCountPrivilegeAsync(Searching);
        }
        
        public string CreatePrivilege(string PrivilegeId, string PrivilegeName) {
            return base.Channel.CreatePrivilege(PrivilegeId, PrivilegeName);
        }
        
        public System.Threading.Tasks.Task<string> CreatePrivilegeAsync(string PrivilegeId, string PrivilegeName) {
            return base.Channel.CreatePrivilegeAsync(PrivilegeId, PrivilegeName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrivilege(PGPGenerator.M10BusinessProcess.GetPrivilegeRequest request) {
            return base.Channel.GetPrivilege(request);
        }
        
        public System.Data.DataTable GetPrivilege(string PrivilegeName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetPrivilegeRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrivilegeRequest();
            inValue.PrivilegeName = PrivilegeName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetPrivilegeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrivilege(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetPrivilegeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeResponse> GetPrivilegeAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeRequest request) {
            return base.Channel.GetPrivilegeAsync(request);
        }
        
        public string EditPrivilege(string PrivilegeId, string PrivilegeName) {
            return base.Channel.EditPrivilege(PrivilegeId, PrivilegeName);
        }
        
        public System.Threading.Tasks.Task<string> EditPrivilegeAsync(string PrivilegeId, string PrivilegeName) {
            return base.Channel.EditPrivilegeAsync(PrivilegeId, PrivilegeName);
        }
        
        public string DeleteModuleCategory(int ModuleCategoryId) {
            return base.Channel.DeleteModuleCategory(ModuleCategoryId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteModuleCategoryAsync(int ModuleCategoryId) {
            return base.Channel.DeleteModuleCategoryAsync(ModuleCategoryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrivilegeById(PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest request) {
            return base.Channel.GetPrivilegeById(request);
        }
        
        public System.Data.DataTable GetPrivilegeById(string PrivilegeID, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest();
            inValue.PrivilegeID = PrivilegeID;
            PGPGenerator.M10BusinessProcess.GetPrivilegeByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrivilegeById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetPrivilegeByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeByIdResponse> GetPrivilegeByIdAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeByIdRequest request) {
            return base.Channel.GetPrivilegeByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isPrivilegeAlreadyUsed(PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest request) {
            return base.Channel.isPrivilegeAlreadyUsed(request);
        }
        
        public bool isPrivilegeAlreadyUsed(string PrivilegeId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest();
            inValue.PrivilegeId = PrivilegeId;
            PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isPrivilegeAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isPrivilegeAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedResponse> isPrivilegeAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isPrivilegeAlreadyUsedRequest request) {
            return base.Channel.isPrivilegeAlreadyUsedAsync(request);
        }
        
        public int GetRowsCountCategoryUnionWithTemp(string HashString, string searching, System.Data.DataTable dt) {
            return base.Channel.GetRowsCountCategoryUnionWithTemp(HashString, searching, dt);
        }
        
        public System.Threading.Tasks.Task<int> GetRowsCountCategoryUnionWithTempAsync(string HashString, string searching, System.Data.DataTable dt) {
            return base.Channel.GetRowsCountCategoryUnionWithTempAsync(HashString, searching, dt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCategoryUnionTableTemp(PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest request) {
            return base.Channel.GetCategoryUnionTableTemp(request);
        }
        
        public System.Data.DataTable GetCategoryUnionTableTemp(string HashString, string Desription, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest();
            inValue.HashString = HashString;
            inValue.Desription = Desription;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCategoryUnionTableTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCategoryUnionTableTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempResponse> GetCategoryUnionTableTempAsync(PGPGenerator.M10BusinessProcess.GetCategoryUnionTableTempRequest request) {
            return base.Channel.GetCategoryUnionTableTempAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleUnionTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleUnionTemp(PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest request) {
            return base.Channel.GetModuleUnionTemp(request);
        }
        
        public System.Data.DataTable GetModuleUnionTemp(string ModuleName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest();
            inValue.ModuleName = ModuleName;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleUnionTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleUnionTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleUnionTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleUnionTempResponse> GetModuleUnionTempAsync(PGPGenerator.M10BusinessProcess.GetModuleUnionTempRequest request) {
            return base.Channel.GetModuleUnionTempAsync(request);
        }
        
        public string CreateProcessLog(string ApplicationName) {
            return base.Channel.CreateProcessLog(ApplicationName);
        }
        
        public System.Threading.Tasks.Task<string> CreateProcessLogAsync(string ApplicationName) {
            return base.Channel.CreateProcessLogAsync(ApplicationName);
        }
        
        public string UpdateProcessLogToEnd() {
            return base.Channel.UpdateProcessLogToEnd();
        }
        
        public System.Threading.Tasks.Task<string> UpdateProcessLogToEndAsync() {
            return base.Channel.UpdateProcessLogToEndAsync();
        }
        
        public string UpdateProcessLogToError(string ApplicationName, string ErrorDescription) {
            return base.Channel.UpdateProcessLogToError(ApplicationName, ErrorDescription);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProcessLogToErrorAsync(string ApplicationName, string ErrorDescription) {
            return base.Channel.UpdateProcessLogToErrorAsync(ApplicationName, ErrorDescription);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleUnionTempByAppId(PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest request) {
            return base.Channel.GetModuleUnionTempByAppId(request);
        }
        
        public System.Data.DataTable GetModuleUnionTempByAppId(int ApplicationaId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest();
            inValue.ApplicationaId = ApplicationaId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleUnionTempByAppId(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleUnionTempByAppIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdResponse> GetModuleUnionTempByAppIdAsync(PGPGenerator.M10BusinessProcess.GetModuleUnionTempByAppIdRequest request) {
            return base.Channel.GetModuleUnionTempByAppIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyRoleNewResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyRoleNew(PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest request) {
            return base.Channel.GetCompanyRoleNew(request);
        }
        
        public System.Data.DataTable GetCompanyRoleNew(int CompanyId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest();
            inValue.CompanyId = CompanyId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyRoleNewResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyRoleNew(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyRoleNewResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyRoleNewResponse> GetCompanyRoleNewAsync(PGPGenerator.M10BusinessProcess.GetCompanyRoleNewRequest request) {
            return base.Channel.GetCompanyRoleNewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrinterTypeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrinterType(PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest request) {
            return base.Channel.GetPrinterType(request);
        }
        
        public System.Data.DataTable GetPrinterType(out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest();
            PGPGenerator.M10BusinessProcess.GetPrinterTypeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrinterType(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetPrinterTypeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterTypeResponse> GetPrinterTypeAsync(PGPGenerator.M10BusinessProcess.GetPrinterTypeRequest request) {
            return base.Channel.GetPrinterTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrinterListResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrinterList(PGPGenerator.M10BusinessProcess.GetPrinterListRequest request) {
            return base.Channel.GetPrinterList(request);
        }
        
        public System.Data.DataTable GetPrinterList(string EnterpriseModule, string LocationCode, string PrinterTypeId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetPrinterListRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrinterListRequest();
            inValue.EnterpriseModule = EnterpriseModule;
            inValue.LocationCode = LocationCode;
            inValue.PrinterTypeId = PrinterTypeId;
            PGPGenerator.M10BusinessProcess.GetPrinterListResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrinterList(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetPrinterListResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterListResponse> GetPrinterListAsync(PGPGenerator.M10BusinessProcess.GetPrinterListRequest request) {
            return base.Channel.GetPrinterListAsync(request);
        }
        
        public string CreateUserDefaultPrinter(string EnterpriseModule, string LocationCode, int DefaultPrinterId) {
            return base.Channel.CreateUserDefaultPrinter(EnterpriseModule, LocationCode, DefaultPrinterId);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserDefaultPrinterAsync(string EnterpriseModule, string LocationCode, int DefaultPrinterId) {
            return base.Channel.CreateUserDefaultPrinterAsync(EnterpriseModule, LocationCode, DefaultPrinterId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserDefaultPrinter(PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest request) {
            return base.Channel.GetUserDefaultPrinter(request);
        }
        
        public string GetUserDefaultPrinter(string EnterpriseModule, string LocationCode, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest();
            inValue.EnterpriseModule = EnterpriseModule;
            inValue.LocationCode = LocationCode;
            PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserDefaultPrinter(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserDefaultPrinterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterResponse> GetUserDefaultPrinterAsync(PGPGenerator.M10BusinessProcess.GetUserDefaultPrinterRequest request) {
            return base.Channel.GetUserDefaultPrinterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyByName(PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest request) {
            return base.Channel.GetCompanyByName(request);
        }
        
        public System.Data.DataTable GetCompanyByName(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest();
            inValue.CompanyName = CompanyName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyByNameResponse> GetCompanyByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyByNameRequest request) {
            return base.Channel.GetCompanyByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyById(PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest request) {
            return base.Channel.GetCompanyById(request);
        }
        
        public System.Data.DataTable GetCompanyById(int CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest();
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.GetCompanyByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetCompanyByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyByIdResponse> GetCompanyByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyByIdRequest request) {
            return base.Channel.GetCompanyByIdAsync(request);
        }
        
        public void CreateCompany(string CompanyName, string CompanyShortName, bool IsEnterprise) {
            base.Channel.CreateCompany(CompanyName, CompanyShortName, IsEnterprise);
        }
        
        public System.Threading.Tasks.Task CreateCompanyAsync(string CompanyName, string CompanyShortName, bool IsEnterprise) {
            return base.Channel.CreateCompanyAsync(CompanyName, CompanyShortName, IsEnterprise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyConfigurationAll(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest request) {
            return base.Channel.GetCompanyConfigurationAll(request);
        }
        
        public System.Data.DataTable GetCompanyConfigurationAll(System.Nullable<int> CompanyId, string CompanyParameterId, string CompanyConfigurationKey, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest();
            inValue.CompanyId = CompanyId;
            inValue.CompanyParameterId = CompanyParameterId;
            inValue.CompanyConfigurationKey = CompanyConfigurationKey;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyConfigurationAll(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetCompanyConfigurationAllResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllResponse> GetCompanyConfigurationAllAsync(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationAllRequest request) {
            return base.Channel.GetCompanyConfigurationAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyParameterByName(PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest request) {
            return base.Channel.GetCompanyParameterByName(request);
        }
        
        public System.Data.DataTable GetCompanyParameterByName(string CompanyParamName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest();
            inValue.CompanyParamName = CompanyParamName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyParameterByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyParameterByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameResponse> GetCompanyParameterByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyParameterByNameRequest request) {
            return base.Channel.GetCompanyParameterByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyParameterById(PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest request) {
            return base.Channel.GetCompanyParameterById(request);
        }
        
        public System.Data.DataTable GetCompanyParameterById(string CompanyParameterId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest();
            inValue.CompanyParameterId = CompanyParameterId;
            PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyParameterById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetCompanyParameterByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdResponse> GetCompanyParameterByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyParameterByIdRequest request) {
            return base.Channel.GetCompanyParameterByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyConfigurationParameter(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest request) {
            return base.Channel.GetRowsCountCompanyConfigurationParameter(request);
        }
        
        public int GetRowsCountCompanyConfigurationParameter(string ConfigName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest();
            inValue.ConfigName = ConfigName;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyConfigurationParameter(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyConfigurationParameterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterResponse> GetRowsCountCompanyConfigurationParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationParameterRequest request) {
            return base.Channel.GetRowsCountCompanyConfigurationParameterAsync(request);
        }
        
        public string EditCompany(int CompanyId, string CompanyName, string CompanyShortName, bool IsEnterprise) {
            return base.Channel.EditCompany(CompanyId, CompanyName, CompanyShortName, IsEnterprise);
        }
        
        public System.Threading.Tasks.Task<string> EditCompanyAsync(int CompanyId, string CompanyName, string CompanyShortName, bool IsEnterprise) {
            return base.Channel.EditCompanyAsync(CompanyId, CompanyName, CompanyShortName, IsEnterprise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isCompanyAlreadyUsed(PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest request) {
            return base.Channel.isCompanyAlreadyUsed(request);
        }
        
        public bool isCompanyAlreadyUsed(long CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest();
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isCompanyAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isCompanyAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedResponse> isCompanyAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isCompanyAlreadyUsedRequest request) {
            return base.Channel.isCompanyAlreadyUsedAsync(request);
        }
        
        public string DeleteCompany(int CompanyId) {
            return base.Channel.DeleteCompany(CompanyId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCompanyAsync(int CompanyId) {
            return base.Channel.DeleteCompanyAsync(CompanyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompany(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest request) {
            return base.Channel.GetRowsCountCompany(request);
        }
        
        public int GetRowsCountCompany(string CompanyName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest();
            inValue.CompanyName = CompanyName;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompany(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyResponse> GetRowsCountCompanyAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyRequest request) {
            return base.Channel.GetRowsCountCompanyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyParameter(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest request) {
            return base.Channel.GetRowsCountCompanyParameter(request);
        }
        
        public int GetRowsCountCompanyParameter(string CompanyParameterName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest();
            inValue.CompanyParameterName = CompanyParameterName;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyParameter(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyParameterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterResponse> GetRowsCountCompanyParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyParameterRequest request) {
            return base.Channel.GetRowsCountCompanyParameterAsync(request);
        }
        
        public string CreateCompanyParameter(string CompanyParameterId, string CompanyParameterName) {
            return base.Channel.CreateCompanyParameter(CompanyParameterId, CompanyParameterName);
        }
        
        public System.Threading.Tasks.Task<string> CreateCompanyParameterAsync(string CompanyParameterId, string CompanyParameterName) {
            return base.Channel.CreateCompanyParameterAsync(CompanyParameterId, CompanyParameterName);
        }
        
        public string EditCompanyParameter(string CompanyParameterId, string CompanyParameterName) {
            return base.Channel.EditCompanyParameter(CompanyParameterId, CompanyParameterName);
        }
        
        public System.Threading.Tasks.Task<string> EditCompanyParameterAsync(string CompanyParameterId, string CompanyParameterName) {
            return base.Channel.EditCompanyParameterAsync(CompanyParameterId, CompanyParameterName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isCompanyParameterAlreadyUsed(PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest request) {
            return base.Channel.isCompanyParameterAlreadyUsed(request);
        }
        
        public bool isCompanyParameterAlreadyUsed(string CompanyParameterId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest();
            inValue.CompanyParameterId = CompanyParameterId;
            PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isCompanyParameterAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isCompanyParameterAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedResponse> isCompanyParameterAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isCompanyParameterAlreadyUsedRequest request) {
            return base.Channel.isCompanyParameterAlreadyUsedAsync(request);
        }
        
        public string DeleteCompanyParameter(string CompanyParameterId) {
            return base.Channel.DeleteCompanyParameter(CompanyParameterId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCompanyParameterAsync(string CompanyParameterId) {
            return base.Channel.DeleteCompanyParameterAsync(CompanyParameterId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyLocation(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest request) {
            return base.Channel.GetRowsCountCompanyLocation(request);
        }
        
        public int GetRowsCountCompanyLocation(string CompanyName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest();
            inValue.CompanyName = CompanyName;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyLocation(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationResponse> GetRowsCountCompanyLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyLocationRequest request) {
            return base.Channel.GetRowsCountCompanyLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyLocationByName(PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest request) {
            return base.Channel.GetCompanyLocationByName(request);
        }
        
        public System.Data.DataTable GetCompanyLocationByName(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest();
            inValue.CompanyName = CompanyName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyLocationByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyLocationByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameResponse> GetCompanyLocationByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationByNameRequest request) {
            return base.Channel.GetCompanyLocationByNameAsync(request);
        }
        
        public string CreateCompanyLocation(int CompanyId, string LocationId) {
            return base.Channel.CreateCompanyLocation(CompanyId, LocationId);
        }
        
        public System.Threading.Tasks.Task<string> CreateCompanyLocationAsync(int CompanyId, string LocationId) {
            return base.Channel.CreateCompanyLocationAsync(CompanyId, LocationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyLocationById(PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest request) {
            return base.Channel.GetCompanyLocationById(request);
        }
        
        public System.Data.DataTable GetCompanyLocationById(System.Nullable<int> CompanyId, string LocationId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest();
            inValue.CompanyId = CompanyId;
            inValue.LocationId = LocationId;
            PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyLocationById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyLocationByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdResponse> GetCompanyLocationByIdAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationByIdRequest request) {
            return base.Channel.GetCompanyLocationByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetLocationNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetLocationName(PGPGenerator.M10BusinessProcess.GetLocationNameRequest request) {
            return base.Channel.GetLocationName(request);
        }
        
        public System.Data.DataTable GetLocationName(string HashString, string LocationId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetLocationNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetLocationNameRequest();
            inValue.HashString = HashString;
            inValue.LocationId = LocationId;
            PGPGenerator.M10BusinessProcess.GetLocationNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetLocationName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetLocationNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocationNameResponse> GetLocationNameAsync(PGPGenerator.M10BusinessProcess.GetLocationNameRequest request) {
            return base.Channel.GetLocationNameAsync(request);
        }
        
        public string DeleteCompanyLocation(int CompanyId, string LocationId) {
            return base.Channel.DeleteCompanyLocation(CompanyId, LocationId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCompanyLocationAsync(int CompanyId, string LocationId) {
            return base.Channel.DeleteCompanyLocationAsync(CompanyId, LocationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyConfiguration(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest request) {
            return base.Channel.GetRowsCountCompanyConfiguration(request);
        }
        
        public int GetRowsCountCompanyConfiguration(string ConfigKey, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest();
            inValue.ConfigKey = ConfigKey;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyConfiguration(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyConfigurationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationResponse> GetRowsCountCompanyConfigurationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyConfigurationRequest request) {
            return base.Channel.GetRowsCountCompanyConfigurationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyConfigurationByName(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest request) {
            return base.Channel.GetCompanyConfigurationByName(request);
        }
        
        public System.Data.DataTable GetCompanyConfigurationByName(string CompanyConfigKey, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest();
            inValue.CompanyConfigKey = CompanyConfigKey;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyConfigurationByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyConfigurationByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameResponse> GetCompanyConfigurationByNameAsync(PGPGenerator.M10BusinessProcess.GetCompanyConfigurationByNameRequest request) {
            return base.Channel.GetCompanyConfigurationByNameAsync(request);
        }
        
        public string CreateCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2) {
            return base.Channel.CreateCompanyConfiguration(CompanyId, CompanyParameterId, CompanyConfigKey, Value1, Value2);
        }
        
        public System.Threading.Tasks.Task<string> CreateCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2) {
            return base.Channel.CreateCompanyConfigurationAsync(CompanyId, CompanyParameterId, CompanyConfigKey, Value1, Value2);
        }
        
        public string EditCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2) {
            return base.Channel.EditCompanyConfiguration(CompanyId, CompanyParameterId, CompanyConfigKey, Value1, Value2);
        }
        
        public System.Threading.Tasks.Task<string> EditCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey, string Value1, string Value2) {
            return base.Channel.EditCompanyConfigurationAsync(CompanyId, CompanyParameterId, CompanyConfigKey, Value1, Value2);
        }
        
        public string DeleteCompanyConfiguration(int CompanyId, string CompanyParameterId, string CompanyConfigKey) {
            return base.Channel.DeleteCompanyConfiguration(CompanyId, CompanyParameterId, CompanyConfigKey);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCompanyConfigurationAsync(int CompanyId, string CompanyParameterId, string CompanyConfigKey) {
            return base.Channel.DeleteCompanyConfigurationAsync(CompanyId, CompanyParameterId, CompanyConfigKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountCompanyCutOffData(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest request) {
            return base.Channel.GetRowsCountCompanyCutOffData(request);
        }
        
        public int GetRowsCountCompanyCutOffData(string CompanyName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest();
            inValue.CompanyName = CompanyName;
            PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountCompanyCutOffData(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountCompanyCutOffDataResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataResponse> GetRowsCountCompanyCutOffDataAsync(PGPGenerator.M10BusinessProcess.GetRowsCountCompanyCutOffDataRequest request) {
            return base.Channel.GetRowsCountCompanyCutOffDataAsync(request);
        }
        
        public string CreateCompanyCutOffData(int CompanyId, string CutOffDate) {
            return base.Channel.CreateCompanyCutOffData(CompanyId, CutOffDate);
        }
        
        public System.Threading.Tasks.Task<string> CreateCompanyCutOffDataAsync(int CompanyId, string CutOffDate) {
            return base.Channel.CreateCompanyCutOffDataAsync(CompanyId, CutOffDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyCutOffData(PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest request) {
            return base.Channel.GetCompanyCutOffData(request);
        }
        
        public System.Data.DataTable GetCompanyCutOffData(string CompanyName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest();
            inValue.CompanyName = CompanyName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyCutOffData(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyCutOffDataResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataResponse> GetCompanyCutOffDataAsync(PGPGenerator.M10BusinessProcess.GetCompanyCutOffDataRequest request) {
            return base.Channel.GetCompanyCutOffDataAsync(request);
        }
        
        public string DeleteCompanyCutOffData(int CompanyId, string CutOffDate) {
            return base.Channel.DeleteCompanyCutOffData(CompanyId, CutOffDate);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCompanyCutOffDataAsync(int CompanyId, string CutOffDate) {
            return base.Channel.DeleteCompanyCutOffDataAsync(CompanyId, CutOffDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountServiceCategory(PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest request) {
            return base.Channel.GetRowsCountServiceCategory(request);
        }
        
        public int GetRowsCountServiceCategory(string ServiceCategoryName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest();
            inValue.ServiceCategoryName = ServiceCategoryName;
            PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountServiceCategory(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountServiceCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryResponse> GetRowsCountServiceCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountServiceCategoryRequest request) {
            return base.Channel.GetRowsCountServiceCategoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetServiceCategoryByName(PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest request) {
            return base.Channel.GetServiceCategoryByName(request);
        }
        
        public System.Data.DataTable GetServiceCategoryByName(string ServiceCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest();
            inValue.ServiceCategoryName = ServiceCategoryName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetServiceCategoryByName(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetServiceCategoryByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameResponse> GetServiceCategoryByNameAsync(PGPGenerator.M10BusinessProcess.GetServiceCategoryByNameRequest request) {
            return base.Channel.GetServiceCategoryByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetServiceCategoryById(PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest request) {
            return base.Channel.GetServiceCategoryById(request);
        }
        
        public System.Data.DataTable GetServiceCategoryById(string ServiceCategoryId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest();
            inValue.ServiceCategoryId = ServiceCategoryId;
            PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetServiceCategoryById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetServiceCategoryByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdResponse> GetServiceCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetServiceCategoryByIdRequest request) {
            return base.Channel.GetServiceCategoryByIdAsync(request);
        }
        
        public void CreateServiceCategory(string ServiceCategoryId, string ServiceCategoryName) {
            base.Channel.CreateServiceCategory(ServiceCategoryId, ServiceCategoryName);
        }
        
        public System.Threading.Tasks.Task CreateServiceCategoryAsync(string ServiceCategoryId, string ServiceCategoryName) {
            return base.Channel.CreateServiceCategoryAsync(ServiceCategoryId, ServiceCategoryName);
        }
        
        public string EditServiceCategory(string ServiceCategoryId, string ServiceCategoryName) {
            return base.Channel.EditServiceCategory(ServiceCategoryId, ServiceCategoryName);
        }
        
        public System.Threading.Tasks.Task<string> EditServiceCategoryAsync(string ServiceCategoryId, string ServiceCategoryName) {
            return base.Channel.EditServiceCategoryAsync(ServiceCategoryId, ServiceCategoryName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isServiceCategoryAlreadyUsed(PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest request) {
            return base.Channel.isServiceCategoryAlreadyUsed(request);
        }
        
        public bool isServiceCategoryAlreadyUsed(string ServiceCategoryId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest();
            inValue.ServiceCategoryId = ServiceCategoryId;
            PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isServiceCategoryAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isServiceCategoryAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedResponse> isServiceCategoryAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isServiceCategoryAlreadyUsedRequest request) {
            return base.Channel.isServiceCategoryAlreadyUsedAsync(request);
        }
        
        public string DeleteServiceCategory(string ServiceCategoryId) {
            return base.Channel.DeleteServiceCategory(ServiceCategoryId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceCategoryAsync(string ServiceCategoryId) {
            return base.Channel.DeleteServiceCategoryAsync(ServiceCategoryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserRole(PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest request) {
            return base.Channel.GetRowsCountUserRole(request);
        }
        
        public int GetRowsCountUserRole(string Name, System.Nullable<int> CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest();
            inValue.Name = Name;
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserRole(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserRoleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleResponse> GetRowsCountUserRoleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserRoleRequest request) {
            return base.Channel.GetRowsCountUserRoleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserRoleByUserName(PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest request) {
            return base.Channel.GetUserRoleByUserName(request);
        }
        
        public System.Data.DataTable GetUserRoleByUserName(string Name, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest();
            inValue.Name = Name;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserRoleByUserName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserRoleByUserNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameResponse> GetUserRoleByUserNameAsync(PGPGenerator.M10BusinessProcess.GetUserRoleByUserNameRequest request) {
            return base.Channel.GetUserRoleByUserNameAsync(request);
        }
        
        public string CreateUserRole(string UserName, int RoleId, string AuditUserName) {
            return base.Channel.CreateUserRole(UserName, RoleId, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserRoleAsync(string UserName, int RoleId, string AuditUserName) {
            return base.Channel.CreateUserRoleAsync(UserName, RoleId, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserRoleLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserRoleLocation(PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest request) {
            return base.Channel.GetUserRoleLocation(request);
        }
        
        public System.Data.DataTable GetUserRoleLocation(string Name, int CompanyId, int RoleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest();
            inValue.Name = Name;
            inValue.CompanyId = CompanyId;
            inValue.RoleId = RoleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserRoleLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserRoleLocation(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserRoleLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleLocationResponse> GetUserRoleLocationAsync(PGPGenerator.M10BusinessProcess.GetUserRoleLocationRequest request) {
            return base.Channel.GetUserRoleLocationAsync(request);
        }
        
        public string DeleteUserRoleLocation(string UserName, int RoleId, int CompanyId, string LocationId) {
            return base.Channel.DeleteUserRoleLocation(UserName, RoleId, CompanyId, LocationId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserRoleLocationAsync(string UserName, int RoleId, int CompanyId, string LocationId) {
            return base.Channel.DeleteUserRoleLocationAsync(UserName, RoleId, CompanyId, LocationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserRoleLocationUnionWithTempTable(PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest request) {
            return base.Channel.GetUserRoleLocationUnionWithTempTable(request);
        }
        
        public System.Data.DataTable GetUserRoleLocationUnionWithTempTable(System.Nullable<int> CompanyId, System.Nullable<int> RoleId, string UserName, string LocationId, System.Data.DataTable dttemp, System.Nullable<int> PageSize, System.Nullable<int> PageIndex, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest();
            inValue.CompanyId = CompanyId;
            inValue.RoleId = RoleId;
            inValue.UserName = UserName;
            inValue.LocationId = LocationId;
            inValue.dttemp = dttemp;
            inValue.PageSize = PageSize;
            inValue.PageIndex = PageIndex;
            PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserRoleLocationUnionWithTempTable(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetUserRoleLocationUnionWithTempTableResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableResponse> GetUserRoleLocationUnionWithTempTableAsync(PGPGenerator.M10BusinessProcess.GetUserRoleLocationUnionWithTempTableRequest request) {
            return base.Channel.GetUserRoleLocationUnionWithTempTableAsync(request);
        }
        
        public string EditUserRole(string UserName, int RoleId, int CompanyId, string AuditUserName, System.Data.DataTable dtLocation) {
            return base.Channel.EditUserRole(UserName, RoleId, CompanyId, AuditUserName, dtLocation);
        }
        
        public System.Threading.Tasks.Task<string> EditUserRoleAsync(string UserName, int RoleId, int CompanyId, string AuditUserName, System.Data.DataTable dtLocation) {
            return base.Channel.EditUserRoleAsync(UserName, RoleId, CompanyId, AuditUserName, dtLocation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCompanyLocationUnionWithTemp(PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest request) {
            return base.Channel.GetCompanyLocationUnionWithTemp(request);
        }
        
        public System.Data.DataTable GetCompanyLocationUnionWithTemp(int CompanyId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest();
            inValue.CompanyId = CompanyId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCompanyLocationUnionWithTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCompanyLocationUnionWithTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempResponse> GetCompanyLocationUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetCompanyLocationUnionWithTempRequest request) {
            return base.Channel.GetCompanyLocationUnionWithTempAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserRoleLocationAlreadyUsed(PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest request) {
            return base.Channel.isUserRoleLocationAlreadyUsed(request);
        }
        
        public bool isUserRoleLocationAlreadyUsed(string UserName, int RoleId, int CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest();
            inValue.UserName = UserName;
            inValue.RoleId = RoleId;
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserRoleLocationAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserRoleLocationAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedResponse> isUserRoleLocationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isUserRoleLocationAlreadyUsedRequest request) {
            return base.Channel.isUserRoleLocationAlreadyUsedAsync(request);
        }
        
        public string DeleteUserRole(string UserName, int RoleId) {
            return base.Channel.DeleteUserRole(UserName, RoleId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserRoleAsync(string UserName, int RoleId) {
            return base.Channel.DeleteUserRoleAsync(UserName, RoleId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserRoleExistsResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserRoleExists(PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest request) {
            return base.Channel.isUserRoleExists(request);
        }
        
        public bool isUserRoleExists(string UserName, int RoleId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest inValue = new PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest();
            inValue.UserName = UserName;
            inValue.RoleId = RoleId;
            PGPGenerator.M10BusinessProcess.isUserRoleExistsResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserRoleExists(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserRoleExistsResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserRoleExistsResponse> isUserRoleExistsAsync(PGPGenerator.M10BusinessProcess.isUserRoleExistsRequest request) {
            return base.Channel.isUserRoleExistsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserModuleExistsResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserModuleExists(PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest request) {
            return base.Channel.isUserModuleExists(request);
        }
        
        public bool isUserModuleExists(string UserName, int ModuleId, string PrivilegeId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest inValue = new PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest();
            inValue.UserName = UserName;
            inValue.ModuleId = ModuleId;
            inValue.PrivilegeId = PrivilegeId;
            PGPGenerator.M10BusinessProcess.isUserModuleExistsResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserModuleExists(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserModuleExistsResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserModuleExistsResponse> isUserModuleExistsAsync(PGPGenerator.M10BusinessProcess.isUserModuleExistsRequest request) {
            return base.Channel.isUserModuleExistsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserModuleByUserName(PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest request) {
            return base.Channel.GetUserModuleByUserName(request);
        }
        
        public System.Data.DataTable GetUserModuleByUserName(string UserName, System.Nullable<int> ModuleId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest();
            inValue.UserName = UserName;
            inValue.ModuleId = ModuleId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserModuleByUserName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserModuleByUserNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameResponse> GetUserModuleByUserNameAsync(PGPGenerator.M10BusinessProcess.GetUserModuleByUserNameRequest request) {
            return base.Channel.GetUserModuleByUserNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserModule(PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest request) {
            return base.Channel.GetRowsCountUserModule(request);
        }
        
        public int GetRowsCountUserModule(string Name, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest();
            inValue.Name = Name;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserModule(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserModuleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleResponse> GetRowsCountUserModuleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserModuleRequest request) {
            return base.Channel.GetRowsCountUserModuleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserCompany(PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest request) {
            return base.Channel.GetRowsCountUserCompany(request);
        }
        
        public int GetRowsCountUserCompany(string Name, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest();
            inValue.Name = Name;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserCompany(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserCompanyResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyResponse> GetRowsCountUserCompanyAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserCompanyRequest request) {
            return base.Channel.GetRowsCountUserCompanyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserCompanyResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserCompany(PGPGenerator.M10BusinessProcess.GetUserCompanyRequest request) {
            return base.Channel.GetUserCompany(request);
        }
        
        public System.Data.DataTable GetUserCompany(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserCompanyRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserCompanyRequest();
            inValue.UserName = UserName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserCompanyResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserCompany(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserCompanyResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserCompanyResponse> GetUserCompanyAsync(PGPGenerator.M10BusinessProcess.GetUserCompanyRequest request) {
            return base.Channel.GetUserCompanyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserCompanyExistsResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserCompanyExists(PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest request) {
            return base.Channel.isUserCompanyExists(request);
        }
        
        public bool isUserCompanyExists(string UserName, int CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest inValue = new PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest();
            inValue.UserName = UserName;
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.isUserCompanyExistsResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserCompanyExists(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserCompanyExistsResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserCompanyExistsResponse> isUserCompanyExistsAsync(PGPGenerator.M10BusinessProcess.isUserCompanyExistsRequest request) {
            return base.Channel.isUserCompanyExistsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserLocationExistsResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserLocationExists(PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest request) {
            return base.Channel.isUserLocationExists(request);
        }
        
        public bool isUserLocationExists(string UserName, int CompanyId, string LocationId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest inValue = new PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest();
            inValue.UserName = UserName;
            inValue.CompanyId = CompanyId;
            inValue.LocationId = LocationId;
            PGPGenerator.M10BusinessProcess.isUserLocationExistsResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserLocationExists(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserLocationExistsResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserLocationExistsResponse> isUserLocationExistsAsync(PGPGenerator.M10BusinessProcess.isUserLocationExistsRequest request) {
            return base.Channel.isUserLocationExistsAsync(request);
        }
        
        public string CreateUserCompany(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName) {
            return base.Channel.CreateUserCompany(UserName, CompanyId, dtCompany, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserCompanyAsync(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName) {
            return base.Channel.CreateUserCompanyAsync(UserName, CompanyId, dtCompany, AuditUserName);
        }
        
        public string DeleteUserCompany(string UserName, int CompanyId) {
            return base.Channel.DeleteUserCompany(UserName, CompanyId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserCompanyAsync(string UserName, int CompanyId) {
            return base.Channel.DeleteUserCompanyAsync(UserName, CompanyId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Response PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserModule2(PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request request) {
            return base.Channel.GetRowsCountUserModule2(request);
        }
        
        public int GetRowsCountUserModule2(string Name, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request();
            inValue.Name = Name;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Response retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserModule2(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserModule2Result;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Response> GetRowsCountUserModule2Async(PGPGenerator.M10BusinessProcess.GetRowsCountUserModule2Request request) {
            return base.Channel.GetRowsCountUserModule2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Response PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserModuleByUserName2(PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request request) {
            return base.Channel.GetUserModuleByUserName2(request);
        }
        
        public System.Data.DataTable GetUserModuleByUserName2(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request inValue = new PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request();
            inValue.UserName = UserName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Response retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserModuleByUserName2(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserModuleByUserName2Result;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Response> GetUserModuleByUserName2Async(PGPGenerator.M10BusinessProcess.GetUserModuleByUserName2Request request) {
            return base.Channel.GetUserModuleByUserName2Async(request);
        }
        
        public string CreateUserModulePrivilege(string UserName, int ModuleId, System.Data.DataTable dtPrivilege) {
            return base.Channel.CreateUserModulePrivilege(UserName, ModuleId, dtPrivilege);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserModulePrivilegeAsync(string UserName, int ModuleId, System.Data.DataTable dtPrivilege) {
            return base.Channel.CreateUserModulePrivilegeAsync(UserName, ModuleId, dtPrivilege);
        }
        
        public string EditUserModulePrivilege(string UserName, int ModuleId, System.Data.DataTable dtPrivilege, string AuditUserName) {
            return base.Channel.EditUserModulePrivilege(UserName, ModuleId, dtPrivilege, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> EditUserModulePrivilegeAsync(string UserName, int ModuleId, System.Data.DataTable dtPrivilege, string AuditUserName) {
            return base.Channel.EditUserModulePrivilegeAsync(UserName, ModuleId, dtPrivilege, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserModulePrivilegeUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetUserModulePrivilegeUnionTempAction(request);
        }
        
        public System.Data.DataTable GetUserModulePrivilegeUnionTempAction(string UserName, System.Nullable<int> ModuleId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest();
            inValue.UserName = UserName;
            inValue.ModuleId = ModuleId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserModulePrivilegeUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserModulePrivilegeUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionResponse> GetUserModulePrivilegeUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserModulePrivilegeUnionTempActionRequest request) {
            return base.Channel.GetUserModulePrivilegeUnionTempActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTemp(PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest request) {
            return base.Channel.GetRowsCountUserModulePrivilegeUnionWithTemp(request);
        }
        
        public int GetRowsCountUserModulePrivilegeUnionWithTemp(string UserName, int ModuleId, System.Data.DataTable dtAction, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest();
            inValue.UserName = UserName;
            inValue.ModuleId = ModuleId;
            inValue.dtAction = dtAction;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserModulePrivilegeUnionWithTemp(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountUserModulePrivilegeUnionWithTempResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempResponse> GetRowsCountUserModulePrivilegeUnionWithTempAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserModulePrivilegeUnionWithTempRequest request) {
            return base.Channel.GetRowsCountUserModulePrivilegeUnionWithTempAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserLocationByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserLocationByName(PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest request) {
            return base.Channel.GetUserLocationByName(request);
        }
        
        public System.Data.DataTable GetUserLocationByName(string Name, int CompanyId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest();
            inValue.Name = Name;
            inValue.CompanyId = CompanyId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserLocationByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserLocationByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserLocationByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationByNameResponse> GetUserLocationByNameAsync(PGPGenerator.M10BusinessProcess.GetUserLocationByNameRequest request) {
            return base.Channel.GetUserLocationByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserLocationUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest request) {
            return base.Channel.GetUserLocationUnionTempAction(request);
        }
        
        public System.Data.DataTable GetUserLocationUnionTempAction(string UserName, System.Nullable<int> CompanyId, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest();
            inValue.UserName = UserName;
            inValue.CompanyId = CompanyId;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserLocationUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserLocationUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionResponse> GetUserLocationUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserLocationUnionTempActionRequest request) {
            return base.Channel.GetUserLocationUnionTempActionAsync(request);
        }
        
        public string EditUserLocation(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName) {
            return base.Channel.EditUserLocation(UserName, CompanyId, dtCompany, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> EditUserLocationAsync(string UserName, int CompanyId, System.Data.DataTable dtCompany, string AuditUserName) {
            return base.Channel.EditUserLocationAsync(UserName, CompanyId, dtCompany, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserLocationAlreadyUsed(PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest request) {
            return base.Channel.isUserLocationAlreadyUsed(request);
        }
        
        public bool isUserLocationAlreadyUsed(string UserName, int CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest();
            inValue.UserName = UserName;
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserLocationAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserLocationAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedResponse> isUserLocationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isUserLocationAlreadyUsedRequest request) {
            return base.Channel.isUserLocationAlreadyUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserMerchandise(PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest request) {
            return base.Channel.GetRowsCountUserMerchandise(request);
        }
        
        public int GetRowsCountUserMerchandise(string Name, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest();
            inValue.Name = Name;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserMerchandise(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserMerchandiseResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseResponse> GetRowsCountUserMerchandiseAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserMerchandiseRequest request) {
            return base.Channel.GetRowsCountUserMerchandiseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserMerchandiseResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserMerchandise(PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest request) {
            return base.Channel.GetUserMerchandise(request);
        }
        
        public System.Data.DataTable GetUserMerchandise(string UserName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest();
            inValue.UserName = UserName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserMerchandiseResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserMerchandise(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserMerchandiseResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserMerchandiseResponse> GetUserMerchandiseAsync(PGPGenerator.M10BusinessProcess.GetUserMerchandiseRequest request) {
            return base.Channel.GetUserMerchandiseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserMerchandiseUnionTempAction(PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest request) {
            return base.Channel.GetUserMerchandiseUnionTempAction(request);
        }
        
        public System.Data.DataTable GetUserMerchandiseUnionTempAction(string UserName, System.Data.DataTable dtAction, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest();
            inValue.UserName = UserName;
            inValue.dtAction = dtAction;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserMerchandiseUnionTempAction(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserMerchandiseUnionTempActionResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionResponse> GetUserMerchandiseUnionTempActionAsync(PGPGenerator.M10BusinessProcess.GetUserMerchandiseUnionTempActionRequest request) {
            return base.Channel.GetUserMerchandiseUnionTempActionAsync(request);
        }
        
        public string CreateUserMerchandise(string UserName, System.Data.DataTable dtCategory, string AuditUserName) {
            return base.Channel.CreateUserMerchandise(UserName, dtCategory, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserMerchandiseAsync(string UserName, System.Data.DataTable dtCategory, string AuditUserName) {
            return base.Channel.CreateUserMerchandiseAsync(UserName, dtCategory, AuditUserName);
        }
        
        public string EditUserMerchandise(string UserName, System.Data.DataTable dtCategory, string AuditUserName) {
            return base.Channel.EditUserMerchandise(UserName, dtCategory, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> EditUserMerchandiseAsync(string UserName, System.Data.DataTable dtCategory, string AuditUserName) {
            return base.Channel.EditUserMerchandiseAsync(UserName, dtCategory, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isUserMerchandiseExists(PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest request) {
            return base.Channel.isUserMerchandiseExists(request);
        }
        
        public bool isUserMerchandiseExists(string UserName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest inValue = new PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest();
            inValue.UserName = UserName;
            PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isUserMerchandiseExists(inValue);
            MessageError = retVal.MessageError;
            return retVal.isUserMerchandiseExistsResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsResponse> isUserMerchandiseExistsAsync(PGPGenerator.M10BusinessProcess.isUserMerchandiseExistsRequest request) {
            return base.Channel.isUserMerchandiseExistsAsync(request);
        }
        
        public string CreateUserModulePrivilegeSingle(string UserName, int ModuelId, string PrivilegeId, string AuditUserName) {
            return base.Channel.CreateUserModulePrivilegeSingle(UserName, ModuelId, PrivilegeId, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserModulePrivilegeSingleAsync(string UserName, int ModuelId, string PrivilegeId, string AuditUserName) {
            return base.Channel.CreateUserModulePrivilegeSingleAsync(UserName, ModuelId, PrivilegeId, AuditUserName);
        }
        
        public string CreateUserLocation(string UserName, int CompanyId, System.Data.DataTable dtLocation, string AuditUserName) {
            return base.Channel.CreateUserLocation(UserName, CompanyId, dtLocation, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserLocationAsync(string UserName, int CompanyId, System.Data.DataTable dtLocation, string AuditUserName) {
            return base.Channel.CreateUserLocationAsync(UserName, CompanyId, dtLocation, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountUserLocation(PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest request) {
            return base.Channel.GetRowsCountUserLocation(request);
        }
        
        public int GetRowsCountUserLocation(string Name, System.Nullable<int> CompanyId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest();
            inValue.Name = Name;
            inValue.CompanyId = CompanyId;
            PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountUserLocation(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountUserLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationResponse> GetRowsCountUserLocationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountUserLocationRequest request) {
            return base.Channel.GetRowsCountUserLocationAsync(request);
        }
        
        public string EditUserCompany(string UserName, int CompanyId, string AuditUserName) {
            return base.Channel.EditUserCompany(UserName, CompanyId, AuditUserName);
        }
        
        public System.Threading.Tasks.Task<string> EditUserCompanyAsync(string UserName, int CompanyId, string AuditUserName) {
            return base.Channel.EditUserCompanyAsync(UserName, CompanyId, AuditUserName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleCategoryByName(PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest request) {
            return base.Channel.GetModuleCategoryByName(request);
        }
        
        public System.Data.DataTable GetModuleCategoryByName(string ModuleCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest();
            inValue.ModuleCategoryName = ModuleCategoryName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleCategoryByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleCategoryByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameResponse> GetModuleCategoryByNameAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryByNameRequest request) {
            return base.Channel.GetModuleCategoryByNameAsync(request);
        }
        
        public void SessionExtend() {
            base.Channel.SessionExtend();
        }
        
        public System.Threading.Tasks.Task SessionExtendAsync() {
            return base.Channel.SessionExtendAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetLastCutOffIDResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetLastCutOffID(PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest request) {
            return base.Channel.GetLastCutOffID(request);
        }
        
        public short GetLastCutOffID(int companyID, out System.DateTime cutOffDate, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest inValue = new PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest();
            inValue.companyID = companyID;
            PGPGenerator.M10BusinessProcess.GetLastCutOffIDResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetLastCutOffID(inValue);
            cutOffDate = retVal.cutOffDate;
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetLastCutOffIDResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLastCutOffIDResponse> GetLastCutOffIDAsync(PGPGenerator.M10BusinessProcess.GetLastCutOffIDRequest request) {
            return base.Channel.GetLastCutOffIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleByName(PGPGenerator.M10BusinessProcess.GetModuleByNameRequest request) {
            return base.Channel.GetModuleByName(request);
        }
        
        public System.Data.DataTable GetModuleByName(string ModuleName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleByNameRequest();
            inValue.ModuleName = ModuleName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByNameResponse> GetModuleByNameAsync(PGPGenerator.M10BusinessProcess.GetModuleByNameRequest request) {
            return base.Channel.GetModuleByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleById(PGPGenerator.M10BusinessProcess.GetModuleByIdRequest request) {
            return base.Channel.GetModuleById(request);
        }
        
        public System.Data.DataTable GetModuleById(int ModuleId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleByIdRequest();
            inValue.ModuleId = ModuleId;
            PGPGenerator.M10BusinessProcess.GetModuleByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByIdResponse> GetModuleByIdAsync(PGPGenerator.M10BusinessProcess.GetModuleByIdRequest request) {
            return base.Channel.GetModuleByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleCategoryById(PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest request) {
            return base.Channel.GetModuleCategoryById(request);
        }
        
        public System.Data.DataTable GetModuleCategoryById(int ModuleCategoryId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest();
            inValue.ModuleCategoryId = ModuleCategoryId;
            PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleCategoryById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetModuleCategoryByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdResponse> GetModuleCategoryByIdAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryByIdRequest request) {
            return base.Channel.GetModuleCategoryByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrivilegeForModule(PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest request) {
            return base.Channel.GetPrivilegeForModule(request);
        }
        
        public System.Data.DataTable GetPrivilegeForModule(int ModuleId, char StatusForm, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest();
            inValue.ModuleId = ModuleId;
            inValue.StatusForm = StatusForm;
            PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrivilegeForModule(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetPrivilegeForModuleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleResponse> GetPrivilegeForModuleAsync(PGPGenerator.M10BusinessProcess.GetPrivilegeForModuleRequest request) {
            return base.Channel.GetPrivilegeForModuleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleTypeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleType(PGPGenerator.M10BusinessProcess.GetModuleTypeRequest request) {
            return base.Channel.GetModuleType(request);
        }
        
        public System.Data.DataTable GetModuleType(out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleTypeRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleTypeRequest();
            PGPGenerator.M10BusinessProcess.GetModuleTypeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleType(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleTypeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleTypeResponse> GetModuleTypeAsync(PGPGenerator.M10BusinessProcess.GetModuleTypeRequest request) {
            return base.Channel.GetModuleTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleFilterTypeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleFilterType(PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest request) {
            return base.Channel.GetModuleFilterType(request);
        }
        
        public System.Data.DataTable GetModuleFilterType(out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest();
            PGPGenerator.M10BusinessProcess.GetModuleFilterTypeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleFilterType(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleFilterTypeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleFilterTypeResponse> GetModuleFilterTypeAsync(PGPGenerator.M10BusinessProcess.GetModuleFilterTypeRequest request) {
            return base.Channel.GetModuleFilterTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetAppParameterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetAppParameter(PGPGenerator.M10BusinessProcess.GetAppParameterRequest request) {
            return base.Channel.GetAppParameter(request);
        }
        
        public System.Data.DataTable GetAppParameter(string ApplicationName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetAppParameterRequest inValue = new PGPGenerator.M10BusinessProcess.GetAppParameterRequest();
            inValue.ApplicationName = ApplicationName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetAppParameterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetAppParameter(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetAppParameterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetAppParameterResponse> GetAppParameterAsync(PGPGenerator.M10BusinessProcess.GetAppParameterRequest request) {
            return base.Channel.GetAppParameterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountAppParameter(PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest request) {
            return base.Channel.GetRowsCountAppParameter(request);
        }
        
        public int GetRowsCountAppParameter(string ApplicationName, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest();
            inValue.ApplicationName = ApplicationName;
            PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountAppParameter(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountAppParameterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterResponse> GetRowsCountAppParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountAppParameterRequest request) {
            return base.Channel.GetRowsCountAppParameterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleCategoryListResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleCategoryList(PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest request) {
            return base.Channel.GetModuleCategoryList(request);
        }
        
        public System.Data.DataTable GetModuleCategoryList(string ModuleCategoryName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest();
            inValue.ModuleCategoryName = ModuleCategoryName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleCategoryListResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleCategoryList(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetModuleCategoryListResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleCategoryListResponse> GetModuleCategoryListAsync(PGPGenerator.M10BusinessProcess.GetModuleCategoryListRequest request) {
            return base.Channel.GetModuleCategoryListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountModuleCategoryList(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest request) {
            return base.Channel.GetRowsCountModuleCategoryList(request);
        }
        
        public int GetRowsCountModuleCategoryList(string ModuleCategoryName, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest();
            inValue.ModuleCategoryName = ModuleCategoryName;
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountModuleCategoryList(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRowsCountModuleCategoryListResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListResponse> GetRowsCountModuleCategoryListAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryListRequest request) {
            return base.Channel.GetRowsCountModuleCategoryListAsync(request);
        }
        
        public string CreateModuleCategory(string ModuleCategoryName, string Icon) {
            return base.Channel.CreateModuleCategory(ModuleCategoryName, Icon);
        }
        
        public System.Threading.Tasks.Task<string> CreateModuleCategoryAsync(string ModuleCategoryName, string Icon) {
            return base.Channel.CreateModuleCategoryAsync(ModuleCategoryName, Icon);
        }
        
        public string CreateModule(string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege) {
            return base.Channel.CreateModule(ModuleName, ApplicationId, Url, Icon, ModuleCategoryId, IsActive, ModuleTypeId, ModuleFilterTypeId, dtPrivilege);
        }
        
        public System.Threading.Tasks.Task<string> CreateModuleAsync(string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege) {
            return base.Channel.CreateModuleAsync(ModuleName, ApplicationId, Url, Icon, ModuleCategoryId, IsActive, ModuleTypeId, ModuleFilterTypeId, dtPrivilege);
        }
        
        public string EditModuleCategory(int ModuleCategoryId, string ModuleCategoryName, string Icon) {
            return base.Channel.EditModuleCategory(ModuleCategoryId, ModuleCategoryName, Icon);
        }
        
        public System.Threading.Tasks.Task<string> EditModuleCategoryAsync(int ModuleCategoryId, string ModuleCategoryName, string Icon) {
            return base.Channel.EditModuleCategoryAsync(ModuleCategoryId, ModuleCategoryName, Icon);
        }
        
        public string EditModule(int ModuleId, string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege) {
            return base.Channel.EditModule(ModuleId, ModuleName, ApplicationId, Url, Icon, ModuleCategoryId, IsActive, ModuleTypeId, ModuleFilterTypeId, dtPrivilege);
        }
        
        public System.Threading.Tasks.Task<string> EditModuleAsync(int ModuleId, string ModuleName, int ApplicationId, string Url, string Icon, int ModuleCategoryId, int IsActive, string ModuleTypeId, int ModuleFilterTypeId, System.Data.DataTable dtPrivilege) {
            return base.Channel.EditModuleAsync(ModuleId, ModuleName, ApplicationId, Url, Icon, ModuleCategoryId, IsActive, ModuleTypeId, ModuleFilterTypeId, dtPrivilege);
        }
        
        public string DeletePrivilege(string PrivilegeId) {
            return base.Channel.DeletePrivilege(PrivilegeId);
        }
        
        public System.Threading.Tasks.Task<string> DeletePrivilegeAsync(string PrivilegeId) {
            return base.Channel.DeletePrivilegeAsync(PrivilegeId);
        }
        
        public string DeleteModule(int ModuleId) {
            return base.Channel.DeleteModule(ModuleId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteModuleAsync(int ModuleId) {
            return base.Channel.DeleteModuleAsync(ModuleId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isModuleCategoryAlreadyUsed(PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest request) {
            return base.Channel.isModuleCategoryAlreadyUsed(request);
        }
        
        public bool isModuleCategoryAlreadyUsed(int ModuleCategoryId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest();
            inValue.ModuleCategoryId = ModuleCategoryId;
            PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isModuleCategoryAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isModuleCategoryAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedResponse> isModuleCategoryAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isModuleCategoryAlreadyUsedRequest request) {
            return base.Channel.isModuleCategoryAlreadyUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isModuleAlreadyUsed(PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest request) {
            return base.Channel.isModuleAlreadyUsed(request);
        }
        
        public bool isModuleAlreadyUsed(int ModuleId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest();
            inValue.ModuleId = ModuleId;
            PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isModuleAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isModuleAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedResponse> isModuleAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isModuleAlreadyUsedRequest request) {
            return base.Channel.isModuleAlreadyUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountModuleCategory(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest request) {
            return base.Channel.GetRowsCountModuleCategory(request);
        }
        
        public int GetRowsCountModuleCategory(string ModuleCategoryName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest();
            inValue.ModuleCategoryName = ModuleCategoryName;
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountModuleCategory(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountModuleCategoryResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryResponse> GetRowsCountModuleCategoryAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleCategoryRequest request) {
            return base.Channel.GetRowsCountModuleCategoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountModuleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountModule(PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest request) {
            return base.Channel.GetRowsCountModule(request);
        }
        
        public int GetRowsCountModule(string ModuleName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest();
            inValue.ModuleName = ModuleName;
            PGPGenerator.M10BusinessProcess.GetRowsCountModuleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountModule(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountModuleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountModuleResponse> GetRowsCountModuleAsync(PGPGenerator.M10BusinessProcess.GetRowsCountModuleRequest request) {
            return base.Channel.GetRowsCountModuleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserLocation(PGPGenerator.M10BusinessProcess.GetUserLocationRequest request) {
            return base.Channel.GetUserLocation(request);
        }
        
        public System.Data.DataTable GetUserLocation(string Username, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserLocationRequest();
            inValue.Username = Username;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetUserLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserLocation(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserLocationResponse> GetUserLocationAsync(PGPGenerator.M10BusinessProcess.GetUserLocationRequest request) {
            return base.Channel.GetUserLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetLocNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetLocName(PGPGenerator.M10BusinessProcess.GetLocNameRequest request) {
            return base.Channel.GetLocName(request);
        }
        
        public string GetLocName(string ConnStr, string LocationId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetLocNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetLocNameRequest();
            inValue.ConnStr = ConnStr;
            inValue.LocationId = LocationId;
            PGPGenerator.M10BusinessProcess.GetLocNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetLocName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetLocNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetLocNameResponse> GetLocNameAsync(PGPGenerator.M10BusinessProcess.GetLocNameRequest request) {
            return base.Channel.GetLocNameAsync(request);
        }
        
        public string DeleteUserLocation(string UserName, int CompanyId, string LocationId) {
            return base.Channel.DeleteUserLocation(UserName, CompanyId, LocationId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserLocationAsync(string UserName, int CompanyId, string LocationId) {
            return base.Channel.DeleteUserLocationAsync(UserName, CompanyId, LocationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetCekRolModPrivUser(PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest request) {
            return base.Channel.GetCekRolModPrivUser(request);
        }
        
        public bool GetCekRolModPrivUser(string UserName, int ModuleId, string PrivilegeId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest inValue = new PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest();
            inValue.UserName = UserName;
            inValue.ModuleId = ModuleId;
            inValue.PrivilegeId = PrivilegeId;
            PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetCekRolModPrivUser(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetCekRolModPrivUserResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserResponse> GetCekRolModPrivUserAsync(PGPGenerator.M10BusinessProcess.GetCekRolModPrivUserRequest request) {
            return base.Channel.GetCekRolModPrivUserAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRolModPrivUserName(PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest request) {
            return base.Channel.GetRolModPrivUserName(request);
        }
        
        public System.Data.DataTable GetRolModPrivUserName(string UserName, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest();
            inValue.UserName = UserName;
            PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRolModPrivUserName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetRolModPrivUserNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameResponse> GetRolModPrivUserNameAsync(PGPGenerator.M10BusinessProcess.GetRolModPrivUserNameRequest request) {
            return base.Channel.GetRolModPrivUserNameAsync(request);
        }
        
        public string DeleteSingleUserModulePrivilege(string UserName, int ModuleId, string PrivilegeId) {
            return base.Channel.DeleteSingleUserModulePrivilege(UserName, ModuleId, PrivilegeId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSingleUserModulePrivilegeAsync(string UserName, int ModuleId, string PrivilegeId) {
            return base.Channel.DeleteSingleUserModulePrivilegeAsync(UserName, ModuleId, PrivilegeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetUserRoleByRoleId(PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest request) {
            return base.Channel.GetUserRoleByRoleId(request);
        }
        
        public System.Data.DataTable GetUserRoleByRoleId(int RoleId, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest();
            inValue.RoleId = RoleId;
            PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetUserRoleByRoleId(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetUserRoleByRoleIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdResponse> GetUserRoleByRoleIdAsync(PGPGenerator.M10BusinessProcess.GetUserRoleByRoleIdRequest request) {
            return base.Channel.GetUserRoleByRoleIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModuleByModuleTypeId(PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest request) {
            return base.Channel.GetModuleByModuleTypeId(request);
        }
        
        public System.Data.DataTable GetModuleByModuleTypeId(string Url, string ModuleTypeId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest();
            inValue.Url = Url;
            inValue.ModuleTypeId = ModuleTypeId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModuleByModuleTypeId(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetModuleByModuleTypeIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdResponse> GetModuleByModuleTypeIdAsync(PGPGenerator.M10BusinessProcess.GetModuleByModuleTypeIdRequest request) {
            return base.Channel.GetModuleByModuleTypeIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrinterBrandResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrinterBrand(PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest request) {
            return base.Channel.GetPrinterBrand(request);
        }
        
        public System.Data.DataTable GetPrinterBrand(out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest();
            PGPGenerator.M10BusinessProcess.GetPrinterBrandResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrinterBrand(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetPrinterBrandResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterBrandResponse> GetPrinterBrandAsync(PGPGenerator.M10BusinessProcess.GetPrinterBrandRequest request) {
            return base.Channel.GetPrinterBrandAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrinterLocationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrinterLocation(PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest request) {
            return base.Channel.GetPrinterLocation(request);
        }
        
        public System.Data.DataTable GetPrinterLocation(string PrinterId, string StoreNo, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest();
            inValue.PrinterId = PrinterId;
            inValue.StoreNo = StoreNo;
            PGPGenerator.M10BusinessProcess.GetPrinterLocationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrinterLocation(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetPrinterLocationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterLocationResponse> GetPrinterLocationAsync(PGPGenerator.M10BusinessProcess.GetPrinterLocationRequest request) {
            return base.Channel.GetPrinterLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetPrinterLocationIsDefault(PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest request) {
            return base.Channel.GetPrinterLocationIsDefault(request);
        }
        
        public System.Data.DataTable GetPrinterLocationIsDefault(string StoreNo, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest inValue = new PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest();
            inValue.StoreNo = StoreNo;
            PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetPrinterLocationIsDefault(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetPrinterLocationIsDefaultResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultResponse> GetPrinterLocationIsDefaultAsync(PGPGenerator.M10BusinessProcess.GetPrinterLocationIsDefaultRequest request) {
            return base.Channel.GetPrinterLocationIsDefaultAsync(request);
        }
        
        public string AuthenticateByUserName(string UserName, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticateByUserName(UserName, FromApplicationId, FromApplicationSession);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateByUserNameAsync(string UserName, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticateByUserNameAsync(UserName, FromApplicationId, FromApplicationSession);
        }
        
        public string AuthenticateByUserNameCompanyLocation(string UserName, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticateByUserNameCompanyLocation(UserName, CompanyId, LocationId, FromApplicationId, FromApplicationSession);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateByUserNameCompanyLocationAsync(string UserName, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticateByUserNameCompanyLocationAsync(UserName, CompanyId, LocationId, FromApplicationId, FromApplicationSession);
        }
        
        public string AuthenticatebyUserNamePassword(string UserName, string Password, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticatebyUserNamePassword(UserName, Password, CompanyId, LocationId, FromApplicationId, FromApplicationSession);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticatebyUserNamePasswordAsync(string UserName, string Password, System.Nullable<int> CompanyId, string LocationId, System.Nullable<int> FromApplicationId, string FromApplicationSession) {
            return base.Channel.AuthenticatebyUserNamePasswordAsync(UserName, Password, CompanyId, LocationId, FromApplicationId, FromApplicationSession);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.AuthorizeResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.Authorize(PGPGenerator.M10BusinessProcess.AuthorizeRequest request) {
            return base.Channel.Authorize(request);
        }
        
        public bool Authorize(int ModuleId, ref PGPGenerator.M10BusinessProcess.Privilege[] Privilege) {
            PGPGenerator.M10BusinessProcess.AuthorizeRequest inValue = new PGPGenerator.M10BusinessProcess.AuthorizeRequest();
            inValue.ModuleId = ModuleId;
            inValue.Privilege = Privilege;
            PGPGenerator.M10BusinessProcess.AuthorizeResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).Authorize(inValue);
            Privilege = retVal.Privilege;
            return retVal.AuthorizeResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.AuthorizeResponse> AuthorizeAsync(PGPGenerator.M10BusinessProcess.AuthorizeRequest request) {
            return base.Channel.AuthorizeAsync(request);
        }
        
        public System.Collections.Generic.Dictionary<string, PGPGenerator.M10BusinessProcess.ModuleDataContract[]> GetUserModule(System.Nullable<int> CompanyId, string Location, string ModuleTypeId, int ApplicationId) {
            return base.Channel.GetUserModule(CompanyId, Location, ModuleTypeId, ApplicationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, PGPGenerator.M10BusinessProcess.ModuleDataContract[]>> GetUserModuleAsync(System.Nullable<int> CompanyId, string Location, string ModuleTypeId, int ApplicationId) {
            return base.Channel.GetUserModuleAsync(CompanyId, Location, ModuleTypeId, ApplicationId);
        }
        
        public void CreateApplication(string ApplicationName, string ApplicationShortName, System.Data.DataTable dtAppConfig, System.Data.DataTable dtService, System.Data.DataTable dtOtherService) {
            base.Channel.CreateApplication(ApplicationName, ApplicationShortName, dtAppConfig, dtService, dtOtherService);
        }
        
        public System.Threading.Tasks.Task CreateApplicationAsync(string ApplicationName, string ApplicationShortName, System.Data.DataTable dtAppConfig, System.Data.DataTable dtService, System.Data.DataTable dtOtherService) {
            return base.Channel.CreateApplicationAsync(ApplicationName, ApplicationShortName, dtAppConfig, dtService, dtOtherService);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationById(PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest request) {
            return base.Channel.GetApplicationById(request);
        }
        
        public System.Data.DataTable GetApplicationById(int IDApplication, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest();
            inValue.IDApplication = IDApplication;
            PGPGenerator.M10BusinessProcess.GetApplicationByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationById(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplicationByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationByIdResponse> GetApplicationByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationByIdRequest request) {
            return base.Channel.GetApplicationByIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationByName(PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest request) {
            return base.Channel.GetApplicationByName(request);
        }
        
        public System.Data.DataTable GetApplicationByName(string ApplicationName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest();
            inValue.ApplicationName = ApplicationName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetApplicationByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationByName(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetApplicationByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationByNameResponse> GetApplicationByNameAsync(PGPGenerator.M10BusinessProcess.GetApplicationByNameRequest request) {
            return base.Channel.GetApplicationByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountApplication(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest request) {
            return base.Channel.GetRowsCountApplication(request);
        }
        
        public int GetRowsCountApplication(string AppName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest();
            inValue.AppName = AppName;
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountApplication(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountApplicationResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationResponse> GetRowsCountApplicationAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationRequest request) {
            return base.Channel.GetRowsCountApplicationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetRowsCountApplicationConfigurationParameter(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest request) {
            return base.Channel.GetRowsCountApplicationConfigurationParameter(request);
        }
        
        public int GetRowsCountApplicationConfigurationParameter(string ConfigName, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest inValue = new PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest();
            inValue.ConfigName = ConfigName;
            PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetRowsCountApplicationConfigurationParameter(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetRowsCountApplicationConfigurationParameterResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterResponse> GetRowsCountApplicationConfigurationParameterAsync(PGPGenerator.M10BusinessProcess.GetRowsCountApplicationConfigurationParameterRequest request) {
            return base.Channel.GetRowsCountApplicationConfigurationParameterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetModuleResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetModule(PGPGenerator.M10BusinessProcess.GetModuleRequest request) {
            return base.Channel.GetModule(request);
        }
        
        public System.Data.DataTable GetModule(string Url, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string MessageError) {
            PGPGenerator.M10BusinessProcess.GetModuleRequest inValue = new PGPGenerator.M10BusinessProcess.GetModuleRequest();
            inValue.Url = Url;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetModuleResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetModule(inValue);
            MessageError = retVal.MessageError;
            return retVal.GetModuleResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetModuleResponse> GetModuleAsync(PGPGenerator.M10BusinessProcess.GetModuleRequest request) {
            return base.Channel.GetModuleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isApplicationAlreadyUsed(PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest request) {
            return base.Channel.isApplicationAlreadyUsed(request);
        }
        
        public bool isApplicationAlreadyUsed(long ApplicationId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest();
            inValue.ApplicationId = ApplicationId;
            PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isApplicationAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isApplicationAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedResponse> isApplicationAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isApplicationAlreadyUsedRequest request) {
            return base.Channel.isApplicationAlreadyUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.isApplicationParameterAlreadyUsed(PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest request) {
            return base.Channel.isApplicationParameterAlreadyUsed(request);
        }
        
        public bool isApplicationParameterAlreadyUsed(string ApplicationConfigId, out string MessageError) {
            PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest inValue = new PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest();
            inValue.ApplicationConfigId = ApplicationConfigId;
            PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).isApplicationParameterAlreadyUsed(inValue);
            MessageError = retVal.MessageError;
            return retVal.isApplicationParameterAlreadyUsedResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedResponse> isApplicationParameterAlreadyUsedAsync(PGPGenerator.M10BusinessProcess.isApplicationParameterAlreadyUsedRequest request) {
            return base.Channel.isApplicationParameterAlreadyUsedAsync(request);
        }
        
        public string EditApplication(int ApplicationId, string ApplicationName, string ApplicationShortName, string[] dtAppConfig, string[] dtAppService, string[] dtOtherService) {
            return base.Channel.EditApplication(ApplicationId, ApplicationName, ApplicationShortName, dtAppConfig, dtAppService, dtOtherService);
        }
        
        public System.Threading.Tasks.Task<string> EditApplicationAsync(int ApplicationId, string ApplicationName, string ApplicationShortName, string[] dtAppConfig, string[] dtAppService, string[] dtOtherService) {
            return base.Channel.EditApplicationAsync(ApplicationId, ApplicationName, ApplicationShortName, dtAppConfig, dtAppService, dtOtherService);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationParameterByName(PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest request) {
            return base.Channel.GetApplicationParameterByName(request);
        }
        
        public System.Data.DataTable GetApplicationParameterByName(string ApplicationParamName, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest();
            inValue.ApplicationParamName = ApplicationParamName;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationParameterByName(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetApplicationParameterByNameResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameResponse> GetApplicationParameterByNameAsync(PGPGenerator.M10BusinessProcess.GetApplicationParameterByNameRequest request) {
            return base.Channel.GetApplicationParameterByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdResponse PGPGenerator.M10BusinessProcess.IBusinessProcess.GetApplicationParameterById(PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest request) {
            return base.Channel.GetApplicationParameterById(request);
        }
        
        public System.Data.DataTable GetApplicationParameterById(string ApplicationParamId, System.Nullable<int> PageIndex, System.Nullable<int> PageSize, out string ErrorMessage) {
            PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest inValue = new PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest();
            inValue.ApplicationParamId = ApplicationParamId;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdResponse retVal = ((PGPGenerator.M10BusinessProcess.IBusinessProcess)(this)).GetApplicationParameterById(inValue);
            ErrorMessage = retVal.ErrorMessage;
            return retVal.GetApplicationParameterByIdResult;
        }
        
        public System.Threading.Tasks.Task<PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdResponse> GetApplicationParameterByIdAsync(PGPGenerator.M10BusinessProcess.GetApplicationParameterByIdRequest request) {
            return base.Channel.GetApplicationParameterByIdAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="M10BusinessProcess.IRestService")]
    public interface IRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/CreateUserReprintLog", ReplyAction="http://tempuri.org/IRestService/CreateUserReprintLogResponse")]
        string CreateUserReprintLog(string applicationname, string documentno, string user_id, string typeid, int formid, int reportid, string printtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/CreateUserReprintLog", ReplyAction="http://tempuri.org/IRestService/CreateUserReprintLogResponse")]
        System.Threading.Tasks.Task<string> CreateUserReprintLogAsync(string applicationname, string documentno, string user_id, string typeid, int formid, int reportid, string printtime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestServiceChannel : PGPGenerator.M10BusinessProcess.IRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestServiceClient : System.ServiceModel.ClientBase<PGPGenerator.M10BusinessProcess.IRestService>, PGPGenerator.M10BusinessProcess.IRestService {
        
        public RestServiceClient() {
        }
        
        public RestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreateUserReprintLog(string applicationname, string documentno, string user_id, string typeid, int formid, int reportid, string printtime) {
            return base.Channel.CreateUserReprintLog(applicationname, documentno, user_id, typeid, formid, reportid, printtime);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserReprintLogAsync(string applicationname, string documentno, string user_id, string typeid, int formid, int reportid, string printtime) {
            return base.Channel.CreateUserReprintLogAsync(applicationname, documentno, user_id, typeid, formid, reportid, printtime);
        }
    }
}
